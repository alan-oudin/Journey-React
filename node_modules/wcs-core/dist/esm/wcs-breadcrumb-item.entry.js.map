{"file":"wcs-breadcrumb-item.entry.js","mappings":";;;AAAA,MAAM,iBAAiB,GAAG,8wDAA8wD,CAAC;AACzyD,gCAAe,iBAAiB;;MC8BnB,cAAc;;;oBAQC,KAAK;;IAE7B,MAAM;QACF,QACI,EAAC,IAAI,qDAAC,IAAI,EAAC,UAAU,IACjB,8DAAQ,EACP,CAAC,IAAI,CAAC,IAAI,KACP,6DAAM,KAAK,EAAC,WAAW,iBAAa,MAAM,IACrC,0BAA0B,CACxB,CACV,CACE,EACT;KACL;;;;;;","names":[],"sources":["src/components/breadcrumb-item/breadcrumb-item.scss?tag=wcs-breadcrumb-item&encapsulation=shadow","src/components/breadcrumb-item/breadcrumb-item.tsx"],"sourcesContent":["@import '../../style/focus-outline.scss';\n\n:host {\n    --wcs-breadcrumb-item-max-height: var(--wcs-semantic-size-s);\n    --wcs-breadcrumb-item-line-height: var(--wcs-semantic-font-line-height-large);\n    --wcs-breadcrumb-item-font-size: var(--wcs-semantic-font-size-body-3);\n\n    --wcs-breadcrumb-item-icon-color: var(--wcs-semantic-color-foreground-brand);\n    --wcs-breadcrumb-item-icon-font-size: 0.5rem;\n    --wcs-breadcrumb-item-gap: var(--wcs-semantic-spacing-base);\n\n    --wcs-breadcrumb-item-link-color: var(--wcs-semantic-color-text-link-default);\n    --wcs-breadcrumb-item-link-color-hover: var(--wcs-semantic-color-text-link-hover);\n    --wcs-breadcrumb-item-link-font-weight: var(--wcs-semantic-font-weight-medium);\n\n    --wcs-breadcrumb-item-border-width-focus: var(--wcs-semantic-border-width-large);\n\n    --wcs-breadcrumb-item-border-color-focus: var(--wcs-semantic-color-border-focus-base);\n\n    --wcs-breadcrumb-item-active-color: var(--wcs-semantic-color-text-primary);\n\n    display: flex;\n    align-items: baseline;\n    max-height: var(--wcs-breadcrumb-item-max-height);\n    font-size: var(--wcs-breadcrumb-item-font-size);\n    color: var(--wcs-breadcrumb-item-active-color);\n    line-height: var(--wcs-breadcrumb-item-line-height);\n\n    ::slotted(a) {\n        display: block;\n        height: 100%;\n        padding: 1px 2px;\n        font-weight: var(--wcs-breadcrumb-item-link-font-weight);\n        color: var(--wcs-breadcrumb-item-link-color);\n        text-decoration: none;\n        border-radius: var(--wcs-breadcrumb-item-border-width-focus);\n    }\n    ::slotted(a:focus-visible ) {\n        @include focus-outline($outline-color: var(--wcs-breadcrumb-item-border-color-focus), $outline-offset: 0, $border-width: var(--wcs-breadcrumb-item-border-width-focus));\n    }\n    ::slotted(a:hover) {\n        text-decoration: underline;\n        color: var(--wcs-breadcrumb-item-link-color-hover);\n    }\n\n    .item-icon {\n        margin-left: calc(var(--wcs-breadcrumb-item-gap) - 2px);\n        font-family: \"icons\";\n        font-size: var(--wcs-breadcrumb-item-icon-font-size);\n        color: var(--wcs-breadcrumb-item-icon-color);\n    }\n}\n","import { Component, ComponentInterface, h, Host, Prop } from '@stencil/core';\n\nimport { ICONS_FONT_CHEVRON_UNICODE } from '../breadcrumb/breadcrumb-constants';\n\n/**\n * The breadcrumb item represents a link inside a breadcrumb.\n * \n * @slot <no-name> Main container slot\n * \n * @cssprop --wcs-breadcrumb-item-max-height - Maximum height of the breadcrumb item\n * @cssprop --wcs-breadcrumb-item-line-height - Line height of the breadcrumb item\n * @cssprop --wcs-breadcrumb-item-font-size - Font size of the breadcrumb item\n * \n * @cssprop --wcs-breadcrumb-item-icon-color - Color of the breadcrumb item icon\n * @cssprop --wcs-breadcrumb-item-icon-font-size - Font size of the breadcrumb item icon\n * \n * @cssprop --wcs-breadcrumb-item-gap - Gap between text and chevron icon\n * @cssprop --wcs-breadcrumb-item-link-color - Color of the breadcrumb item link\n * @cssprop --wcs-breadcrumb-item-link-color-hover - Color of the breadcrumb item link when hovered\n * @cssprop --wcs-breadcrumb-item-link-font-weight - Font weight of the breadcrumb item link\n * \n * @cssprop --wcs-breadcrumb-item-border-width-focus - Border width of the breadcrumb item when focused\n * @cssprop --wcs-breadcrumb-item-border-color-focus - Border color of the breadcrumb item when focused\n * \n * @cssprop --wcs-breadcrumb-item-active-color - Color of the breadcrumb item when the link is active\n */\n@Component({\n    tag: 'wcs-breadcrumb-item',\n    styleUrl: 'breadcrumb-item.scss',\n    shadow: true,\n})\nexport class BreadcrumbItem implements ComponentInterface {\n    /**\n     * Automatically set by the parent breadcrumb.\n     * True if it is the last breadcrumb item.\n     * (You shouldn't set this prop by yourself) \n     * @internal\n     * @ignore\n     */\n    @Prop() last: boolean = false;\n\n    render() {\n        return (\n            <Host role=\"listitem\">\n                <slot />\n                {!this.last && (\n                    <span class=\"item-icon\" aria-hidden=\"true\">\n                        {ICONS_FONT_CHEVRON_UNICODE}\n                    </span>\n                )}\n            </Host>\n        );\n    }\n}\n"],"version":3}