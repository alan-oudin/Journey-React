{"file":"wcs-progress-bar.entry.js","mappings":";;;AAAA,MAAM,cAAc,GAAG,wgGAAwgG,CAAC;AAChiG,6BAAe,cAAc;;ACK7B,MAAM,iCAAiC,GAAG,CAAC,OAAO,CAAC,CAAC;MA2CvC,WAAW;;;QAIZ,wBAAmB,GAAyB,EAAE,CAAC;oBAOX,GAAG;yBAKD,KAAK;qBAM3B,CAAC;;IAEzB,iBAAiB;QACb,IAAI,CAAC,mBAAmB,mCACjB,qBAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,GAC9B,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,iCAAiC,CAAC,CACnE,CAAC;KACL;IAGD,MAAM,gBAAgB,CAAC,IAAuB,EAAE,KAAgC;QAC5E,oBAAoB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KAC1D;IAED,MAAM;QACF,MAAM,KAAK,GAAG;YACV,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,GAAG;SAC1B,CAAC;QAEF,QACI,0EAAK,KAAK,EAAE,IAAI,CAAC,WAAW,EAAE,EACzB,IAAI,EAAC,aAAa,mBACJ,GAAG,mBACH,KAAK,mBACJ,IAAI,CAAC,KAAK,oBACT,IAAI,CAAC,KAAK,GAAG,GAAG,EAChC,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,IACnC,IAAI,CAAC,mBAAmB,GAC7B,4DAAK,KAAK,EAAC,cAAc,EAAC,KAAK,EAAE,KAAK,IACjC,IAAI,CAAC,SAAS;YACX,6DAAM,KAAK,EAAC,gBAAgB,IACrC,IAAI,CAAC,KAAK,EAAC,kEAAY,CACnB,CAEG,CACJ,EACR;KACL;IAED,WAAW;QACP,IAAI,OAAO,GAAG,UAAU,CAAC;QACzB,IAAI,IAAI,CAAC,SAAS;YAAE,OAAO,IAAI,YAAY,CAAC;;QAE5C,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC;YAAE,OAAO,IAAI,aAAa,CAAC;QAC/C,OAAO,OAAO,CAAC;KAClB;;;;;;;","names":[],"sources":["src/components/progress-bar/progress-bar.scss?tag=wcs-progress-bar&encapsulation=shadow","src/components/progress-bar/progress-bar.tsx"],"sourcesContent":[":host {\n    --wcs-progress-bar-border-radius: var(--wcs-semantic-border-radius-full);\n    --wcs-progress-bar-border-radius-small: var(--wcs-semantic-border-radius-small);\n    --wcs-internal-progress-bar-animation-duration: var(--wcs-progress-bar-animation-duration, var(--wcs-semantic-motion-duration-feedback-slower)); /* internal used by horizontal-stepper */\n\n    --wcs-progress-bar-height-m: calc(var(--wcs-semantic-size-m) / 4);\n    --wcs-progress-bar-height-s: calc(var(--wcs-semantic-size-s) / 6);\n    --wcs-progress-bar-background-color: transparent;\n\n    --wcs-progress-bar-rail-color: var(--wcs-semantic-color-background-surface-tertiary);\n    --wcs-progress-bar-rail-spacing: var(--wcs-semantic-spacing-small);\n\n    --wcs-progress-bar-gap-s: var(--wcs-semantic-spacing-small);\n    --wcs-progress-bar-gap-m: var(--wcs-semantic-spacing-base);\n\n    --wcs-progress-bar-indicator-color: var(--wcs-semantic-color-background-surface-brand);\n    --wcs-progress-bar-label-color: var(--wcs-semantic-color-text-primary);\n    --wcs-progress-bar-label-font-size-s: var(--wcs-semantic-font-size-s);\n    --wcs-progress-bar-label-font-size-m: calc(1.5 * var(--wcs-semantic-font-size-m));\n    --wcs-progress-bar-label-font-weight: var(--wcs-semantic-font-weight-medium);\n    --wcs-progress-bar-label-percentage-font-size-s: calc(var(--wcs-semantic-font-size-s) * 0.7);\n    --wcs-progress-bar-label-percentage-font-size-m: calc(var(--wcs-semantic-font-size-m) * 0.7);\n    --wcs-progress-bar-label-top-space: var(--wcs-semantic-spacing-large);\n}\n\n:host([size=s]) {\n    .progress {\n        height: var(--wcs-progress-bar-height-s);\n        background-color: var(--wcs-progress-bar-background-color);\n        background-image: none;\n        background-size: auto;\n        border-radius: var(--wcs-progress-bar-border-radius-small);\n\n        .progress-label {\n            font-size: var(--wcs-progress-bar-label-font-size-s);\n            bottom: calc(100% + var(--wcs-progress-bar-gap-s));\n\n            sup {\n                font-size: var(--wcs-progress-bar-label-percentage-font-size-s);\n            }\n        }\n    }\n}\n\n.progress {\n    display: flex;\n    height: var(--wcs-progress-bar-height-m);\n    color: var(--wcs-progress-bar-label-color);\n    background-color: var(--wcs-progress-bar-background-color);\n    background-image: linear-gradient(90deg, var(--wcs-progress-bar-rail-color), 50%, transparent 50%);\n    background-size: var(--wcs-progress-bar-rail-spacing) var(--wcs-progress-bar-height-m);\n    border-radius: var(--wcs-progress-bar-border-radius);\n\n    &.has-label {\n        margin-top: var(--wcs-progress-bar-label-top-space);\n    }\n\n    // FIXME: Temporary fix so the label doesn't appear before the bar\n    &.value-zero > .progress-bar > .progress-label {\n        right: unset;\n    }\n}\n\n.progress-bar {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    color: var(--wcs-progress-bar-label-color);\n    text-align: center;\n    background-color: var(--wcs-progress-bar-indicator-color);\n    border-radius: var(--wcs-progress-bar-border-radius);\n    transition: width var(--wcs-internal-progress-bar-animation-duration) ease-out;\n}\n\n.progress-label {\n    line-height: 1; // to remove extra-space (https://www.reddit.com/r/css/comments/z5zazq/mysterious_spacing_around_all_text_not_padding_or/\n    position: absolute;\n    right: 0;\n    bottom: calc(100% + var(--wcs-progress-bar-gap-m));\n\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n\n    font-size: var(--wcs-progress-bar-label-font-size-m);\n    font-weight: var(--wcs-progress-bar-label-font-weight);\n\n    sup {\n        font-size: var(--wcs-progress-bar-label-percentage-font-size-m);\n    }\n}\n","import { Component, ComponentInterface, Element, h, Method, Prop } from '@stencil/core';\nimport { WcsSize } from \"../../shared-types\";\nimport { inheritAriaAttributes, inheritAttributes, setOrRemoveAttribute } from \"../../utils/helpers\";\nimport { AriaAttributeName, MutableAriaAttribute } from \"../../utils/mutable-aria-attribute\";\n\n\nconst PROGRESS_BAR_ARIA_INHERITED_ATTRS = ['title'];\n\n/**\n * The progress-bar component is a horizontal bar that indicates the current completion of a task.\n *\n * ## Accessibility guidelines ðŸ’¡\n * > Aria attributes and how to display the progress-bar depend on the use case in your application :\n * >\n * > - **Case 1 : decorative**\n * > If the progress-bar is used as a decoration _(if removed, the user doesn't lose any relevant information)_ or in the\n * > context of another component _(such as progress-bar in a card, stepper, ...)_ => **you don't need to show the label nor add an aria-label**.\n * >\n * > - **Case 2 : informative**\n * > If the progress-bar is used to convey important information _(e.g., form completion status, dashboard KPI)_, you need to :\n * >   - **Provide a visible label** that describes the purpose of the progress-bar.\n * >   - **Set the `showLabel` property to `true`** to show the percentage above the progress-bar.\n * >   - Optionally, use aria-label to provide an accessible name if a visible label is not present.\n *\n * @cssprop --wcs-progress-bar-border-radius - Border radius\n * @cssprop --wcs-progress-bar-border-radius-small - Border radius for size small\n * @cssprop --wcs-progress-bar-animation-duration - Animation duration\n * \n * @cssprop --wcs-progress-bar-height-m - Height for size medium\n * @cssprop --wcs-progress-bar-height-s - Height for size small\n * @cssprop --wcs-progress-bar-background-color - Background color of the progress bar\n * @cssprop --wcs-progress-bar-rail-color - Rail color (dashed line)\n * @cssprop --wcs-progress-bar-rail-spacing - Space between the rail dashes\n * @cssprop --wcs-progress-bar-gap-s - Gap between the progress bar and the label for size small\n * @cssprop --wcs-progress-bar-gap-m - Gap between the progress bar and the label for size medium\n * @cssprop --wcs-progress-bar-indicator-color - Color of the progress bar indicator (bar on top of the rail)\n * @cssprop --wcs-progress-bar-label-color - Color of the label\n * @cssprop --wcs-progress-bar-label-font-size-s - Font size of the label for size small\n * @cssprop --wcs-progress-bar-label-font-size-m - Font size of the label for size medium\n * @cssprop --wcs-progress-bar-label-font-weight - Font weight of the label\n * @cssprop --wcs-progress-bar-label-percentage-font-size-s - Font size of the percentage for size small\n * @cssprop --wcs-progress-bar-label-percentage-font-size-m - Font size of the percentage for size medium\n * @cssprop --wcs-progress-bar-label-top-space - Space on top of the progress bar when label is displayed\n */\n@Component({\n    tag: 'wcs-progress-bar',\n    styleUrl: 'progress-bar.scss',\n    shadow: true\n})\nexport class ProgressBar implements ComponentInterface, MutableAriaAttribute {\n\n    @Element() private el!: HTMLWcsProgressBarElement;\n    private nativeProgress!: HTMLDivElement;\n    private inheritedAttributes: { [k: string]: any } = {};\n\n\n    /**\n     * Specify the size of the progress bar.\n     * m = default, s = smaller\n     */\n    @Prop() size: Extract<WcsSize, 'm' | 's'> = 'm';\n\n    /**\n     * Whether it displays a label indicating the percentage of progress above the bar.\n     */\n    @Prop({ reflect: true }) showLabel: boolean = false;\n\n    /**\n     * The actual value of the progress.\n     * Ranging from 0 to 100.\n     */\n    @Prop() value: number = 0;\n\n    componentWillLoad(): Promise<void> | void {\n        this.inheritedAttributes = {\n            ...inheritAriaAttributes(this.el),\n            ...inheritAttributes(this.el, PROGRESS_BAR_ARIA_INHERITED_ATTRS),\n        };\n    }\n\n    @Method()\n    async setAriaAttribute(attr: AriaAttributeName, value: string | null | undefined) {\n        setOrRemoveAttribute(this.nativeProgress, attr, value);\n    }\n\n    render() {\n        const style = {\n            width: this.value + '%'\n        };\n\n        return (\n            <div class={this.rootClasses()}\n                 role=\"progressbar\"\n                 aria-valuemin=\"0\"\n                 aria-valuemax=\"100\"\n                 aria-valuenow={this.value}\n                 aria-valuetext={this.value + '%'}\n                 ref={(el) => (this.nativeProgress = el)}\n                 {...this.inheritedAttributes}>\n                <div class=\"progress-bar\" style={style}>\n                    {this.showLabel &&\n                        <span class=\"progress-label\">\n              {this.value}<sup>%</sup>\n            </span>\n                    }\n                </div>\n            </div>\n        );\n    }\n\n    rootClasses(): string {\n        let classes = 'progress';\n        if (this.showLabel) classes += ' has-label';\n        // FIXME: Temporary fix so the label doesn't appear before the bar.\n        if (this.value === 0) classes += ' value-zero';\n        return classes;\n    }\n}\n"],"version":3}