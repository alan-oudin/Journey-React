import { r as registerInstance, h, H as Host } from './index-d9de61ce.js';

const cardMediaCss = ":host{display:block;--wcs-card-media-max-width-horizontal:160px}:host ::slotted(*),:host ::slotted([slot=horizontal]),:host ::slotted([slot=vertical]){display:block;object-fit:cover;width:100%;height:100%}:host(.vertical) ::slotted(*),:host(.vertical) ::slotted([slot=vertical]){border-radius:var(--wcs-card-border-radius) var(--wcs-card-border-radius) 0 0;aspect-ratio:16/9}:host(.horizontal) ::slotted(*),:host(.horizontal) ::slotted([slot=horizontal]){width:var(--wcs-card-media-max-width-horizontal);aspect-ratio:1/1;border-radius:var(--wcs-card-border-radius) 0 0 var(--wcs-card-border-radius)}";
const WcsCardMediaStyle0 = cardMediaCss;

const CardMedia = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.orientation = 'vertical';
    }
    /**
     * @internal this method is not intended to be used by the user
     */
    async setOrientation(orientation) {
        this.orientation = orientation;
    }
    render() {
        return (h(Host, { key: '8b54a791a4d1c8bfdc772cb5cd16f3a3dfec0682', class: this.orientation }, h("slot", { key: 'a7f5751e8e1f3ef3b1b18af34384cb598a80b690' }), this.orientation === 'vertical' ? h("slot", { name: "vertical" }) : h("slot", { name: "horizontal" })));
    }
};
CardMedia.style = WcsCardMediaStyle0;

export { CardMedia as wcs_card_media };

//# sourceMappingURL=wcs-card-media.entry.js.map