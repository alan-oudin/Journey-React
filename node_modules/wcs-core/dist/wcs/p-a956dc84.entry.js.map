{"version":3,"names":["getSortOrderInteger","sortOrder","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","REGEX","validate","uuid","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","symbolTag","isSymbol","value","isObjectLike","baseGetTag","arrayMap","array","iteratee","index","result","Array","INFINITY","symbolProto","Symbol","prototype","symbolToString","baseToString","isArray","call","objectCreate","Object","create","baseCreate","object","proto","isObject","baseCreate$1","copyArray","source","defineProperty","func","getNative","e","defineProperty$1","arrayEach","baseAssignValue","key","configurable","enumerable","writable","objectProto","hasOwnProperty","assignValue","objValue","eq","copyObject","props","customizer","isNew","newValue","nativeKeysIn","baseKeysIn","isProto","isPrototype","keysIn","isArrayLike","arrayLikeKeys","reIsDeepProp","reIsPlainProp","isKey","type","FUNC_ERROR_TEXT","memoize","resolver","memoized","args","apply","this","cache","has","get","set","Cache","MapCache","MAX_MEMOIZE_SIZE","memoizeCapped","size","clear","rePropName","reEscapeChar","stringToPath","string","charCodeAt","replace","match","number","quote","subString","stringToPath$1","castPath","toKey","baseGet","path","defaultValue","getPrototype","overArg","getPrototypeOf","getPrototype$1","baseAssign","keys","baseAssignIn","freeExports","exports","nodeType","freeModule","module","moduleExports","Buffer","root","allocUnsafe","cloneBuffer","buffer","isDeep","slice","constructor","copy","copySymbols","getSymbols","nativeGetSymbols","getOwnPropertySymbols","getSymbolsIn","stubArray","arrayPush","getSymbolsIn$1","copySymbolsIn","getAllKeysIn","baseGetAllKeys","initCloneArray","input","cloneArrayBuffer","arrayBuffer","byteLength","cloneDataView","dataView","byteOffset","reFlags","cloneRegExp","regexp","exec","lastIndex","symbolValueOf","valueOf","cloneSymbol","symbol","cloneTypedArray","typedArray","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","initCloneByTag","tag","Ctor","initCloneObject","baseIsMap","getTag","nodeIsMap","nodeUtil","isMap","baseUnary","isMap$1","baseIsSet","nodeIsSet","isSet","isSet$1","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","argsTag","arrayTag","errorTag","funcTag","genTag","objectTag","weakMapTag","cloneableTags","baseClone","bitmask","stack","isFlat","isFull","isArr","isFunc","isBuffer","Stack","stacked","forEach","subValue","add","keysFunc","getAllKeys","cloneDeep","getActionForKeyboardEvent","event","keyboardShortcut","keyboardShortcutFromKeyboardEvent","kind","target","GridRadio","checked","row","rowIndex","totalRows","onClick","h","class","_","click","name","tabindex","ref","el","gridCss","WcsGridStyle0","gridRadioCss","WcsGridStyle1","GRID_INHERITED_ATTRS","Grid","inheritedAttributes","col","onCursorPositionChange","getGridColumnsFromTemplate","g","cursorPosition","onDataChange","updateGridRows","refreshSort","onSelectedItemsPropertyChange","updateSelectionWithValues","onFocus","_a","getElementToFocusAtCursorPosition","focus","wcsFocus","emit","onBlur","wcsBlur","focusFirstCell","selectionConfig","hasSelectionColumn","gridElementsWithCoordinates","find","cell","_b","querySelector","moveCursorPosition","directionX","directionY","totalDisplayedColumnCount","Math","min","max","getRowsForCurrentPage","handleCursorPositionOnEmptyTh","onHiddenColumnChange","forceUpdate","onKeyDown","_event","document","activeElement","tagName","actionsFromKeyboardEvents","preventDefault","actionFromKeyboardEvent","doActionFromKeyboardEventAssociatedAction","onRowSelection","rows","selectAllRows","clickedGridElement","composedPath","filter","x","includes","nodeName","clickedGridElementWithCoordinates","values","map","r","selected","isEqual","data","wcsGridRowToWcsGridRowData","page","columns","cells","column","columnPosition","content","formatter","updatePageIndex","componentDidLoad","paginationEl","wcsGridPaginationId","getElementById","getGridPaginationsFromTemplate","selectedItems","componentWillLoad","assign","inheritAriaAttributes","inheritAttributes","setAriaAttribute","attr","setOrRemoveAttribute","nativeTable","refreshOthersColumnsSortOrderState","first","other","c","serverMode","sortBy","disableSortOrderForColumns","slotted","shadowRoot","assignedElements","gridElements","hidden","querySelectorAll","floor","sortChangeEventHandler","detail","order","sortFn","sort","a","b","itemsCount","pageCount","ceil","pageSize","currentPage","GridPagination","INDEX_FIRST_PAGE","paginationChangeEventHandler","onPaginationChange","paginationChangeEventHandlerOutside","id","wcsGridSelectionChange","selectedRows","changedRow","allRowsAreSelected","wcsGridAllSelectionChange","renderSelectionColumn","atLeastOneColumnHidden","tabIndex","_c","_d","part","onWcsChange","getCellContent","totalColumnCount","render","Host","role","loading","colSpan","renderRow","hiddenColumnCount","rowCssPartsWithoutEmptyList","join","cellIndex","nonHiddenColumnIndex","cursorIsOnCell","customCells","rowIdPath","parts","rowCssPartsFn"],"sources":["src/components/grid/grid-interface.ts","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/regex.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","node_modules/lodash-es/isSymbol.js","node_modules/lodash-es/_arrayMap.js","node_modules/lodash-es/_baseToString.js","node_modules/lodash-es/_baseCreate.js","node_modules/lodash-es/_copyArray.js","node_modules/lodash-es/_defineProperty.js","node_modules/lodash-es/_arrayEach.js","node_modules/lodash-es/_baseAssignValue.js","node_modules/lodash-es/_assignValue.js","node_modules/lodash-es/_copyObject.js","node_modules/lodash-es/_nativeKeysIn.js","node_modules/lodash-es/_baseKeysIn.js","node_modules/lodash-es/keysIn.js","node_modules/lodash-es/_isKey.js","node_modules/lodash-es/memoize.js","node_modules/lodash-es/_memoizeCapped.js","node_modules/lodash-es/_stringToPath.js","node_modules/lodash-es/toString.js","node_modules/lodash-es/_castPath.js","node_modules/lodash-es/_toKey.js","node_modules/lodash-es/_baseGet.js","node_modules/lodash-es/get.js","node_modules/lodash-es/_getPrototype.js","node_modules/lodash-es/_baseAssign.js","node_modules/lodash-es/_baseAssignIn.js","node_modules/lodash-es/_cloneBuffer.js","node_modules/lodash-es/_copySymbols.js","node_modules/lodash-es/_getSymbolsIn.js","node_modules/lodash-es/_copySymbolsIn.js","node_modules/lodash-es/_getAllKeysIn.js","node_modules/lodash-es/_initCloneArray.js","node_modules/lodash-es/_cloneArrayBuffer.js","node_modules/lodash-es/_cloneDataView.js","node_modules/lodash-es/_cloneRegExp.js","node_modules/lodash-es/_cloneSymbol.js","node_modules/lodash-es/_cloneTypedArray.js","node_modules/lodash-es/_initCloneByTag.js","node_modules/lodash-es/_initCloneObject.js","node_modules/lodash-es/_baseIsMap.js","node_modules/lodash-es/isMap.js","node_modules/lodash-es/_baseIsSet.js","node_modules/lodash-es/isSet.js","node_modules/lodash-es/_baseClone.js","node_modules/lodash-es/cloneDeep.js","src/components/grid/grid-keyboard-event.ts","src/components/grid/grid-radio.tsx","src/components/grid/grid.scss?tag=wcs-grid&encapsulation=shadow","src/components/grid/grid-radio.scss?tag=wcs-grid&encapsulation=shadow","src/components/grid/grid.tsx"],"sourcesContent":["import { VNode } from '@stencil/core';\n\nexport type WcsGridSelectionConfig = 'none' | 'single' | 'multiple';\n\nexport type WcsSortFn = (a: any, b: any, column: HTMLWcsGridColumnElement) => -1 | 0 | 1;\n\nexport type WcsCellFormatter = (_h: HyperFunc<VNode>, column: HTMLWcsGridColumnElement, rowData: WcsGridRowData) => HTMLElement | HTMLElement[];\n\n/**\n * Function that returns an array of CSS parts for a row. Should return an empty array or null/undefined if there are no parts.\n *\n * @param row The row data\n * @returns An array of parts names. Empty array or null/undefined if there are no parts.\n */\nexport type RowCssPartsFn = (row: WcsGridRow) => string[] | null | undefined;\n\n\nexport interface WcsGridColumnSortChangeEventDetails {\n    sortFn: WcsSortFn;\n    order: WcsSortOrder;\n    column: HTMLWcsGridColumnElement;\n}\n\n/**\n * Event details for the grid selection event\n */\nexport interface WcsGridSelectionEventDetails {\n    /**\n     * The currently selected rows after the selection change\n     */\n    selectedRows: WcsGridRowData[];\n    /**\n     * The row that was changed\n     * If the grid is in multiple selection mode, you can get `allCheckbox` as the value representing that the event was\n     * triggered by the selection of all checkbox\n     */\n    changedRow: WcsGridRowData | 'allCheckbox';\n}\n\nexport interface WcsGridAllRowSelectedEventDetails {\n    rows: WcsGridRowData[];\n}\n\nexport type WcsGridPaginationConfig = {\n    currentPage: number;\n    pageSize: number;\n    itemsCount: number;\n    pageCount: number;\n};\n\nexport interface WcsGridPaginationChangeEventDetails {\n    pagination: WcsGridPaginationConfig;\n}\n\nexport type WcsSortOrder = 'asc' | 'desc' | 'none';\n\nexport function getSortOrderInteger(sortOrder: WcsSortOrder) {\n    switch (sortOrder) {\n        case 'asc':\n            return 1;\n        case 'desc':\n            return -1;\n        case 'none':\n            break;\n    }\n}\n\nexport interface WcsGridRow {\n    uuid: string;\n    page?: number;\n    selected?: boolean;\n    data?: any;\n    cells?: WcsGridCell[];\n}\n\nexport interface WcsGridCell {\n    content: string | void;\n    column: HTMLWcsGridColumnElement;\n    formatter: (_h: HyperFunc<VNode>, column: HTMLWcsGridColumnElement, rowData: WcsGridRowData) => HTMLElement | HTMLElement[];\n}\n\nexport interface WcsGridRowData {\n    page: number;\n    selected: boolean;\n    data: any;\n}\n\nexport interface HyperFunc<T> {\n    (tag: any): T;\n}\n\nexport interface HyperFunc<T> {\n    (tag: any, data: any): T;\n}\n\nexport interface HyperFunc<T> {\n    (tag: any, text: string): T;\n}\n\nexport interface HyperFunc<T> {\n    (sel: any, children: (T | undefined | null)[]): T;\n}\n\nexport interface HyperFunc<T> {\n    (sel: any, data: any, text: string): T;\n}\n\nexport interface HyperFunc<T> {\n    (sel: any, data: any, children: (T | undefined | null)[]): T;\n}\n\nexport interface HyperFunc<T> {\n    (sel: any, data: any, children: T): T;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n","import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n","import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n","import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n","import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n","import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n","import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n","import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n","import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n","import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n","import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n","import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n","import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n","import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n","import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n","import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n","import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n","import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n","import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","import { keyboardShortcutFromKeyboardEvent } from \"../../utils/keyboard-event\";\n\n\nexport type KeyboardEventAssociatedAction = FocusCell | SelectRow;\n\n// Possibles Shortcut\n// UP_ARROW : focus cell up\n// DOWN_ARROW : focus cell down\n// LEFT_ARROW : focus cell left\n// RIGHT_ARROW : focus cell right\n\n// HOME : focus first cell of the row\n// END : focus last cell of the row\n\n// CTRL+HOME : focus first cell of the grid\n// CTRL+END : focus first cell of the grid\n\n// IF SELECTION MULTIPLE OR SINGLE :\n// MAJ+SPACE : select (check) the current row\n\n// IF SELECTION MULTIPLE\n// CTRL+A : select (check) all rows\n\ntype FocusCell = {kind: 'FocusCell', target: 'up' | 'down' | 'left' | 'right' | 'first_of_row' | 'last_of_row' | 'first_of_grid' | 'last_of_grid'};\ntype SelectRow = {kind: 'SelectRow', target: 'one' | 'all'}\n\n/**\n * We follow this https://www.w3.org/WAI/ARIA/apg/patterns/grid/\n * @param event\n * @param type\n */\nexport function getActionForKeyboardEvent(event: KeyboardEvent, type: 'grid_no_selection' | 'grid_selection_single' | 'grid_selection_multiple'): KeyboardEventAssociatedAction[] {\n    const keyboardShortcut = keyboardShortcutFromKeyboardEvent(event);\n\n    if(keyboardShortcut === 'UNKNOWN') {\n        return [];\n    }\n\n    switch (keyboardShortcut) {\n        case \"UP_ARROW\":\n            return [{kind: 'FocusCell', target: 'up'}];\n        case \"DOWN_ARROW\":\n            return [{kind: 'FocusCell', target: 'down'}];\n        case \"LEFT_ARROW\":\n            return [{kind: 'FocusCell', target: 'left'}];\n        case \"RIGHT_ARROW\":\n            return [{kind: 'FocusCell', target: 'right'}];\n        case \"HOME\":\n            return [{kind: 'FocusCell', target: 'first_of_row'}];\n        case \"END\":\n            return [{kind: 'FocusCell', target: 'last_of_row'}];\n        case \"MAJ+SPACE\":\n            switch (type) {\n                case \"grid_selection_single\":\n                case \"grid_selection_multiple\":\n                    return [{kind: 'SelectRow', target: 'one'}];\n                case \"grid_no_selection\":\n                    break;\n            }\n            break;\n        case \"CTRL+A\":\n            switch (type) {\n                case \"grid_selection_multiple\":\n                    return [{kind: 'SelectRow', target: 'all'}];\n                case \"grid_selection_single\":\n                case \"grid_no_selection\":\n                    break;\n            }\n            break;\n        case \"CTRL+HOME\":\n            return [{kind: 'FocusCell', target: 'first_of_grid'}];\n        case \"CTRL+END\":\n            return [{kind: 'FocusCell', target: 'last_of_grid'}];\n        default:\n            break;\n    }\n\n    return [];\n}\n","import { FunctionalComponent, h } from '@stencil/core';\nimport { WcsGridRow } from \"./grid-interface\";\n\ninterface GridRadioProps {\n    checked: boolean;\n    row: WcsGridRow;\n    rowIndex: number,\n    totalRows: number,\n    onClick: (row: WcsGridRow) => void;\n}\n\nexport const GridRadio: FunctionalComponent<GridRadioProps> = (\n    {\n        checked,\n        row,\n        rowIndex,\n        totalRows,\n        onClick\n    }) => {\n    let input: HTMLInputElement;\n    return (\n        <div class={`grid-radio ${checked ? 'checked' : ''}`} onClick={_ => input.click()}>\n            <input type=\"radio\"\n                   name=\"selection\"\n                   aria-setsize={totalRows}\n                   aria-posinset={rowIndex}\n                   tabindex=\"-1\"\n                   checked={checked}\n                   aria-checked={`${checked}`}\n                   ref={(el) => (input = el)}\n                   onClick={_ => onClick(row)}>\n            </input>\n        </div>\n    );\n}\n","@import '../../style/focus-outline.scss';\n\n:host {\n    --wcs-grid-gap: 0;\n    --wcs-grid-vertical-align: middle;\n    --wcs-grid-outline-color: var(--wcs-semantic-color-border-focus-base);\n\n    --wcs-grid-cell-text-color: var(--wcs-semantic-color-text-secondary);\n    --wcs-grid-cell-padding-horizontal: var(--wcs-semantic-spacing-large);\n    --wcs-grid-cell-padding-vertical: var(--wcs-semantic-spacing-base);\n    --wcs-grid-cell-border-bottom: none;\n    --wcs-grid-cell-separator-border: none;\n    --wcs-grid-first-cell-border-radius: 0;\n    --wcs-grid-last-cell-border-radius: 0;\n\n    --wcs-grid-highlight-color: var(--wcs-semantic-color-background-surface-accent-lighter);\n    --wcs-grid-row-background-color: var(--wcs-semantic-color-background-surface-primary);\n    --wcs-grid-row-odd-background-color: var(--wcs-grid-row-background-color);\n    --wcs-grid-row-even-background-color: var(--wcs-semantic-color-background-surface-accent-lightest);\n\n    /* Grid headers for grid-columns */\n    --wcs-grid-header-background-color-default: var(--wcs-semantic-color-background-action-secondary-default);\n    --wcs-grid-header-background-color-hover: var(--wcs-semantic-color-background-action-secondary-hover);\n    --wcs-grid-header-background-color-press: var(--wcs-semantic-color-background-action-secondary-press);\n    --wcs-grid-header-text-color: var(--wcs-semantic-color-text-primary);\n    --wcs-grid-header-font-weight: var(--wcs-semantic-font-weight-heavy);\n    --wcs-grid-header-font-size: var(--wcs-semantic-font-size-label-1);\n    --wcs-grid-header-line-height: var(--wcs-primitive-font-line-height-140);\n    --wcs-grid-header-padding-vertical: var(--wcs-semantic-spacing-base);\n    --wcs-grid-header-padding-horizontal: var(--wcs-semantic-spacing-large);\n    --wcs-grid-header-border-left: none;\n    --wcs-grid-header-border-radius: 0;\n    --wcs-grid-header-border-bottom: solid var(--wcs-semantic-border-width-default) var(--wcs-semantic-color-border-secondary);\n    --wcs-grid-header-transition-duration: var(--wcs-semantic-motion-duration-feedback-fast);\n    --wcs-grid-first-header-background-color: var(--wcs-semantic-color-background-action-secondary-default);\n    --wcs-grid-first-header-border-radius: 0;\n    --wcs-grid-last-header-border-radius: 0;\n    --wcs-grid-column-selection-width: calc(5 * var(--wcs-semantic-spacing-base));\n    --wcs-grid-header-sort-arrow-color-default: var(--wcs-semantic-color-foreground-action-neutral-default);\n    --wcs-grid-header-sort-arrow-color-hover: var(--wcs-semantic-color-foreground-action-neutral-hover);\n\n    display: block;\n\n    // These selectors cannot be moved in grid-column.scss, because the column itself doesn't know its child order\n    // in the DOM, column are rendered one by one\n    // 👇\n    th {\n        // For the header of the selection column (not part of grid-column)\n        border-radius: var(--wcs-grid-first-header-border-radius);\n        background-color: var(--wcs-grid-first-header-background-color);\n    }\n\n    ::slotted([slot=grid-column]:first-child) {\n        // Remove the border for the first column\n        --wcs-grid-header-border-left: none;\n    }\n\n    // If the grid displays a selection column, we set the border radius and color on the\n    // first data column (which has been disabled in :host)\n    :host([selection]) {\n        ::slotted([slot=grid-column]:first-child) {\n            --wcs-component-grid-header-border-radius-first: 0;\n            --wcs-grid-header-border-left: var(--wcs-grid-header-border-left);\n        }\n    }\n\n    // 👆\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        border-spacing: var(--wcs-grid-gap);\n\n        thead {\n            border-bottom: var(--wcs-grid-header-border-bottom);\n        }\n\n        tbody {\n            vertical-align: var(--wcs-grid-vertical-align);\n        }\n    }\n\n\n    td {\n        color: var(--wcs-grid-cell-text-color);\n        margin: 0;\n        padding:  var(--wcs-grid-cell-padding-vertical) var(--wcs-grid-cell-padding-horizontal);\n\n        &:focus-visible {\n            @include focus-outline($outline-color: var(--wcs-grid-outline-color), $outline-offset: 0);\n        }\n\n        &:first-child {\n            border-radius: var(--wcs-grid-first-cell-border-radius);\n        }\n\n        &:last-child {\n            border-radius: var(--wcs-grid-last-cell-border-radius);\n        }\n\n        &:not(:first-child) {\n            border-left: var(--wcs-grid-cell-separator-border);\n        }\n    }\n\n    tr {\n        background-color: var(--wcs-grid-row-background-color);\n\n        &:nth-child(odd) {\n            background-color: var(--wcs-grid-row-odd-background-color, var(--wcs-grid-row-background-color));\n        }\n\n        &:nth-child(even) {\n            background-color: var(--wcs-grid-row-even-background-color, var(--wcs-grid-row-background-color));\n        }\n    }\n\n    tr:not(:last-child) td {\n        border-bottom: var(--wcs-grid-cell-border-bottom);\n    }\n\n    .wcs-grid-selection-column {\n        padding: var(--wcs-grid-cell-padding-vertical) var(--wcs-grid-cell-padding-horizontal);\n        width: var(--wcs-grid-column-selection-width);\n        text-align: start;\n    }\n\n    tr.selected {\n        background-color: var(--wcs-grid-highlight-color);\n    }\n\n    .loading {\n        text-align: center;\n    }\n}\n","@import '../../style/focus-outline.scss';\n\n.grid-radio {\n    --wcs-grid-radio-outline-color: var(--wcs-semantic-color-border-focus-base);\n    --wcs-grid-radio-padding: calc(var(--wcs-semantic-size-base) / 4);\n    --wcs-grid-radio-transition: var(--wcs-semantic-motion-duration-feedback-base);\n    --wcs-grid-radio-border-color-default: var(--wcs-semantic-color-border-control-indicator-default);\n    --wcs-grid-radio-border-color-selected: var(--wcs-semantic-color-border-control-indicator-selected);\n    --wcs-grid-radio-border-color-hover: var(--wcs-semantic-color-border-control-indicator-hover);\n    --wcs-grid-radio-border-color-disabled: var(--wcs-semantic-color-border-control-indicator-disabled);\n    --wcs-grid-radio-background-color-default: transparent;\n    --wcs-grid-radio-background-color-selected: var(--wcs-semantic-color-background-control-indicator-selected);\n    --wcs-grid-radio-background-color-disabled: var(--wcs-semantic-color-background-control-indicator-disabled);\n    --wcs-grid-radio-inner-border-color: white;\n\n    width: fit-content;\n    cursor: pointer;\n    padding: var(--wcs-grid-radio-padding, 0.125rem);\n\n    &:has(input:focus-visible) {\n        @include focus-outline($outline-color: var(--wcs-grid-radio-outline-color));\n    }\n\n    /* If the selector focus-visible is not supported by the browser, use focus-within instead */\n    @supports not selector(:has(input:focus-visible)){\n        &:focus-within {\n            @include focus-outline($outline-color: var(--wcs-grid-radio-outline-color));\n        }\n    }\n\n    input {\n        position: absolute;\n        opacity: 0;\n        height: 1px;\n        width: 1px;\n        overflow: hidden;\n        clip-path: inset(50%);\n        white-space: nowrap;\n    }\n\n    &::before {\n        content: \"\";\n        display: flex;\n        border-radius: 50%;\n        border: 2px solid var(--wcs-grid-radio-border-color-default);\n        position: relative;\n        width: 1.125rem;\n        height: 1.125rem;\n        box-sizing: border-box;\n        background-color: var(--wcs-grid-radio-background-color-default);\n        transition: var(--wcs-grid-radio-transition, 0.175s) ease-in-out;\n    }\n\n    &:hover {\n        &::before {\n            border-color: var(--wcs-grid-radio-border-color-hover);\n        }\n    }\n\n    &.checked {\n        &::before {\n            border-color: var(--wcs-grid-radio-border-color-selected);\n            background-color: var(--wcs-grid-radio-background-color-selected);\n            outline: solid 2px  var(--wcs-grid-radio-inner-border-color);\n            outline-offset: -4px;\n        }\n    }\n}\n","import {\n    Component,\n    ComponentDidLoad,\n    ComponentInterface,\n    Element,\n    Event,\n    EventEmitter,\n    forceUpdate,\n    h,\n    Host,\n    Listen, Method,\n    Prop,\n    State,\n    VNode,\n    Watch\n} from '@stencil/core';\nimport {\n    getSortOrderInteger,\n    HyperFunc, RowCssPartsFn,\n    WcsGridAllRowSelectedEventDetails,\n    WcsGridCell,\n    WcsGridColumnSortChangeEventDetails,\n    WcsGridPaginationChangeEventDetails,\n    WcsGridRow,\n    WcsGridRowData,\n    WcsGridSelectionConfig,\n    WcsGridSelectionEventDetails,\n} from './grid-interface';\nimport { v4 as uuid } from 'uuid';\nimport { cloneDeep, get, isEqual } from 'lodash-es';\nimport { GridPagination } from '../grid-pagination/grid-pagination';\nimport { getActionForKeyboardEvent, KeyboardEventAssociatedAction } from \"./grid-keyboard-event\";\nimport { GridRadio } from \"./grid-radio\";\nimport { AriaAttributeName, MutableAriaAttribute } from \"../../utils/mutable-aria-attribute\";\nimport { inheritAriaAttributes, inheritAttributes, setOrRemoveAttribute } from \"../../utils/helpers\";\n\ninterface GridElementWithCoordinates {\n    el: HTMLTableCellElement,\n    row: number,\n    col: number,\n}\n\nconst GRID_INHERITED_ATTRS = ['title'];\n\n/**\n * The grid component is a complex component used as an HTML table to display collections of data.\n *\n * @cssprop --wcs-grid-gap - Gap between grid cells (horizontal, vertical using `border-spacing` property)\n * @cssprop --wcs-grid-vertical-align - Vertical alignment of grid cells\n * @cssprop --wcs-grid-outline-color - Outline color for grid cells\n *\n * @cssprop --wcs-grid-cell-text-color - Text color of all grid cells\n * @cssprop --wcs-grid-cell-padding-horizontal - Horizontal padding of grid cells\n * @cssprop --wcs-grid-cell-padding-vertical - Vertical padding of grid cells\n * @cssprop --wcs-grid-cell-border-bottom - Bottom border of grid cells\n * @cssprop --wcs-grid-cell-separator-border - Separator border between grid cells\n * @cssprop --wcs-grid-first-cell-border-radius - Border radius of the first cell in a row\n * @cssprop --wcs-grid-last-cell-border-radius - Border radius of the last cell in a row\n *\n * @cssprop --wcs-grid-highlight-color - Background color for selected rows\n * @cssprop --wcs-grid-row-background-color - Background color of all rows\n * @cssprop --wcs-grid-row-odd-background-color - Background color of odd rows\n * @cssprop --wcs-grid-row-even-background-color - Background color of even rows\n *\n * @cssprop --wcs-grid-header-background-color-default - Default background color of the header\n * @cssprop --wcs-grid-header-background-color-hover - Background color of the header on hover\n * @cssprop --wcs-grid-header-background-color-press - Background color of the header on press\n * @cssprop --wcs-grid-header-text-color - Text color of the header\n * @cssprop --wcs-grid-header-font-weight - Font weight of the header\n * @cssprop --wcs-grid-header-font-size - Font size of the header\n * @cssprop --wcs-grid-header-line-height - Line height of the header\n * @cssprop --wcs-grid-header-padding-vertical - Vertical padding of the header\n * @cssprop --wcs-grid-header-padding-horizontal - Horizontal padding of the header\n * @cssprop --wcs-grid-header-border-left - Left border between header cells (default is none\n * @cssprop --wcs-grid-header-border-radius - Border radius of the header\n * @cssprop --wcs-grid-header-border-bottom - Bottom border of the header\n * @cssprop --wcs-grid-header-transition-duration - Transition duration of the header\n * @cssprop --wcs-grid-first-header-background-color - Background color of the first header cell\n * @cssprop --wcs-grid-first-header-border-radius - Border radius of the first header cell\n * @cssprop --wcs-grid-last-header-border-radius - Border radius of the last header cell\n * @cssprop --wcs-grid-column-selection-width - Width of the selection column (when selectionConfig is defined)\n * @cssprop --wcs-grid-header-sort-arrow-color-default - Color of the sort arrow in the header\n * @cssprop --wcs-grid-header-sort-arrow-color-hover - Color of the sort arrow in the header when hovered\n * \n * @csspart all-rows-checkbox - CSS part for the checkbox in the selection column that selects all rows\n * @csspart row-checkbox - CSS part for the checkbox of each row in the selection column\n * \n * @slot grid-column - The slot containing the column of the grid in the `<thead>`\n * @slot grid-pagination - The slot containing the pagination of the grid below the `<table>`\n *\n */\n@Component({\n    tag: 'wcs-grid',\n    styleUrls: ['grid.scss', 'grid-radio.scss'],\n    shadow: true\n})\nexport class Grid implements ComponentInterface, ComponentDidLoad, MutableAriaAttribute {\n    @Element() private el!: HTMLWcsGridElement;\n    private nativeTable!: HTMLTableElement;\n    private inheritedAttributes: { [k: string]: any } = {};\n    \n    /**\n     * Manage sort and pagination with a backend server when set to `true`\n     */\n    @Prop({ reflect: true }) serverMode: boolean = false;\n    /**\n     * Contains the data to display in the table from a js object\n     */\n    @Prop() data: any[];\n    /**\n     * Flag to display a spinner during data loading\n     */\n    @Prop({ reflect: true }) loading: boolean;\n    /**\n     * Used to manage grid's row selection.  \n     * \"none\": no row can be selected.  \n     * \"multiple\": several rows can be selected.  \n     * \"single\": one row only can be selected.  \n     */\n    @Prop() selectionConfig: WcsGridSelectionConfig = 'none';\n    /**\n     * Set the selected items (rows)\n     */\n    @Prop() selectedItems: any | any[] = [];\n    /**\n     * Automatically set by the component to reference the wcs-grid-pagination HTML element by its id.\n     */\n    @Prop() wcsGridPaginationId: string;\n    /**\n     * Name of the object's key that will be used to display the cells whose `keyValue` attribute matches to the\n     * object's value for this key. Useful for custom cells.\n     */\n    @Prop() rowIdPath: string;\n    /**\n     * Function to add css parts to the grid rows, this allows you to customize the rows with css parts directly\n     * in you're application stylesheet.\n     */\n    @Prop() rowCssPartsFn: RowCssPartsFn = (_) => null;\n    @State() private columns: HTMLWcsGridColumnElement[];\n    @State() private paginationEl: HTMLWcsGridPaginationElement;\n    /**\n     * Rows to display, contains user data and meta data\n     */\n    @State() private rows: WcsGridRow[] = [];\n    /**\n     * Event emitted when a row is selected or unselected\n     */\n    @Event() wcsGridSelectionChange!: EventEmitter<WcsGridSelectionEventDetails>;\n    /**\n     * Event emitted when all rows are selected or unselected\n     */\n    @Event() wcsGridAllSelectionChange!: EventEmitter<WcsGridAllRowSelectedEventDetails>;\n    /**\n     * Event emitted when the grid has focus.\n     */\n    @Event() wcsFocus!: EventEmitter<FocusEvent>;\n    /**\n     * Event emitted when the grid loses focus.\n     */\n    @Event() wcsBlur!: EventEmitter<FocusEvent>;\n    \n    /**\n     * Used to track the focus position in the grid for keyboard navigation.  \n     * Header row : index 0  \n     * First column :\n     *   - index 1 if selection mode multiple or single\n     *   - index 0 if no selection mode\n     * Default position : col 0, row 1\n     */\n    @State() private cursorPosition: {col: number, row: number} = {col: 0, row: 1};\n    \n    @Watch('cursorPosition')\n    onCursorPositionChange(newValue: {col: number, row: number}): void {\n        // Notify all grid columns that the cursorPosition has changed\n        this.getGridColumnsFromTemplate().forEach(g => g.cursorPosition = newValue);\n    }\n    \n    @Watch('data')\n    onDataChange(newValue: any[]): void {\n        this.updateGridRows(newValue);\n        this.refreshSort(false);\n    }\n\n    @Watch('selectedItems')\n    onSelectedItemsPropertyChange(newValue: any | any[]) {\n        this.updateSelectionWithValues(newValue);\n    }\n    \n    @Listen('focus')\n    onFocus(event: FocusEvent) {\n        this.getElementToFocusAtCursorPosition()?.focus();\n        this.wcsFocus.emit(event);\n    }\n\n    @Listen('blur')\n    onBlur(event: FocusEvent) {\n        this.wcsBlur.emit(event);\n    }\n\n    /**\n     * Set focus on the first cell of the grid\n     */\n    @Method()\n    async focusFirstCell() {\n        this.cursorPosition = { col: this.selectionConfig === 'none' ? 0 : 1, row: 1 };\n        this.getElementToFocusAtCursorPosition()?.focus();\n    }\n\n    /**\n     * If selectionConfig is different from `none`, that means that an extra column for radio or checkbox is rendered\n     * in the table.\n     */\n    hasSelectionColumn() {\n        return this.selectionConfig !== 'none';\n    }\n    \n    /**\n     * Returns the element to focus at the current cursor position : it can be a cell (td, th) to focus or a nested\n     * checkbox / radio element if the selection mode is single or multiple\n     */\n    getElementToFocusAtCursorPosition(): HTMLTableCellElement | HTMLWcsCheckboxElement | HTMLInputElement {\n        const el = this.gridElementsWithCoordinates.find(cell =>\n            cell.col === this.cursorPosition?.col && cell.row === this.cursorPosition?.row)?.el;\n        return this.hasSelectionColumn()\n            ? el.querySelector('wcs-checkbox,input[type=\"radio\"]') ?? el\n            : el;\n    }\n    \n    moveCursorPosition(directionX: number | 'first' | 'last', directionY: number | 'first' | 'last') {\n        this.cursorPosition = {\n            col: directionX === 'first' ? 0 :\n                directionX === 'last' ? this.totalDisplayedColumnCount() - 1 :\n                    Math.min(Math.max(this.cursorPosition.col + directionX, 0), this.totalDisplayedColumnCount() - 1),\n            row: directionY === 'first' ? 0 :\n                directionY === 'last' ? this.getRowsForCurrentPage().length :\n                    Math.min(Math.max(this.cursorPosition.row + directionY, 0), this.getRowsForCurrentPage().length)\n        };\n        \n        this.handleCursorPositionOnEmptyTh();\n        \n        this.getElementToFocusAtCursorPosition()?.focus();\n    }\n\n    /**\n     * When the grid has selectionConfig single, an empty th appears at col=0, row=0.\n     * It should not be focusable so the cursor navigates to col=1, row=0 instead.\n     */\n    handleCursorPositionOnEmptyTh() {\n        if (this.selectionConfig === 'single' && this.cursorPosition.col === 0 && this.cursorPosition.row === 0) {\n            this.cursorPosition = {\n                col: 1,\n                row: 0\n            }\n        }\n    }\n\n    @Listen('wcsHiddenChange')\n    onHiddenColumnChange(): void {\n        // We use forceUpdate because the fact of hiding a column or not does not modify the internal structure of the grid (WcsGridRow).\n        // Hide a column only impacts the way it is rendered but the grid-column remains in the dom and in our internal model.\n        forceUpdate(this);\n        this.cursorPosition = { col: 0 , row: 1 }\n    }\n\n    @Listen('keydown')\n    onKeyDown(_event: KeyboardEvent) {\n        if (document.activeElement?.tagName === 'WCS-GRID-PAGINATION') {\n            return;\n        }\n        \n        let type: 'grid_no_selection' | 'grid_selection_single' | 'grid_selection_multiple';\n        \n        switch (this.selectionConfig) {\n            case \"multiple\":\n                type = 'grid_selection_multiple';\n                break;\n            case \"single\":\n                type = 'grid_selection_single';\n                break;\n            case \"none\":\n                type = 'grid_no_selection';\n                break;\n        }\n\n        const actionsFromKeyboardEvents: KeyboardEventAssociatedAction[] = getActionForKeyboardEvent(_event, type);\n\n        // If we have at least one associated actions, we prevent the default behavior of the event. \n        // Except if the action is a focus move (we have to handle the preventDefault behavior ourselves in the action implementation)\n        if (actionsFromKeyboardEvents.length != 0) {\n            _event.preventDefault();\n        }\n\n        for (const actionFromKeyboardEvent of actionsFromKeyboardEvents) {\n            this.doActionFromKeyboardEventAssociatedAction(actionFromKeyboardEvent, _event);\n        }\n    }\n\n    doActionFromKeyboardEventAssociatedAction(actionFromKeyboardEvent: KeyboardEventAssociatedAction, event: KeyboardEvent) {\n        switch (actionFromKeyboardEvent.kind) {\n            case \"FocusCell\":\n                switch (actionFromKeyboardEvent.target) {\n                    case \"up\":\n                        this.moveCursorPosition(0, -1);\n                        break;\n                    case \"down\":\n                        this.moveCursorPosition(0, 1);\n                        break;\n                    case \"left\":\n                        this.moveCursorPosition(-1, 0);\n                        break;\n                    case \"right\":\n                        this.moveCursorPosition(1, 0);\n                        break;\n                    case \"first_of_row\":\n                        this.moveCursorPosition('first', 0);\n                        break;\n                    case \"last_of_row\":\n                        this.moveCursorPosition('last', 0);\n                        break;\n                    case \"first_of_grid\":\n                        this.moveCursorPosition('first', 'first');\n                        break;\n                    case \"last_of_grid\":\n                        this.moveCursorPosition('last', 'last');\n                        break;\n                    default:\n                        break;\n                }\n            case \"SelectRow\":\n                switch (actionFromKeyboardEvent.target) {\n                    case \"one\":\n                        event.preventDefault();\n                        if (this.cursorPosition.row > 0) {\n                            this.onRowSelection(this.rows[this.cursorPosition.row - 1]);\n                        }\n                        break;\n                    case \"all\":\n                        this.selectAllRows();\n                        break;\n                    default:\n                        break;\n                }\n                break;\n            default:\n                throw new Error(\"Internal error\");\n        }\n    }\n    \n    \n    @Listen('mousedown')\n    onClick(_event: MouseEvent) {\n        const clickedGridElement: HTMLTableCellElement = _event.composedPath()\n            .filter(x => ['TD', 'TH']\n            .includes((x as HTMLElement).nodeName))[0] as HTMLTableCellElement;\n        \n        if(!clickedGridElement) return; // it can be the grid pagination node, we don't want to handle it\n        \n        const clickedGridElementWithCoordinates = this.gridElementsWithCoordinates.find(e => e.el === clickedGridElement);\n        \n        this.cursorPosition = {\n            col: clickedGridElementWithCoordinates.col,\n            row: clickedGridElementWithCoordinates.row,\n        }\n    }\n\n    private updateSelectionWithValues(values: any | any[]) {\n        if (this.selectionConfig === 'single') {\n            this.rows.map(r => r.selected = false);\n            for (const row of this.rows) {\n                if (isEqual(row.data, values)) {\n                    row.selected = true;\n                    break; // only one line can be selected\n                }\n            }\n        } else if (this.selectionConfig === 'multiple') {\n            this.rows.map(r => r.selected = false);\n            for (const row of this.rows) {\n                if (values.find(x => isEqual(x, row.data))) {\n                    row.selected = true;\n                }\n            }\n        }\n        this.rows = cloneDeep(this.rows);\n    }\n\n    private wcsGridRowToWcsGridRowData(row: WcsGridRow): WcsGridRowData {\n        return {selected: row.selected, page: row.page, data: row.data};\n    }\n\n    private updateGridRows(data: any[]): void {\n        const rows: WcsGridRow[] = [];\n        if (data && this.columns) {\n            // eslint-disable-next-line @typescript-eslint/prefer-for-of\n            for (let i = 0; i < data.length; i++) {\n                const row: WcsGridRow = {\n                    uuid: uuid(),\n                    data: data[i],\n                    selected: false,\n                    cells: []\n                };\n                let index = 0;\n                for (const column of this.columns) {\n                    column.columnPosition = index + (this.hasSelectionColumn() ? 1 : 0);\n                    index++;\n                    row.cells.push({\n                        content: get(data[i], column.path),\n                        column,\n                        formatter: column.formatter\n                    })\n                }\n                rows.push(row);\n            }\n            this.rows = rows;\n            this.updatePageIndex();\n        }\n    }\n\n    componentDidLoad(): void {\n        this.columns = this.getGridColumnsFromTemplate();\n        this.paginationEl = this.wcsGridPaginationId\n            ? document.getElementById(this.wcsGridPaginationId) as HTMLWcsGridPaginationElement\n            : this.getGridPaginationsFromTemplate()[0];\n        this.updateGridRows(this.data);\n        if (this.selectedItems) {\n            this.updateSelectionWithValues(this.selectedItems);\n        }\n        this.refreshSort(true);\n    }\n\n    componentWillLoad(): Promise<void> | void {\n        this.inheritedAttributes = {\n            ...inheritAriaAttributes(this.el),\n            ...inheritAttributes(this.el, GRID_INHERITED_ATTRS),\n        };\n    }\n\n    @Method()\n    async setAriaAttribute(attr: AriaAttributeName, value: string | null | undefined) {\n        setOrRemoveAttribute(this.nativeTable, attr, value);\n    }\n\n    /**\n     * Handle existing column's filters (defined before the grid is instantiated)\n     * @private\n     */\n    private refreshSort(refreshOthersColumnsSortOrderState: boolean) {\n        //fixme: why the column property can be null or undefined?\n        // Explanation: https://stenciljs.com/docs/component-lifecycle\n        // The @watch can be called before the componentDidLoad() which sets the columns\n        if (this.columns) {\n            const [first, ...other] = this.columns.filter(c => c.sortOrder !== 'none');\n            if (first && !this.serverMode) {\n                this.sortBy(first);\n            }\n            refreshOthersColumnsSortOrderState && this.disableSortOrderForColumns(other);\n        }\n    }\n\n    private disableSortOrderForColumns(columns: HTMLWcsGridColumnElement[] | null | undefined): void {\n        columns?.forEach(c => c.sortOrder = 'none');\n    }\n\n    private getGridColumnsFromTemplate(): HTMLWcsGridColumnElement[] {\n        const slotted = this.el.shadowRoot.querySelector('slot[name=\"grid-column\"]') as HTMLSlotElement;\n        return slotted.assignedElements() as any as HTMLWcsGridColumnElement[];\n    }\n\n    private getGridPaginationsFromTemplate(): HTMLWcsGridPaginationElement[] {\n        const slotted = this.el.shadowRoot.querySelector('slot[name=\"grid-pagination\"]') as HTMLSlotElement;\n        return slotted.assignedElements() as any as HTMLWcsGridPaginationElement[];\n    }\n    \n    private get gridElementsWithCoordinates(): GridElementWithCoordinates[] {\n        const gridElements: GridElementWithCoordinates[] = [];\n        // If selection multiple, the first cell should be added to the list\n        if (this.selectionConfig === 'multiple') {\n            gridElements.push({\n                el: this.el.shadowRoot.querySelector('th'),\n                row: 0,\n                col: 0\n            });\n        }\n        this.getGridColumnsFromTemplate()\n          .filter(col => !col.hidden)\n          .forEach((col, index) => {\n              gridElements.push({\n                  el: col.shadowRoot.querySelector('th'),\n                  row: 0,\n                  col: index + (this.hasSelectionColumn() ? 1 : 0),\n              });\n          });\n        this.el.shadowRoot.querySelectorAll('td').forEach((cell, index) => {\n            gridElements.push({\n                el: cell,\n                row: 1 + Math.floor(index / this.totalDisplayedColumnCount()),\n                col: index % this.totalDisplayedColumnCount(),\n            });\n        });\n        \n        return gridElements;\n    }\n\n    @Listen('wcsSortChange')\n    sortChangeEventHandler(event: CustomEvent<WcsGridColumnSortChangeEventDetails>): void {\n        // fixme: why the column property can be null or undefined?\n        // Explanation: https://stenciljs.com/docs/component-lifecycle\n        // The @Listen can be called before the componentDidLoad() which sets the columns\n        if (event.detail.order === 'none' || !this.columns) return;\n        // We keep only one active sort column\n        this.disableSortOrderForColumns(this.columns.filter(c => c !== event.detail.column));\n        if (this.serverMode) return;\n        this.sortBy(event.detail.column);\n        this.updatePageIndex();\n    }\n\n    /**\n     * Sorts the grid rows according to the given column's configuration\n     * @param column Column from which to extract the sorting configuration\n     * @private\n     */\n    private sortBy(column: HTMLWcsGridColumnElement) {\n        if (column.sortFn) {\n            this.rows = cloneDeep(this.rows)\n                .sort((a: any, b: any) => column.sortFn(a.data, b.data, column) * getSortOrderInteger(column.sortOrder));\n        } else {\n            this.rows = cloneDeep(this.rows)\n                .sort((a: any, b: any) => {\n                    const path = column.path;\n                    return ((get(a.data, path) < get(b.data, path)) ? -1 : (get(a.data, path) > get(b.data, path)) ? 1 : 0) * getSortOrderInteger(column.sortOrder);\n                });\n        }\n    }\n\n    /**\n     * Update the page's number of all rows\n     */\n    private updatePageIndex(): void {\n        if (!this.serverMode && this.paginationEl) {\n            this.paginationEl.itemsCount = this.data.length;\n            this.paginationEl.pageCount = Math.ceil(this.data.length / this.paginationEl.pageSize);\n\n            if (this.paginationEl.pageCount <= 1) {\n                this.paginationEl.currentPage = GridPagination.INDEX_FIRST_PAGE;\n            } else if (this.paginationEl.pageCount > 0 && this.paginationEl.currentPage + 1 > this.paginationEl.pageCount) {\n                this.paginationEl.currentPage = this.paginationEl.pageCount - 1;\n            }\n\n            const rows = cloneDeep(this.rows);\n            rows.forEach((row: WcsGridRow, index: number) =>\n                row.page = Math.floor(index / this.paginationEl.pageSize)\n            );\n            this.rows = [...rows];\n        }\n    }\n\n    @Listen('wcsGridPaginationChange')\n    paginationChangeEventHandler(): void {\n        this.onPaginationChange();\n    }\n\n    @Listen('wcsGridPaginationChange', {target: 'window'})\n    paginationChangeEventHandlerOutside(event: CustomEvent<WcsGridPaginationChangeEventDetails>): void {\n        if (this.wcsGridPaginationId && this.wcsGridPaginationId === (event.target as HTMLElement).id) {\n            this.onPaginationChange();\n        }\n    }\n\n    private onPaginationChange(): void {\n        if (this.serverMode) return;\n        this.updatePageIndex();\n    }\n\n    private onRowSelection(row: WcsGridRow): void {\n        if (this.selectionConfig === 'single') {\n            this.rows.filter(r => r.uuid !== row.uuid).map(r => r.selected = false);\n        }\n        row.selected = !row.selected;\n        if (this.selectionConfig !== 'single' || row.selected) {\n            this.wcsGridSelectionChange.emit({\n                selectedRows: this.selectedRows.map(row => this.wcsGridRowToWcsGridRowData(row)),\n                changedRow: this.wcsGridRowToWcsGridRowData(row)\n            });\n        }\n        this.rows = cloneDeep(this.rows);\n    }\n\n    private get selectedRows(): WcsGridRow[] {\n        return this.rows.filter(r => r.selected);\n    }\n\n    private selectAllRows(): void {\n        const rows = this.getRowsForCurrentPage();\n        const selected = !this.allRowsAreSelected();\n        rows.map(r => r.selected = selected);\n        this.wcsGridAllSelectionChange.emit({rows: selected ? rows.map(row => this.wcsGridRowToWcsGridRowData(row)) : []});\n        this.wcsGridSelectionChange.emit({ \n            selectedRows: this.selectedRows.map(row => this.wcsGridRowToWcsGridRowData(row)),\n            changedRow: 'allCheckbox'\n        });\n        this.rows = cloneDeep(this.rows);\n    }\n\n    private allRowsAreSelected(): boolean {\n        const rows = this.getRowsForCurrentPage();\n        return rows.length > 0 && rows.filter(row => row.selected).length === rows.length;\n    }\n\n    private getRowsForCurrentPage(): WcsGridRow[] {\n        // When in server mode, the state exists outside the internal grid model, so we must rely on the DOM state\n        if (!this.serverMode && this.paginationEl) {\n            return this.rows.filter(row => row.page === this.paginationEl.currentPage);\n        }\n        return this.rows;\n    }\n\n    renderSelectionColumn(row: WcsGridRow, rowIndex: number): any {\n        switch (this.selectionConfig) {\n            case 'none':\n                return;\n            case 'single': \n                return <td aria-colindex={this.atLeastOneColumnHidden() ? 1 : null}\n                           tabIndex={this.cursorPosition?.col === 0 && rowIndex + 1 === this.cursorPosition?.row ? 0 : -1}>\n                    <GridRadio checked={row.selected}\n                               row={row}\n                               rowIndex={rowIndex + 1}\n                               totalRows={this.rows.length}\n                               onClick={ (row) => {\n                                   if (!row.selected) {\n                                       this.onRowSelection(row)\n                                   }\n                               }}/>\n                </td>;\n            case 'multiple': \n                return <td aria-colindex={this.atLeastOneColumnHidden() ? 1 : null}\n                           tabIndex={this.cursorPosition?.col === 0 && rowIndex + 1 === this.cursorPosition?.row ? 0 : -1}>\n                    <wcs-checkbox tabIndex={-1}\n                                  part=\"row-checkbox\"\n                                  checked={row.selected} onWcsChange={this.onRowSelection.bind(this, row)}/>\n                </td>;\n        }\n    }\n\n    private getCellContent(row: WcsGridRow, cell: WcsGridCell): HTMLElement | HTMLElement[] | string | void {\n        if (cell.formatter) {\n            return cell.formatter(\n                (h as unknown) as HyperFunc<VNode>,\n                cell.column,\n                this.wcsGridRowToWcsGridRowData(row)\n            );\n        }\n        return cell.content;\n    }\n\n    /**\n     * Returns the total number of columns\n     * @private\n     */\n    private totalColumnCount() {\n        if (!this.columns) {\n            return 0;\n        }\n        return this.columns.length + (this.hasSelectionColumn() ? 1 : 0);\n    }\n\n    /**\n     * Returns the total number of columns that are not hidden\n     * @private\n     */\n    private totalDisplayedColumnCount() {\n        return this.totalColumnCount() - this.columns?.filter(col => col.hidden).length ?? 0;\n    }\n\n    /**\n     * Returns true if at least one column is hidden from the table\n     * @private\n     */\n    private atLeastOneColumnHidden() {\n        return this.totalDisplayedColumnCount() !== this.totalColumnCount();\n    }\n    \n    render(): any {\n        return (\n          <Host>\n              {\n                  <table role=\"grid\"\n                         ref={(el) => (this.nativeTable = el)}\n                         aria-rowcount={!this.loading && this.rows?.length}\n                         aria-colcount={!this.loading && this.totalDisplayedColumnCount()}\n                         {...this.inheritedAttributes}>\n                      <thead>\n                      <tr aria-rowindex=\"1\">\n                          {\n                              this.selectionConfig === 'none' ? ''\n                                : <th class=\"wcs-grid-selection-column\">\n                                    {\n                                        this.selectionConfig === 'single' ? '' :\n                                          <wcs-checkbox tabIndex={this.cursorPosition?.col === 0\n                                                                    && this.cursorPosition?.row === 0  ? 0 : -1}\n                                                        part=\"all-rows-checkbox\"\n                                                        checked={this.allRowsAreSelected()}\n                                                        onWcsChange={this.selectAllRows.bind(this)}/>\n                                    }\n                                </th>\n                          }\n                          <slot name=\"grid-column\"></slot>\n                      </tr>\n                      </thead>\n                      <tbody>\n                      {\n                          this.loading\n                            ? <tr aria-busy=\"true\">\n                                <td colSpan={this.totalColumnCount()} class=\"loading\">\n                                    <wcs-spinner></wcs-spinner>\n                                </td>\n                            </tr>\n                            : this.rows\n                              ?.filter(row => this.serverMode || !this.paginationEl || row.page === this.paginationEl.currentPage)\n                              .map((row, index) =>\n                                this.renderRow(row, index)\n                              )\n                      }\n                      </tbody>\n                  </table>\n              }\n              <slot name=\"grid-pagination\"></slot>\n          </Host>\n        );\n    }\n\n    /**\n     * Returns the row with all mapped cells inside.  \n     * The aria-rowindex here starts at 2 because the header row starts at index 1. \n     * @private\n     */ \n    private renderRow(row: WcsGridRow, rowIndex: number) {\n        let hiddenColumnCount = 0;\n        return <tr class={row.selected ? 'selected' : ''}\n                   part={this.rowCssPartsWithoutEmptyList(row)?.join(' ')}\n                   aria-selected={row.selected ? 'true' : null}\n                   aria-rowindex={rowIndex + 2}>\n            {this.renderSelectionColumn(row, rowIndex)}\n            {row.cells?.map((cell, cellIndex) => {\n                    if (cell.column.hidden) {\n                        hiddenColumnCount++;\n                        return;\n                    }\n                    const nonHiddenColumnIndex =  cellIndex - hiddenColumnCount + 1 + (this.hasSelectionColumn() ? 1 : 0);\n                    const cursorIsOnCell = nonHiddenColumnIndex - 1 === this.cursorPosition?.col \n                      && rowIndex + 1 === this.cursorPosition?.row;\n                    return cell.column.customCells\n                        ? (<td tabIndex={cursorIsOnCell ? 0 : -1}\n                               aria-colindex={this.atLeastOneColumnHidden() ? nonHiddenColumnIndex : null}>\n                            <slot name={cell.column.id + '-' + get(row.data, this.rowIdPath)}/>\n                        </td>)\n                        : (<td tabIndex={cursorIsOnCell ? 0 : -1}\n                               aria-colindex={this.atLeastOneColumnHidden() ? nonHiddenColumnIndex : null}\n                               part={cell.column.path + '-column'}>{this.getCellContent(row, cell)}</td>)\n                }\n            )}\n        </tr>;\n    }\n    \n    private rowCssPartsWithoutEmptyList(row: WcsGridRow): string[] | null | undefined {\n        const parts = this.rowCssPartsFn(row);\n        return parts?.length === 0 ? null : parts;\n    }\n}\n\n/**\n * Pour resize le tableau\n * https://www.brainbell.com/javascript/making-resizable-table-js.htmls\n *\n */\n"],"mappings":"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"}