{"version":3,"names":["HorizontalStep","step","checkOnComplete","complete","passed","active","first","disable","onClick","h","role","class","value","style","backgroundColor","text","_","ref","el","setAriaAttribute","shape","mode","disabled","getButtonContent","button","stepButton","size","icon","family","kind","iconName","horizontalStepperCss","WcsHorizontalStepperStyle0","HorizontalStepper","componentWillLoad","this","internalCurrentStepIndex","currentStep","steps","length","Error","onCurrentStepChange","newValue","oldValue","undefined","stepInterval","Math","abs","setProperty","i","setTimeout","removeProperty","previous","navigateToIndex","next","index","direction","_a","_b","render","Host","key","map","isComplete","isDisable","wcsHorizontalStepClick","emit","renderLabels","s","every","isNextPossibleStep","previousStepIsCompleteAndNotActive"],"sources":["src/components/horizontal-stepper/horizontal-step.tsx","src/components/horizontal-stepper/horizontal-stepper.scss?tag=wcs-horizontal-stepper&encapsulation=shadow","src/components/horizontal-stepper/horizontal-stepper.tsx"],"sourcesContent":["import { FunctionalComponent, h } from '@stencil/core';\nimport { HorizontalStepConfig, StepButton } from './horizontal-stepper-interface';\n\ninterface HorizontalStepProps {\n    step: HorizontalStepConfig;\n    checkOnComplete: boolean;\n    complete: boolean;\n    passed: boolean;\n    active: boolean;\n    first: boolean;\n    disable: boolean;\n    onClick: (step: HorizontalStepConfig) => void;\n}\n\nexport const HorizontalStep: FunctionalComponent<HorizontalStepProps> = (\n    {\n        step,\n        checkOnComplete,\n        complete,\n        passed,\n        active,\n        first,\n        disable,\n        onClick\n    }) => {\n    return (\n        /*\n        When using list-style: none in CSS, it removes the semantic of the list in Safari.\n        So we add role=\"list\" manually to provide semantic to screen readers\n        https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n        https://css-tricks.com/snippets/css/remove-list-markers-without-affecting-semantics/ \n         */\n        <li role=\"listitem\" class=\"graphic-step\" data-first={first}>\n            {first ? null : (<wcs-progress-bar value={passed ? 100 : 0} aria-hidden=\"true\"></wcs-progress-bar>)}\n            <wcs-button style={{'backgroundColor': 'white'}}\n                        aria-label={step.text}\n                        onClick={_ => onClick(step)}\n                        ref={(el: HTMLWcsButtonElement) => {\n                            active ? el.setAriaAttribute('aria-current', 'step') : el.setAriaAttribute('aria-current', null)\n                        }}\n                        shape=\"round\" mode={(active || complete) && !step.disable ? 'plain' : 'stroked'}\n                        disabled={disable}>\n                {getButtonContent(step.button, checkOnComplete, complete, active)}\n            </wcs-button>\n        </li>\n    );\n}\n\nconst getButtonContent = (stepButton: StepButton, checkOnComplete: boolean, complete: boolean, active: boolean) => {\n    if (checkOnComplete && complete && !active) {\n        return (<wcs-mat-icon size=\"m\" icon=\"done\" family=\"outlined\"></wcs-mat-icon>);\n    }\n    switch (stepButton.kind) {\n        case 'Icon':\n            return (<wcs-mat-icon size=\"m\" icon={stepButton.iconName}\n                                  family={stepButton.family ? stepButton.family : 'outlined'}></wcs-mat-icon>);\n        case 'Text':\n            return (stepButton.text);\n    }\n}\n\n","@import '../../style/focus-outline.scss';\n\n:host {\n    --wcs-horizontal-step-text-color-default: var(--wcs-semantic-color-text-secondary);\n    --wcs-horizontal-step-text-color-active: var(--wcs-semantic-color-foreground-brand);\n    --wcs-horizontal-step-text-color-disabled: var(--wcs-semantic-color-text-disabled);\n\n\n    display: block;\n\n    .steps {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n\n        display: flex;\n        flex-direction: row;\n        flex: 1;\n    }\n\n    .graphic-step {\n        display: flex;\n        position: relative;\n        flex-direction: row;\n        flex: 1;\n        align-items: center;\n\n        wcs-button {\n            z-index: 1;\n            mix-blend-mode: darken;\n        }\n    }\n\n    .graphic-step[data-first] {\n        flex: 0;\n    }\n\n    wcs-progress-bar {\n        --wcs-progress-bar-border-radius: 0;\n        flex: 1;\n        margin: 0 -1px;\n    }\n\n    .label-container {\n        justify-content: space-between;\n        display: flex;\n        flex-direction: row;\n        margin-top: var(--wcs-semantic-spacing-base);\n    }\n\n    .label-container > * {\n        width: 100%;\n        text-align: center;\n        flex: 1;\n        color: var(--wcs-horizontal-step-text-color-default);\n        font-weight: 500;\n\n    }\n\n    .label-container > *[data-disable] {\n        color: var(--wcs-horizontal-step-text-color-disabled);\n    }\n\n    .label-container > *[data-current] {\n        color: var(--wcs-horizontal-step-text-color-active);\n    }\n\n    .label-container > div[data-first] {\n        margin-right: calc(var(--wcs-semantic-size-m, 40px) / 2);\n        text-align: left;\n        flex: 0.5;\n    }\n\n    .label-container > div[data-last] {\n        margin-left: calc(var(--wcs-semantic-size-m, 40px) / 2);\n        text-align: right;\n        flex: 0.5;\n    }\n}\n","import {\n    Component,\n    ComponentInterface,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Method,\n    Prop,\n    State,\n    Watch\n} from '@stencil/core';\nimport { HorizontalStepClickEvent, HorizontalStepConfig, HorizontalStepperMode } from './horizontal-stepper-interface';\nimport { HorizontalStep } from './horizontal-step';\n\n/**\n * The horizontal-stepper is a representation of a userâ€™s progress through a series of discrete steps.\n *\n * @cssprop --wcs-horizontal-step-text-color-default - Text color of the step by default\n * @cssprop --wcs-horizontal-step-text-color-active - Text color of the step when active\n * @cssprop --wcs-horizontal-step-text-color-disabled - Text color of step when disabled\n */\n@Component({\n    tag: 'wcs-horizontal-stepper',\n    styleUrl: 'horizontal-stepper.scss',\n    shadow: true,\n})\nexport class HorizontalStepper implements ComponentInterface {\n    @Element() private el!: HTMLWcsHorizontalStepperElement;\n    /**\n     * index of the active step. The index corresponds to the index of the step in the 'steps' list\n     */\n    @Prop({mutable: true}) currentStep: number = 0;\n    /**\n     * steps to display\n     */\n    @Prop() steps: HorizontalStepConfig[];\n    /**\n     * Specifies if the stepper is in linear mode (the user can only click on the next step)\n     * or non-linear (the user can click on any step)\n     */\n    @Prop() mode: HorizontalStepperMode = 'nonLinear';\n    /**\n     * Specifies whether a check should be displayed when a step is passed.\n     */\n    @Prop({ reflect: true }) checkOnComplete: boolean;\n    /**\n     * Emits when the user selects a new step.\n     */\n    @Event() wcsHorizontalStepClick!: EventEmitter<HorizontalStepClickEvent>\n\n    /**\n     * Used to know which current step index is selected (component internal calculations mainly for the animation)\n     * @private\n     */\n    @State() private internalCurrentStepIndex: number;\n\n    componentWillLoad(): Promise<void> | void {\n        this.internalCurrentStepIndex = this.currentStep;\n        if (this.steps.length < 1) {\n            throw new Error('You must add at least one step');\n        }\n    }\n\n    @Watch('currentStep')\n    onCurrentStepChange(newValue: number, oldValue: number) {\n        //Check if the function is called before the component has finished its initialization in which case we do nothing\n        if (this.internalCurrentStepIndex !== undefined) {\n            const stepInterval = Math.abs(oldValue - newValue);\n            this.el.style.setProperty('--wcs-progress-bar-animation-duration', 350 / stepInterval + 'ms');\n            if (newValue !== oldValue) {\n                for (let i = 0; i < stepInterval; i++) {\n                    setTimeout(() => {\n                        this.internalCurrentStepIndex -= (oldValue - newValue) > 0 ? 1 : -1;\n                        \n                        if (i === stepInterval - 1) {\n                            this.el.style.removeProperty('--wcs-progress-bar-animation-duration');\n                        }\n                    }, (i * (375 / stepInterval)));\n                }\n            }\n        }\n    }\n\n    @Method()\n    async previous() {\n        this.navigateToIndex(this.internalCurrentStepIndex - 1, 'backward');\n    }\n\n    @Method()\n    async next() {\n        this.navigateToIndex(this.internalCurrentStepIndex + 1, 'forward');\n    }\n\n    private navigateToIndex(index: number, direction: 'backward' | 'forward'): void {\n        if (index >= 0 && index <= this.steps.length - 1) {\n            if (this.steps[index]?.complete || this.steps[index]?.disable) {\n                this.navigateToIndex(index + (direction === 'forward' ? 1 : -1), direction)\n            } else {\n                this.currentStep = index;\n            }\n        }\n    }\n\n    render(): any {\n        return (\n            <Host>\n                {/* \n                When using list-style: none in CSS, it removes the semantic of the list in Safari.\n                So we add role=\"list\" manually to provide semantic to screen readers\n                https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n                https://css-tricks.com/snippets/css/remove-list-markers-without-affecting-semantics/ \n                */}\n                <ul role=\"list\" class=\"steps\">\n                    {this.steps.map((step: HorizontalStepConfig, index) =>\n                        (<HorizontalStep step={step}\n                                         passed={index <= this.internalCurrentStepIndex}\n                                         checkOnComplete={this.checkOnComplete}\n                                         complete={this.isComplete(step, index)}\n                                         active={index === this.internalCurrentStepIndex}\n                                         first={index === 0}\n                                         disable={this.isDisable(step, index)}\n                                         onClick={step => this.wcsHorizontalStepClick.emit({step, index})}\n                            />\n                        )\n                    )}\n                </ul>\n                {this.renderLabels()}\n            </Host>\n        );\n    }\n\n    private isComplete(step: HorizontalStepConfig, index: number) {\n        return index <= this.internalCurrentStepIndex || step.complete;\n    }\n\n    private renderLabels() {\n        if (this.steps.map(s => s.text).every(s => !s)) {\n            return null;\n        } else {\n            return <div class=\"label-container\" aria-hidden=\"true\">\n                {this.steps.map((step, index) =>\n                    (<div data-first={index === 0} data-current={index === this.internalCurrentStepIndex && !step.disable}\n                          data-disable={this.isDisable(step, index)} data-last={index === this.steps.length - 1}>\n                        <span>{step.text}</span></div>)\n                )}\n            </div>;\n        }\n    }\n\n    private isDisable(step, index) {\n        return step.disable || (this.mode === 'linear' && (!this.isNextPossibleStep(index) && this.internalCurrentStepIndex < index));\n    }\n\n    private isNextPossibleStep(index) {\n        if (index === 0) return true;\n        if (this.steps[index - 1]?.disable || this.previousStepIsCompleteAndNotActive(index)) return this.isNextPossibleStep(index - 1);\n        return this.internalCurrentStepIndex === index - 1;\n    }\n\n    private previousStepIsCompleteAndNotActive(index) {\n        return this.steps[index - 1]?.complete && index - 1 !== this.internalCurrentStepIndex;\n    }\n}\n"],"mappings":"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"}