{"version":3,"names":["actionBarCss","WcsActionBarStyle0","ActionBar","componentWillLoad","this","hasTabs","el","querySelector","render","h","Host","key","class","name"],"sources":["src/components/action-bar/action-bar.scss?tag=wcs-action-bar&encapsulation=shadow","src/components/action-bar/action-bar.tsx"],"sourcesContent":[":host {\n    --wcs-action-bar-background-color: var(--wcs-semantic-color-background-surface-primary);\n    --wcs-action-bar-gap: var(--wcs-semantic-spacing-small);\n    --wcs-action-bar-gap-actions: calc(4 * var(--wcs-semantic-spacing-base));\n    --wcs-action-bar-min-height: calc(10 * var(--wcs-semantic-size-base));\n    --wcs-action-bar-padding-horizontal: var(--wcs-semantic-spacing-large);\n    --wcs-action-bar-padding-vertical: var(--wcs-semantic-spacing-base);\n\n    --wcs-action-bar-tabs-margin-top: calc(1.5 * var(--wcs-semantic-spacing-base));\n\n    --wcs-action-bar-title-font-size: var(--wcs-semantic-font-size-heading-4);\n    --wcs-action-bar-title-font-weight: var(--wcs-semantic-font-weight-heavy);\n    --wcs-action-bar-title-color: var(--wcs-semantic-color-text-primary);\n\n    --wcs-tabs-gutter-border-width: var(--wcs-semantic-border-width-default);\n    --wcs-tabs-gutter-background-color: var(--wcs-semantic-color-border-secondary);\n\n    padding: 0 var(--wcs-action-bar-padding-horizontal);\n    min-height: var(--wcs-action-bar-min-height);\n    background-color: var(--wcs-action-bar-background-color);\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    gap: var(--wcs-action-bar-gap);\n\n    .title-actions {\n        padding-top: var(--wcs-action-bar-padding-vertical);\n        padding-bottom: var(--wcs-action-bar-padding-vertical);\n        gap: var(--wcs-action-bar-gap-actions);\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-between;\n        flex-grow: 1;\n    }\n\n    .title-actions[data-has-tabs] {\n        padding-bottom: 0;\n    }\n\n    h1 {\n        font-size: var(--wcs-action-bar-title-font-size);\n        font-weight: var(--wcs-action-bar-title-font-weight);\n        line-height: 1.25;\n        margin: 0;\n        color: var(--wcs-action-bar-title-color);\n    }\n}\n\n:host([gutter]) {\n    border-bottom: solid var(--wcs-tabs-gutter-border-width) var(--wcs-tabs-gutter-background-color);\n}\n\n::slotted([slot=actions]) {\n    display: flex;\n}\n\n::slotted([slot=tabs]) {\n    margin-top: var(--wcs-action-bar-tabs-margin-top);\n}\n","import { Component, ComponentInterface, Element, h, Host, Prop, State } from '@stencil/core';\n\n/**\n * The action-bar component is a group of elements appearing across the top of all pages on a business application.\n * \n * @cssprop --wcs-action-bar-background-color - Background color of the action bar\n * @cssprop --wcs-action-bar-gap - Gap between the title and the tabs\n * @cssprop --wcs-action-bar-gap-actions - Gap between the title and the actions\n * @cssprop --wcs-action-bar-min-height - Minimum height of the action bar\n * @cssprop --wcs-action-bar-padding-horizontal - Horizontal padding of the action bar\n * @cssprop --wcs-action-bar-padding-vertical - Vertical padding of the action bar\n * @cssprop --wcs-action-bar-tabs-margin-top - Margin top of the tabs when slotted\n * @cssprop --wcs-action-bar-title-font-size - Font size of the title\n * @cssprop --wcs-action-bar-title-font-weight - Font weight of the title\n * @cssprop --wcs-action-bar-title-color - Color of the title\n * @cssprop --wcs-tabs-gutter-border-width - Border width of the gutter\n * @cssprop --wcs-tabs-gutter-background-color - Background color of the gutter\n */\n@Component({\n    tag: 'wcs-action-bar',\n    styleUrl: 'action-bar.scss',\n    shadow: true\n})\nexport class ActionBar implements ComponentInterface {\n    @Element() private el: HTMLWcsActionBarElement;\n    /**\n     * Determines if the action bar should have a border at the bottom.\n     * You should not use this property if a gutter is already present on tabs\n     */\n    @Prop({ reflect: true }) gutter: boolean;\n    @State() private hasTabs: boolean = false;\n\n    componentWillLoad(): Promise<void> | void {\n        this.hasTabs = !!this.el.querySelector('[slot=\"tabs\"]');\n    }\n\n    render() {\n        return (\n            <Host>\n                <div class=\"title-actions\" data-has-tabs={this.hasTabs}>\n                    <h1>\n                        <slot></slot>\n                    </h1>\n                    <div class=\"actions\">\n                        <slot name=\"actions\"></slot>\n                    </div>\n                </div>\n                <div class=\"tabs-container\">\n                    <slot name=\"tabs\"></slot>\n                </div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"yDAAA,MAAMA,EAAe,qxDACrB,MAAAC,EAAeD,E,MCsBFE,EAAS,M,4DAOkB,K,CAEpC,iBAAAC,GACIC,KAAKC,UAAYD,KAAKE,GAAGC,cAAc,gB,CAG3C,MAAAC,GACI,OACIC,EAACC,EAAI,CAAAC,IAAA,4CACDF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,gBAAe,gBAAgBR,KAAKC,SAC3CI,EAAA,MAAAE,IAAA,4CACIF,EAAA,QAAAE,IAAA,8CAEJF,EAAA,OAAAE,IAAA,2CAAKC,MAAM,WACPH,EAAA,QAAAE,IAAA,2CAAME,KAAK,cAGnBJ,EAAA,OAAAE,IAAA,2CAAKC,MAAM,kBACPH,EAAA,QAAAE,IAAA,2CAAME,KAAK,U"}