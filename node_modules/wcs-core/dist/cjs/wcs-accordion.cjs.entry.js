'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-6f0140d8.js');

const accordionCss = ":host{--wcs-accordion-gap:var(--wcs-semantic-spacing-base);display:flex;flex-direction:column;gap:var(--wcs-accordion-gap)}";
const WcsAccordionStyle0 = accordionCss;

const Accordion = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.accordionPanels = [];
        this.hideActionText = true;
        this.highlight = false;
        this.groupContentWithHeader = false;
    }
    componentWillLoad() {
        this.accordionPanels = this.getAllAccordionPanelsFromHostElement();
        this.updateHideActiontextOnPanel();
        this.updateHighlightOnPanel();
        this.updateGroupContentWithHeader();
    }
    wcsOpenChangeHandler(event) {
        if (event.detail) {
            this.closeAllAccordionsExcept(event.target);
        }
    }
    updateHideActiontextOnPanel() {
        this.accordionPanels.forEach((opt) => {
            opt.hideActionText = this.hideActionText;
        });
    }
    updateHighlightOnPanel() {
        this.accordionPanels.forEach((opt) => {
            opt.highlight = this.highlight;
        });
    }
    updateGroupContentWithHeader() {
        this.accordionPanels.forEach((opt) => {
            opt.groupContentWithHeader = this.groupContentWithHeader;
        });
    }
    render() {
        return (index.h(index.Host, { key: 'b99f05f446c6848298b51f2360cdca1b4d253de3' }, index.h("slot", { key: 'f8f12b1ae5e2a43d64fbc14c15980109031b8ad0' })));
    }
    getAllAccordionPanelsFromHostElement() {
        return Array.from(this.el.children)
            .filter(el => el.tagName === 'WCS-ACCORDION-PANEL');
    }
    /**
     * Close all accordion panels except the one that match the eventTarget reference
     */
    closeAllAccordionsExcept(eventTarget) {
        this.accordionPanels.filter(a => a !== eventTarget).forEach(a => a.close());
    }
    get el() { return index.getElement(this); }
    static get watchers() { return {
        "hideActionText": ["updateHideActiontextOnPanel"],
        "highlight": ["updateHighlightOnPanel"],
        "groupContentWithHeader": ["updateGroupContentWithHeader"]
    }; }
};
Accordion.style = WcsAccordionStyle0;

exports.wcs_accordion = Accordion;

//# sourceMappingURL=wcs-accordion.cjs.entry.js.map