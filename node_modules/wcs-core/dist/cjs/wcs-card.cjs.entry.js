'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-6f0140d8.js');

const cardCss = ":host{--wcs-card-border-color:var(--wcs-semantic-color-border-secondary);--wcs-card-border-radius:var(--wcs-semantic-border-radius-base);--wcs-card-border-width:var(--wcs-semantic-border-width-default);--wcs-card-background-color:var(--wcs-semantic-color-background-surface-primary);--wcs-card-text-color:var(--wcs-semantic-color-text-primary);--wcs-card-horizontal-min-height:160px;position:relative;display:flex;flex-direction:column;min-width:0;word-wrap:break-word;background-clip:border-box;border-radius:var(--wcs-card-border-radius);background-color:var(--wcs-card-background-color);color:var(--wcs-card-text-color)}:host([mode=raised]){box-shadow:0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2)}:host([mode=flat]){border:solid var(--wcs-card-border-width) var(--wcs-card-border-color)}:host([orientation=horizontal]){flex-direction:row;min-height:var(--wcs-card-horizontal-height)}:host([orientation=vertical]){flex-direction:column}";
const WcsCardStyle0 = cardCss;

const Card = class {
    constructor(hostRef) {
        index.registerInstance(this, hostRef);
        this.mode = 'flat';
        this.orientation = null;
    }
    orientationChanged() {
        this.updateWcsCardImageOrientation();
    }
    onSlotChange() {
        if (this.orientation) {
            this.updateWcsCardBodyOrientation();
            this.updateWcsCardImageOrientation();
        }
    }
    updateWcsCardImageOrientation() {
        var _a;
        (_a = this.findWcsCardMedia()) === null || _a === void 0 ? void 0 : _a.setOrientation(this.orientation);
    }
    updateWcsCardBodyOrientation() {
        var _a;
        (_a = this.findWcsCardBody()) === null || _a === void 0 ? void 0 : _a.setOrientation(this.orientation);
    }
    findWcsCardMedia() {
        return this.el.querySelector('wcs-card-media');
    }
    findWcsCardBody() {
        return this.el.querySelector('wcs-card-body');
    }
    render() {
        return (index.h("slot", { key: '20a57cf8fc64155e65a98bdb69618ec013ea5a7f', onSlotchange: () => this.onSlotChange() }));
    }
    get el() { return index.getElement(this); }
    static get watchers() { return {
        "orientation": ["orientationChanged"]
    }; }
};
Card.style = WcsCardStyle0;

exports.wcs_card = Card;

//# sourceMappingURL=wcs-card.cjs.entry.js.map