{"file":"wcs-nav.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,MAAM,GAAG,00BAA00B,CAAC;AAC11B,qBAAe,MAAM;;ACGrB,MAAM,wBAAwB,GAAG,CAAC,OAAO,CAAC,CAAC;MAgB9B,GAAG;IALhB;;QAQY,wBAAmB,GAAyB,EAAE,CAAC;KA2B1D;IAzBG,iBAAiB;QACb,IAAI,CAAC,mBAAmB,mCACjBA,6BAAqB,CAAC,IAAI,CAAC,EAAE,CAAC,GAC9BC,yBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,wBAAwB,CAAC,CAC1D,CAAC;KACL;IAGD,MAAM,gBAAgB,CAAC,IAAuB,EAAE,KAAgC;QAC5EC,4BAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;KACrD;IAED,MAAM;QACF,QACIC,gFAAK,IAAI,EAAC,YAAY,EACjB,KAAK,EAAC,mBAAmB,EACzB,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,IAC9B,IAAI,CAAC,mBAAmB,GAC7BA,kEAAK,IAAI,EAAC,MAAM,IACZA,oEAAO,EACPA,mEAAM,IAAI,EAAC,QAAQ,GAAE,CACnB,CACJ,EACR;KACL;;;;;;;","names":["inheritAriaAttributes","inheritAttributes","setOrRemoveAttribute","h"],"sources":["src/components/nav/nav.scss?tag=wcs-nav&encapsulation=shadow","src/components/nav/nav.tsx"],"sourcesContent":["@import '../../style/breakpoints';\n\n:host {\n    --wcs-nav-background-color: var(--wcs-semantic-color-background-surface-brand);\n    --wcs-nav-width-desktop: calc(12 * var(--wcs-semantic-size-base));\n    --wcs-nav-height-mobile: calc(6 * var(--wcs-semantic-size-base));\n}\n\nnav {\n    background-color: var(--wcs-nav-background-color);\n    display: flex;\n    z-index: 1055;\n    flex-direction: column;\n    width: var(--wcs-nav-width-desktop);\n    height: 100%;\n    overflow: auto;\n    scrollbar-width: thin;\n\n    div[role=\"list\"] {\n        list-style-type: none;\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n\n        @include for-tablet-landscape-down {\n            flex-direction: row;\n        }\n    }\n\n    @include for-tablet-landscape-down {\n        flex-direction: row;\n        width: 100%;\n        height: var(--wcs-nav-height-mobile);\n    }\n}\n\n::slotted(wcs-nav-item) {\n    @include for-tablet-landscape-down {\n        flex: 1;\n    }\n}\n\n// Place bottom items at the bottom\nslot[name=bottom],\n// Same for ff < 63\nwcs-nav-item:not([slot=bottom]) + wcs-nav-item[slot=bottom] {\n    @include for-desktop-up {\n        display: block;\n        margin-top: auto;\n    }\n}\n","import { Component, ComponentInterface, Element, h, Method } from '@stencil/core';\nimport { inheritAriaAttributes, inheritAttributes, setOrRemoveAttribute } from \"../../utils/helpers\";\nimport { AriaAttributeName, MutableAriaAttribute } from \"../../utils/mutable-aria-attribute\";\n\nconst NAV_ARIA_INHERITED_ATTRS = ['title'];\n\n/**\n * The nav component is a container for navigation links to other pages of the website.\n * \n * @slot bottom Bottom part of the nav to put to nav-items at the end\n * \n * @cssprop --wcs-nav-background-color - Background color of the nav\n * @cssprop --wcs-nav-width-desktop - Width of the nav on desktop\n * @cssprop --wcs-nav-height-mobile - Height of the nav on mobile\n */\n@Component({\n    tag: 'wcs-nav',\n    styleUrl: 'nav.scss',\n    shadow: true\n})\nexport class Nav implements ComponentInterface, MutableAriaAttribute {\n    @Element() private el!: HTMLWcsProgressBarElement;\n    private nativeNav!: HTMLElement;\n    private inheritedAttributes: { [k: string]: any } = {};\n\n    componentWillLoad(): Promise<void> | void {\n        this.inheritedAttributes = {\n            ...inheritAriaAttributes(this.el),\n            ...inheritAttributes(this.el, NAV_ARIA_INHERITED_ATTRS),\n        };\n    }\n\n    @Method()\n    async setAriaAttribute(attr: AriaAttributeName, value: string | null | undefined) {\n        setOrRemoveAttribute(this.nativeNav, attr, value);\n    }\n    \n    render() {\n        return (\n            <nav role=\"navigation\"\n                 class=\"wcs-nav-container\"\n                 ref={(el) => (this.nativeNav = el)}\n                 {...this.inheritedAttributes}>\n                <div role=\"list\">\n                    <slot/>\n                    <slot name=\"bottom\"/>\n                </div>\n            </nav>\n        );\n    }\n}\n"],"version":3}