{"version":3,"file":"alert.e2e.js","sourceRoot":"","sources":["../../../src/components/alert/alert.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nimport { setWcsContent } from '../../utils/tests';\n\nconst WAITING_DELAY_BEFORE_ASSERTIONS = 4_000;\n\ndescribe('alert', () => {\n    it('should display title and subtitle content', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert>\n                <span slot=\"title\">Test Title</span>\n                <span slot=\"subtitle\">Test Subtitle</span>\n            </wcs-alert>\n        `);\n\n        // Then\n        const title = await page.find('wcs-alert > [slot=\"title\"]');\n        const subtitle = await page.find('wcs-alert > [slot=\"subtitle\"]');\n        expect(title.textContent).toBe('Test Title');\n        expect(subtitle.textContent).toBe('Test Subtitle');\n        // We don't use isVisible() because the item is still in the user DOM and the slot style don't seem to be taken\n        // into account with the isVisible() method\n    });\n\n    it('should emit wcsAlertDismiss event when close button is clicked', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert>\n                <span slot=\"title\">Test Title</span>\n                <span slot=\"subtitle\">Test Subtitle</span>\n            </wcs-alert>\n        `);\n        const alert = await page.find('wcs-alert');\n        const alertDismiss = await alert.spyOnEvent('wcsAlertDismiss');\n        const closeButton = await page.find('wcs-alert >>> .close-button');\n\n        // When\n        await closeButton.click();\n        await page.waitForChanges();\n\n        // Then\n        expect(alertDismiss).toHaveReceivedEventTimes(1);\n        expect(await alert.getProperty('show')).toBe(false);\n    });\n\n    it('should auto-dismiss after timeout', async () => {\n        // Given\n        const timeout = 500;\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert timeout=\"${timeout}\">\n                <span slot=\"title\">Test Title</span>\n                <span slot=\"subtitle\">Test Subtitle</span>\n            </wcs-alert>\n        `);\n        const alert = await page.find('wcs-alert');\n        const alertDismiss = await alert.spyOnEvent('wcsAlertDismiss');\n\n        // Wait longer than the specified timeout to account for processing time\n        await new Promise(resolve => setTimeout(resolve, timeout + WAITING_DELAY_BEFORE_ASSERTIONS));\n        await page.waitForChanges();\n\n        // Then\n        expect(alertDismiss).toHaveReceivedEventTimes(1);\n        expect(await alert.getProperty('show')).toBe(false);\n    });\n\n    it('should not auto-dismiss if timeout is 0', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert timeout=\"0\">\n                <span slot=\"title\">Test Title</span>\n                <span slot=\"subtitle\">Test Subtitle</span>\n            </wcs-alert>\n        `);\n        const alert = await page.find('wcs-alert');\n        const alertDismiss = await alert.spyOnEvent('wcsAlertDismiss');\n\n        // Wait for some time to ensure the alert doesn't auto-dismiss\n        await new Promise(resolve => setTimeout(resolve, WAITING_DELAY_BEFORE_ASSERTIONS));\n        await page.waitForChanges();\n\n        // Then\n        expect(alertDismiss).toHaveReceivedEventTimes(0)\n        expect(await alert.getProperty('show')).toBe(true);\n    });\n\n    it('should display progress bar when showProgressBar is true', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert show-progress-bar>\n                <span slot=\"title\">Test Title</span>\n                <span slot=\"subtitle\">Test Subtitle</span>\n            </wcs-alert>\n        `);\n\n        // Then\n        const progressBar = await page.find('wcs-alert >>> .progress-bar:not(.hidden)');\n        expect(progressBar).not.toBeNull();\n    });\n\n    it('should not display progress bar when showProgressBar is false', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert>\n                <span slot=\"title\">Test Title</span>\n                <span slot=\"subtitle\">Test Subtitle</span>\n            </wcs-alert>\n        `);\n\n        // Then\n        const progressBar = await page.find('wcs-alert >>> .progress-bar.hidden');\n        expect(progressBar).not.toBeNull();\n    });\n\n    it('should not auto-dismiss when mouse is hovering', async () => {\n        // Given\n        const timeout = WAITING_DELAY_BEFORE_ASSERTIONS;\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert timeout=\"${timeout}\">\n                <span slot=\"title\">Test Title</span>\n                <span slot=\"subtitle\">Test Subtitle</span>\n            </wcs-alert>\n        `);\n        const alert = await page.find('wcs-alert');\n\n        const alertDismiss = await alert.spyOnEvent('wcsAlertDismiss');\n\n        expect(await alert.getProperty('show')).toBe(true);\n\n        // Simulate mouse hover\n        await alert.triggerEvent('mouseover');\n        await page.waitForChanges();\n\n        // Verify the component has processed the mouse over by executing this in the browser context\n        await page.evaluate(() => {\n            // Small delay to ensure JS executes\n            return new Promise(resolve => setTimeout(resolve, 100));\n        });\n\n        // Wait longer than the component timeout\n        await new Promise(resolve => setTimeout(resolve, timeout + WAITING_DELAY_BEFORE_ASSERTIONS));\n        await page.waitForChanges();\n\n        // Then - The alert should still be visible while mouse is hovering\n        expect(alertDismiss).not.toHaveReceivedEvent();\n        expect(await alert.getProperty('show')).toBe(true);\n\n        // When - Mouse leaves\n        await alert.triggerEvent('mouseout');\n        await page.waitForChanges();\n\n        // Wait for the dismiss to happen after mouseout\n        await new Promise(resolve => setTimeout(resolve, WAITING_DELAY_BEFORE_ASSERTIONS));\n        await page.waitForChanges();\n\n        // Then - The alert should dismiss\n        expect(alertDismiss).toHaveReceivedEventTimes(1);\n        expect(await alert.getProperty('show')).toBe(false);\n    });\n});\n"]}