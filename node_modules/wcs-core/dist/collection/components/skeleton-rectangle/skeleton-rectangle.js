import { h, Host } from "@stencil/core";
/**
 * Use a skeleton rectangle as a placeholder for large images or square-shaped components
 *
 * @cssprop --wcs-skeleton-border-radius - Border-radius of the skeleton. If not overridden, depends on the `rounded` attribute.
 *
 * @cssprop --wcs-skeleton-height - _(Shared among all skeleton types)_<br/>Height of the skeleton
 * @cssprop --wcs-skeleton-min-height - _(Shared among all skeleton types)_<br/> Minimum height of the skeleton
 * @cssprop --wcs-skeleton-width - _(Shared among all skeleton types)_<br/> Width of the skeleton
 * @cssprop --wcs-skeleton-background-color - _(Shared among all skeleton types)_<br/> Background color of the skeleton (default is a gradient)
 * @cssprop --wcs-skeleton-animation-duration - _(Shared among all skeleton types)_<br/> Duration of the skeleton animation, if applicable
 */
export class SkeletonRectangle {
    constructor() {
        this.animation = 'glide';
        this.rounded = false;
        this.height = 'auto';
        this.width = 'auto';
    }
    render() {
        return (h(Host, { key: 'edf5aa2fa711b6e27d066dab259559154af9b08e', style: { height: this.height, width: this.width } }, h("span", { key: 'f139ef33c3d2a10aede15bbd540f10758cc1ce16', "aria-hidden": "true" })));
    }
    static get is() { return "wcs-skeleton-rectangle"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["skeleton-rectangle.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["skeleton-rectangle.css"]
        };
    }
    static get properties() {
        return {
            "animation": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "WcsSkeletonAnimation",
                    "resolved": "\"glide\" | \"none\" | \"pulse\"",
                    "references": {
                        "WcsSkeletonAnimation": {
                            "location": "import",
                            "path": "../skeleton/skeleton-interface",
                            "id": "src/components/skeleton/skeleton-interface.ts::WcsSkeletonAnimation"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the animation of the skeleton"
                },
                "attribute": "animation",
                "reflect": true,
                "defaultValue": "'glide'"
            },
            "rounded": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Adds a border radius on the skeleton if true"
                },
                "attribute": "rounded",
                "reflect": true,
                "defaultValue": "false"
            },
            "height": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "CssTypes.Height",
                    "resolved": "LengthOrPercentage | Keyword | Global",
                    "references": {
                        "CssTypes": {
                            "location": "import",
                            "path": "../../shared-types",
                            "id": "src/shared-types.ts::CssTypes"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the height of the skeleton (can be any valid CSS value)"
                },
                "attribute": "height",
                "reflect": true,
                "defaultValue": "'auto'"
            },
            "width": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "CssTypes.Width",
                    "resolved": "LengthOrPercentage | Keyword | Global",
                    "references": {
                        "CssTypes": {
                            "location": "import",
                            "path": "../../shared-types",
                            "id": "src/shared-types.ts::CssTypes"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the width of the skeleton (can be any valid CSS value)"
                },
                "attribute": "width",
                "reflect": true,
                "defaultValue": "'auto'"
            }
        };
    }
}
//# sourceMappingURL=skeleton-rectangle.js.map
