{"version":3,"file":"com-nav.e2e.js","sourceRoot":"","sources":["../../../src/components/com-nav/com-nav.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { E2EPage, newE2EPage } from \"@stencil/core/testing\";\nimport {KeyInput} from \"puppeteer\";\nimport { setWcsContent } from \"../../utils/tests\";\n\ndescribe('Com nav', () => {\n    describe('Keyboard navigation', () => {\n        describe('Mobile menu', () => {\n            let page!: E2EPage;\n            beforeEach(async () => {\n                // Given\n                page = await newE2EPage();\n                await page.setViewport({\n                    width: 320,\n                    height: 480,\n                });\n\n                await setWcsContent(page, `\n                 <wcs-com-nav app-name=\"App Test\">\n                    <wcs-com-nav-submenu label=\"Sous menu\" panel-title=\"Sous Menu\"\n                                         panel-description=\"Nullam id dolor id nibh ultricies vehicula ut id elit. Cras mattis consectetur purus sit amet fermentum. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\">\n                        <wcs-com-nav-item>\n                            <a href=\"#\">Loisirs & Tourisme</a>\n                        </wcs-com-nav-item>\n                        <wcs-com-nav-item>\n                            <a href=\"#\">Toutes les lignes</a>\n                        </wcs-com-nav-item>\n                        <wcs-com-nav-item>\n                            <a href=\"#\">Services mobiles</a>\n                        </wcs-com-nav-item>\n                        <wcs-com-nav-item>\n                            <a href=\"#\">Au quotidien</a>\n                        </wcs-com-nav-item>\n                        <wcs-com-nav-item>\n                            <a href=\"#\">Le réseau</a>\n                        </wcs-com-nav-item>\n                    </wcs-com-nav-submenu>\n                    <wcs-com-nav-submenu label=\"Autre sous menu\" panel-title=\"Autre Sous Menu\"\n                                         panel-description=\"Un autre sous menu avec des catégories. Cras mattis consectetur purus sit amet fermentum. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\">\n                        <wcs-com-nav-item>\n                            <a href=\"#\">Le réseau</a>\n                        </wcs-com-nav-item>\n                        <wcs-com-nav-category label=\"Une catégorie\">\n                            <wcs-com-nav-item>\n                                <a href=\"#\">Services mobiles text plus long</a>\n                            </wcs-com-nav-item>\n                            <wcs-com-nav-item>\n                                <a href=\"#\">Au quotidien</a>\n                            </wcs-com-nav-item>\n                            <wcs-com-nav-item>\n                                <a href=\"#\">Le réseau</a>\n                            </wcs-com-nav-item>\n                        </wcs-com-nav-category>\n                        <wcs-com-nav-category label=\"Une catégorie\">\n                            <wcs-com-nav-item>\n                                <a href=\"#\">1</a>\n                            </wcs-com-nav-item>\n                            <wcs-com-nav-item>\n                                <a href=\"#\">2</a>\n                            </wcs-com-nav-item>\n                        </wcs-com-nav-category>\n                    </wcs-com-nav-submenu>\n                    <wcs-com-nav-item id=\"com-nav-item-last-item\">\n                        <a href=\"https://sncf.com\" target=\"_blank\">Ressource externe</a>\n                    </wcs-com-nav-item>\n                    <div slot=\"actions\">\n                        <wcs-button mode=\"clear\" class=\"wcs-dark\">Connexion</wcs-button>\n                    </div>\n                </wcs-com-nav>\n            `);\n            })\n\n            it.each(['Enter', 'Space'])('should open menu when press %s key on mobile menu icon', async (key: KeyInput) => {\n                // Given the content is set in beforeEach method\n\n                // When\n                const menuIcon = await page.find('wcs-com-nav >>> #mobile-menu-icon');\n                await menuIcon.focus();\n                await page.keyboard.press(key);\n\n                await page.waitForChanges();\n\n                // Then\n                const menu = await page.find('wcs-com-nav >>> .mobile-overlay');\n                expect(menu).toBeDefined();\n                expect(menu).toHaveAttribute('data-mobile-open');\n            });\n\n            it.each(['Enter', 'Space'])('should close menu when it opens and press %s key on mobile menu icon', async (key: KeyInput) => {\n                // Given\n                // the content is set in beforeEach method\n                const menuIcon = await page.find('wcs-com-nav >>> #mobile-menu-icon');\n                await menuIcon.focus();\n                await page.keyboard.press(key);\n\n                // Wait for menu to open\n                await page.waitForChanges();\n\n                // Close the menu\n                await page.keyboard.press(key);\n                await page.waitForChanges();\n\n                // Then\n                const menu = await page.find('wcs-com-nav >>> .mobile-overlay');\n                expect(menu).not.toHaveAttribute('data-mobile-open');\n            });\n\n            it('should be touchable on mobile and open the menu', async () => {\n                // Given\n                // the content is set in beforeEach method\n                const menuIcon = await page.find('wcs-com-nav >>> #mobile-menu-icon');\n                await menuIcon.tap();\n\n                // Then\n                const menu = await page.find('wcs-com-nav >>> .mobile-overlay');\n                expect(menu).toBeDefined();\n                expect(menu).toHaveAttribute('data-mobile-open');\n            });\n\n            it('should close menu when it opens and press escape key anywhere', async () => {\n                // Given\n                // the content is set in beforeEach method\n                const menuIcon = await page.find('wcs-com-nav >>> #mobile-menu-icon');\n                await menuIcon.focus();\n                await page.keyboard.press('Enter');\n\n                // When\n                // Navigate on menu\n                await page.keyboard.press('Tab');\n                await page.keyboard.press('Tab');\n                await page.keyboard.press('Tab');\n                await page.keyboard.press('Escape');\n\n                await page.waitForChanges();\n\n                // Then\n                const menu = await page.find('wcs-com-nav >>> .mobile-overlay');\n                expect(menu).not.toHaveAttribute('data-mobile-open');\n            });\n\n            it('should close the mobile menu when clicking on a wcs-com-nav-item', async () => {\n                // Given\n                const menuIcon = await page.find('wcs-com-nav >>> #mobile-menu-icon');\n                await menuIcon.tap();\n\n                // Wait for menu to open\n                await page.waitForChanges();\n\n                // When\n                const navItem = await page.find('#com-nav-item-last-item');\n                await navItem.click();\n\n                await page.waitForChanges();\n\n                // Then\n                const menu = await page.find('wcs-com-nav >>> .mobile-overlay');\n                expect(menu).not.toHaveAttribute('data-mobile-open');\n            });\n        });\n    });\n});\n"]}