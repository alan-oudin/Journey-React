import { h, Host } from "@stencil/core";
/**
 * Use a skeleton circle as a placeholder round images, illustrations or components
 *
 * @cssprop --wcs-skeleton-circle-border-radius - Border radius of the circle
 *
 * @cssprop --wcs-skeleton-height - _(Shared among all skeleton types)_<br/>Height of the skeleton
 * @cssprop --wcs-skeleton-min-height - _(Shared among all skeleton types)_<br/> Minimum height of the skeleton
 * @cssprop --wcs-skeleton-width - _(Shared among all skeleton types)_<br/> Width of the skeleton
 * @cssprop --wcs-skeleton-background-color - _(Shared among all skeleton types)_<br/> Background color of the skeleton (default is a gradient)
 * @cssprop --wcs-skeleton-animation-duration - _(Shared among all skeleton types)_<br/> Duration of the skeleton animation, if applicable
 */
export class SkeletonCircle {
    constructor() {
        this.animation = 'glide';
        this.radius = 50;
    }
    render() {
        return (h(Host, { key: '0d5704fdc6c41256665994d2a2d63c525e14ee6c', style: { width: `${this.radius}px`, height: `${this.radius}px` } }, h("span", { key: 'e2712e309be66af8be9fd3aee2b34ee20b67a980', "aria-hidden": "true" })));
    }
    static get is() { return "wcs-skeleton-circle"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["skeleton-circle.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["skeleton-circle.css"]
        };
    }
    static get properties() {
        return {
            "animation": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "WcsSkeletonAnimation",
                    "resolved": "\"glide\" | \"none\" | \"pulse\"",
                    "references": {
                        "WcsSkeletonAnimation": {
                            "location": "import",
                            "path": "../skeleton/skeleton-interface",
                            "id": "src/components/skeleton/skeleton-interface.ts::WcsSkeletonAnimation"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the animation of the skeleton"
                },
                "attribute": "animation",
                "reflect": true,
                "defaultValue": "'glide'"
            },
            "radius": {
                "type": "number",
                "mutable": false,
                "complexType": {
                    "original": "number",
                    "resolved": "number",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the radius of the circle in px"
                },
                "attribute": "radius",
                "reflect": true,
                "defaultValue": "50"
            }
        };
    }
}
//# sourceMappingURL=skeleton-circle.js.map
