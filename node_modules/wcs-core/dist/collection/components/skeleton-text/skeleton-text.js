import { h } from "@stencil/core";
/**
 * Use a skeleton text as a placeholder for titles or paragraphs.
 *
 *
 * @cssprop --wcs-skeleton-text-height - Height of the skeleton text
 * @cssprop --wcs-skeleton-text-height-h1 - Height of the skeleton text for heading 1
 * @cssprop --wcs-skeleton-text-height-h2 - Height of the skeleton text for heading 2
 * @cssprop --wcs-skeleton-text-height-h3 - Height of the skeleton text for heading 3
 * @cssprop --wcs-skeleton-text-height-body - Height of the skeleton text for body
 * @cssprop --wcs-skeleton-text-height-caption - Height of the skeleton text for caption
 *
 * @cssprop --wcs-skeleton-height - _(Shared among all skeleton types)_<br/>Height of the skeleton
 * @cssprop --wcs-skeleton-min-height - _(Shared among all skeleton types)_<br/> Minimum height of the skeleton
 * @cssprop --wcs-skeleton-width - _(Shared among all skeleton types)_<br/> Width of the skeleton
 * @cssprop --wcs-skeleton-background-color - _(Shared among all skeleton types)_<br/> Background color of the skeleton (default is a gradient)
 * @cssprop --wcs-skeleton-animation-duration - _(Shared among all skeleton types)_<br/> Duration of the skeleton animation, if applicable
 */
export class SkeletonText {
    constructor() {
        this.animation = 'glide';
        this.height = 'body';
    }
    render() {
        return h("span", { key: 'ba89cefda296d6c9fec4c035756a12deddfc35e3', "aria-hidden": "true" });
    }
    static get is() { return "wcs-skeleton-text"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["skeleton-text.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["skeleton-text.css"]
        };
    }
    static get properties() {
        return {
            "animation": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "WcsSkeletonAnimation",
                    "resolved": "\"glide\" | \"none\" | \"pulse\"",
                    "references": {
                        "WcsSkeletonAnimation": {
                            "location": "import",
                            "path": "../skeleton/skeleton-interface",
                            "id": "src/components/skeleton/skeleton-interface.ts::WcsSkeletonAnimation"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the animation of the skeleton"
                },
                "attribute": "animation",
                "reflect": true,
                "defaultValue": "'glide'"
            },
            "height": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "'h1' | 'h2' | 'h3' | 'caption' | 'body'",
                    "resolved": "\"body\" | \"caption\" | \"h1\" | \"h2\" | \"h3\"",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies the line height of the text skeleton"
                },
                "attribute": "height",
                "reflect": false,
                "defaultValue": "'body'"
            }
        };
    }
}
//# sourceMappingURL=skeleton-text.js.map
