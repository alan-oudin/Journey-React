{"version":3,"file":"grid-keyboard-event.js","sourceRoot":"","sources":["../../../src/components/grid/grid-keyboard-event.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iCAAiC,EAAE,MAAM,4BAA4B,CAAC;AA0B/E;;;;GAIG;AACH,MAAM,UAAU,yBAAyB,CAAC,KAAoB,EAAE,IAA+E;IAC3I,MAAM,gBAAgB,GAAG,iCAAiC,CAAC,KAAK,CAAC,CAAC;IAElE,IAAG,gBAAgB,KAAK,SAAS,EAAE,CAAC;QAChC,OAAO,EAAE,CAAC;IACd,CAAC;IAED,QAAQ,gBAAgB,EAAE,CAAC;QACvB,KAAK,UAAU;YACX,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;QAC/C,KAAK,YAAY;YACb,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjD,KAAK,YAAY;YACb,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;QACjD,KAAK,aAAa;YACd,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAC,CAAC,CAAC;QAClD,KAAK,MAAM;YACP,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,cAAc,EAAC,CAAC,CAAC;QACzD,KAAK,KAAK;YACN,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,aAAa,EAAC,CAAC,CAAC;QACxD,KAAK,WAAW;YACZ,QAAQ,IAAI,EAAE,CAAC;gBACX,KAAK,uBAAuB,CAAC;gBAC7B,KAAK,yBAAyB;oBAC1B,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;gBAChD,KAAK,mBAAmB;oBACpB,MAAM;YACd,CAAC;YACD,MAAM;QACV,KAAK,QAAQ;YACT,QAAQ,IAAI,EAAE,CAAC;gBACX,KAAK,yBAAyB;oBAC1B,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;gBAChD,KAAK,uBAAuB,CAAC;gBAC7B,KAAK,mBAAmB;oBACpB,MAAM;YACd,CAAC;YACD,MAAM;QACV,KAAK,WAAW;YACZ,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,eAAe,EAAC,CAAC,CAAC;QAC1D,KAAK,UAAU;YACX,OAAO,CAAC,EAAC,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,cAAc,EAAC,CAAC,CAAC;QACzD;YACI,MAAM;IACd,CAAC;IAED,OAAO,EAAE,CAAC;AACd,CAAC","sourcesContent":["import { keyboardShortcutFromKeyboardEvent } from \"../../utils/keyboard-event\";\n\n\nexport type KeyboardEventAssociatedAction = FocusCell | SelectRow;\n\n// Possibles Shortcut\n// UP_ARROW : focus cell up\n// DOWN_ARROW : focus cell down\n// LEFT_ARROW : focus cell left\n// RIGHT_ARROW : focus cell right\n\n// HOME : focus first cell of the row\n// END : focus last cell of the row\n\n// CTRL+HOME : focus first cell of the grid\n// CTRL+END : focus first cell of the grid\n\n// IF SELECTION MULTIPLE OR SINGLE :\n// MAJ+SPACE : select (check) the current row\n\n// IF SELECTION MULTIPLE\n// CTRL+A : select (check) all rows\n\ntype FocusCell = {kind: 'FocusCell', target: 'up' | 'down' | 'left' | 'right' | 'first_of_row' | 'last_of_row' | 'first_of_grid' | 'last_of_grid'};\ntype SelectRow = {kind: 'SelectRow', target: 'one' | 'all'}\n\n/**\n * We follow this https://www.w3.org/WAI/ARIA/apg/patterns/grid/\n * @param event\n * @param type\n */\nexport function getActionForKeyboardEvent(event: KeyboardEvent, type: 'grid_no_selection' | 'grid_selection_single' | 'grid_selection_multiple'): KeyboardEventAssociatedAction[] {\n    const keyboardShortcut = keyboardShortcutFromKeyboardEvent(event);\n\n    if(keyboardShortcut === 'UNKNOWN') {\n        return [];\n    }\n\n    switch (keyboardShortcut) {\n        case \"UP_ARROW\":\n            return [{kind: 'FocusCell', target: 'up'}];\n        case \"DOWN_ARROW\":\n            return [{kind: 'FocusCell', target: 'down'}];\n        case \"LEFT_ARROW\":\n            return [{kind: 'FocusCell', target: 'left'}];\n        case \"RIGHT_ARROW\":\n            return [{kind: 'FocusCell', target: 'right'}];\n        case \"HOME\":\n            return [{kind: 'FocusCell', target: 'first_of_row'}];\n        case \"END\":\n            return [{kind: 'FocusCell', target: 'last_of_row'}];\n        case \"MAJ+SPACE\":\n            switch (type) {\n                case \"grid_selection_single\":\n                case \"grid_selection_multiple\":\n                    return [{kind: 'SelectRow', target: 'one'}];\n                case \"grid_no_selection\":\n                    break;\n            }\n            break;\n        case \"CTRL+A\":\n            switch (type) {\n                case \"grid_selection_multiple\":\n                    return [{kind: 'SelectRow', target: 'all'}];\n                case \"grid_selection_single\":\n                case \"grid_no_selection\":\n                    break;\n            }\n            break;\n        case \"CTRL+HOME\":\n            return [{kind: 'FocusCell', target: 'first_of_grid'}];\n        case \"CTRL+END\":\n            return [{kind: 'FocusCell', target: 'last_of_grid'}];\n        default:\n            break;\n    }\n\n    return [];\n}\n"]}