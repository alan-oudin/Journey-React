{"version":3,"file":"grid-radio.js","sourceRoot":"","sources":["../../../src/components/grid/grid-radio.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAuB,CAAC,EAAE,MAAM,eAAe,CAAC;AAWvD,MAAM,CAAC,MAAM,SAAS,GAAwC,CAC1D,EACI,OAAO,EACP,GAAG,EACH,QAAQ,EACR,SAAS,EACT,OAAO,EACV,EAAE,EAAE;IACL,IAAI,KAAuB,CAAC;IAC5B,OAAO,CACH,WAAK,KAAK,EAAE,cAAc,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,EAAE;QAC7E,aAAO,IAAI,EAAC,OAAO,EACZ,IAAI,EAAC,WAAW,kBACF,SAAS,mBACR,QAAQ,EACvB,QAAQ,EAAC,IAAI,EACb,OAAO,EAAE,OAAO,kBACF,GAAG,OAAO,EAAE,EAC1B,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,EACzB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GACzB,CACN,CACT,CAAC;AACN,CAAC,CAAA","sourcesContent":["import { FunctionalComponent, h } from '@stencil/core';\nimport { WcsGridRow } from \"./grid-interface\";\n\ninterface GridRadioProps {\n    checked: boolean;\n    row: WcsGridRow;\n    rowIndex: number,\n    totalRows: number,\n    onClick: (row: WcsGridRow) => void;\n}\n\nexport const GridRadio: FunctionalComponent<GridRadioProps> = (\n    {\n        checked,\n        row,\n        rowIndex,\n        totalRows,\n        onClick\n    }) => {\n    let input: HTMLInputElement;\n    return (\n        <div class={`grid-radio ${checked ? 'checked' : ''}`} onClick={_ => input.click()}>\n            <input type=\"radio\"\n                   name=\"selection\"\n                   aria-setsize={totalRows}\n                   aria-posinset={rowIndex}\n                   tabindex=\"-1\"\n                   checked={checked}\n                   aria-checked={`${checked}`}\n                   ref={(el) => (input = el)}\n                   onClick={_ => onClick(row)}>\n            </input>\n        </div>\n    );\n}\n"]}