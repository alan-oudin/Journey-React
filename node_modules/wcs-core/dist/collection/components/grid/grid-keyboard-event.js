import { keyboardShortcutFromKeyboardEvent } from "../../utils/keyboard-event";
/**
 * We follow this https://www.w3.org/WAI/ARIA/apg/patterns/grid/
 * @param event
 * @param type
 */
export function getActionForKeyboardEvent(event, type) {
    const keyboardShortcut = keyboardShortcutFromKeyboardEvent(event);
    if (keyboardShortcut === 'UNKNOWN') {
        return [];
    }
    switch (keyboardShortcut) {
        case "UP_ARROW":
            return [{ kind: 'FocusCell', target: 'up' }];
        case "DOWN_ARROW":
            return [{ kind: 'FocusCell', target: 'down' }];
        case "LEFT_ARROW":
            return [{ kind: 'FocusCell', target: 'left' }];
        case "RIGHT_ARROW":
            return [{ kind: 'FocusCell', target: 'right' }];
        case "HOME":
            return [{ kind: 'FocusCell', target: 'first_of_row' }];
        case "END":
            return [{ kind: 'FocusCell', target: 'last_of_row' }];
        case "MAJ+SPACE":
            switch (type) {
                case "grid_selection_single":
                case "grid_selection_multiple":
                    return [{ kind: 'SelectRow', target: 'one' }];
                case "grid_no_selection":
                    break;
            }
            break;
        case "CTRL+A":
            switch (type) {
                case "grid_selection_multiple":
                    return [{ kind: 'SelectRow', target: 'all' }];
                case "grid_selection_single":
                case "grid_no_selection":
                    break;
            }
            break;
        case "CTRL+HOME":
            return [{ kind: 'FocusCell', target: 'first_of_grid' }];
        case "CTRL+END":
            return [{ kind: 'FocusCell', target: 'last_of_grid' }];
        default:
            break;
    }
    return [];
}
//# sourceMappingURL=grid-keyboard-event.js.map
