{"version":3,"file":"list-item.js","sourceRoot":"","sources":["../../../src/components/list-item/list-item.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAsB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAE7E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA8BG;AAMH,MAAM,OAAO,QAAQ;;yBAI4C,KAAK;;IAElE,MAAM;QACF,OAAO,CACH,EAAC,IAAI;YACD,6DAAM,IAAI,EAAC,MAAM,GAAE;YACnB,4DAAK,KAAK,EAAC,SAAS;gBAChB,4DAAK,KAAK,EAAC,QAAQ;oBACf;wBACI,6DAAM,IAAI,EAAC,OAAO,GAAE;wBACpB,6DAAM,IAAI,EAAC,YAAY,GAAE,CACvB;oBACN,6DAAM,IAAI,EAAC,SAAS,GAAE,CACpB;gBACN,6DAAM,IAAI,EAAC,aAAa,GAAE,CACxB,CACH,CACV,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, ComponentInterface, h, Host, Prop } from '@stencil/core';\n\n/**\n * Lists are used for grouping a collection of related items.\n * \n * Standard lists can be used either with or without icons. Depending on the context, the list can have one or more\n * actions (favourite, download, delete, etc.). Use standard lists with a unique action when each line has an action. \n * \n * ## Accessibility guidelines ðŸ’¡\n * > - You should wrap your list-items inside a container with a `role` attribute set to `list`. On each `wcs-list-item`, \n *   you should set a `role` attribute to `listitem`. See the code below.\n * actions (favourite, download, delete, etc.). Use standard lists with a unique action when each line has an action.\n *\n * @slot title - Slot containing the title of the list item\n * @slot properties - Slot containing the `<wcs-list-item-properties>` element\n * @slot actions - Slot containing the actions of the list item, prefer using some `<wcs-button>` inside\n * @slot description - Slot containing the description of the list item\n * \n * @cssprop --wcs-list-item-padding - Padding of the list item\n * @cssprop --wcs-list-item-border-width - Border width of the list item\n * @cssprop --wcs-list-item-border-color - Border color of the list item\n * @cssprop --wcs-list-item-background-color-default - Background color of the list item\n * @cssprop --wcs-list-item-background-color-hover - Background color of the list item when hovered\n * @cssprop --wcs-list-item-background-color-active - Background color of the list item when active\n * @cssprop --wcs-list-item-transition-duration - Transition duration of the list item\n * @cssprop --wcs-list-item-title-color - Color of the title of the list item\n * @cssprop --wcs-list-item-title-font-weight - Font weight of the title of the list item\n * @cssprop --wcs-list-item-title-line-height - Line height of the title of the list item\n * @cssprop --wcs-list-item-title-margin-bottom - Margin bottom of the title of the list item\n * @cssprop --wcs-list-item-icon-color - Color of the icon of the list item\n * @cssprop --wcs-list-item-icon-margin-right - Margin right of the icon of the list item\n * @cssprop --wcs-list-item-actions-margin-left - Margin left of the actions of the list item\n */\n@Component({\n    tag: 'wcs-list-item',\n    styleUrl: 'list-item.scss',\n    shadow: true\n})\nexport class ListItem implements ComponentInterface {\n    /**\n     * True if the item is active. Adds a background color that highlights it.\n     */\n    @Prop({ reflect: true, mutable: true }) activated: boolean = false;\n\n    render() {\n        return (\n            <Host>\n                <slot name=\"icon\"/>\n                <div class=\"content\">\n                    <div class=\"header\">\n                        <div>\n                            <slot name=\"title\"/>\n                            <slot name=\"properties\"/>\n                        </div>\n                        <slot name=\"actions\"/>\n                    </div>\n                    <slot name=\"description\"/>\n                </div>\n            </Host>\n        );\n    }\n}\n"]}