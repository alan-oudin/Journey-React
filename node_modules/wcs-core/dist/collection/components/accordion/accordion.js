import { h, Host } from "@stencil/core";
/**
 * The accordion component is a vertical stack of interactive headings used to toggle the display of further information.
 *
 * @cssprop --wcs-accordion-gap - Gap between accordion panels
 */
export class Accordion {
    constructor() {
        this.accordionPanels = [];
        this.hideActionText = true;
        this.highlight = false;
        this.groupContentWithHeader = false;
    }
    componentWillLoad() {
        this.accordionPanels = this.getAllAccordionPanelsFromHostElement();
        this.updateHideActiontextOnPanel();
        this.updateHighlightOnPanel();
        this.updateGroupContentWithHeader();
    }
    wcsOpenChangeHandler(event) {
        if (event.detail) {
            this.closeAllAccordionsExcept(event.target);
        }
    }
    updateHideActiontextOnPanel() {
        this.accordionPanels.forEach((opt) => {
            opt.hideActionText = this.hideActionText;
        });
    }
    updateHighlightOnPanel() {
        this.accordionPanels.forEach((opt) => {
            opt.highlight = this.highlight;
        });
    }
    updateGroupContentWithHeader() {
        this.accordionPanels.forEach((opt) => {
            opt.groupContentWithHeader = this.groupContentWithHeader;
        });
    }
    render() {
        return (h(Host, { key: 'b99f05f446c6848298b51f2360cdca1b4d253de3' }, h("slot", { key: 'f8f12b1ae5e2a43d64fbc14c15980109031b8ad0' })));
    }
    getAllAccordionPanelsFromHostElement() {
        return Array.from(this.el.children)
            .filter(el => el.tagName === 'WCS-ACCORDION-PANEL');
    }
    /**
     * Close all accordion panels except the one that match the eventTarget reference
     */
    closeAllAccordionsExcept(eventTarget) {
        this.accordionPanels.filter(a => a !== eventTarget).forEach(a => a.close());
    }
    static get is() { return "wcs-accordion"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["accordion.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["accordion.css"]
        };
    }
    static get properties() {
        return {
            "hideActionText": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies whether accordion-panel components should display the open/close text.\nif false, it won't show the open/close text in all accordion-panel."
                },
                "attribute": "hide-action-text",
                "reflect": true,
                "defaultValue": "true"
            },
            "highlight": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Specifies whether accordion-panel components should highlight when open with primary color.\nif true, the background color of the accordion-panel will be the primary color.\nif false, the background color of the accordion-panel will be wcs-light."
                },
                "attribute": "highlight",
                "reflect": true,
                "defaultValue": "false"
            },
            "groupContentWithHeader": {
                "type": "boolean",
                "mutable": false,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [{
                            "name": "deprecated",
                            "text": "**The content is now always grouped with the panel header**\n\n~~Specifies whether accordion-panel components should group the content with header in one card~~\n~~if true, there will be only one card with the header and the content~~\n~~Nothing change when the panel is close~~"
                        }],
                    "text": ""
                },
                "attribute": "group-content-with-header",
                "reflect": true,
                "defaultValue": "false"
            }
        };
    }
    static get elementRef() { return "el"; }
    static get watchers() {
        return [{
                "propName": "hideActionText",
                "methodName": "updateHideActiontextOnPanel"
            }, {
                "propName": "highlight",
                "methodName": "updateHighlightOnPanel"
            }, {
                "propName": "groupContentWithHeader",
                "methodName": "updateGroupContentWithHeader"
            }];
    }
    static get listeners() {
        return [{
                "name": "wcsOpenChange",
                "method": "wcsOpenChangeHandler",
                "target": undefined,
                "capture": false,
                "passive": false
            }];
    }
}
//# sourceMappingURL=accordion.js.map
