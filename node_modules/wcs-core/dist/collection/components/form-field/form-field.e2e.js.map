{"version":3,"file":"form-field.e2e.js","sourceRoot":"","sources":["../../../src/components/form-field/form-field.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nimport { setWcsContent } from \"../../utils/tests\";\n\ndescribe('Form field component', () => {\n    describe('Global', () => {\n        describe('Accessibility', () => {\n            it('Should put form-field label to aria-label of the spied element when non empty', async () => {\n                // Given\n                const page = await newE2EPage();\n                await setWcsContent(page, `\n                    <wcs-form-field>\n                        <wcs-label>Label form field</wcs-label>\n                        <wcs-input/>\n                    </wcs-form-field>\n                `);\n\n                // When\n                const input = await page.find('wcs-input >>> input');\n                await page.waitForChanges();\n\n                // Then\n                const ariaLabel = input.getAttribute('aria-label');\n                expect(ariaLabel).toBe('Label form field');\n            });\n            it('Should not put form-field label to aria-label of the spied element when empty', async () => {\n                // Given\n                const page = await newE2EPage();\n                await setWcsContent(page, `\n                    <wcs-form-field>\n                        <wcs-label></wcs-label>\n                        <wcs-input/>\n                    </wcs-form-field>\n                `);\n\n                // When\n                const input = await page.find('wcs-input >>> input');\n                await page.waitForChanges();\n\n                // Then\n                const ariaLabel = input.getAttribute('aria-label');\n                expect(ariaLabel).toBe(null);\n            });\n            it('Should not concatenate form-field label with form control (switch, checkbox label when form-field label is empty', async () => {\n                // Given\n                const page = await newE2EPage();\n                await setWcsContent(page, `\n                    <wcs-form-field>\n                        <wcs-label></wcs-label>\n                        <wcs-switch>Label switch</wcs-switch>\n                    </wcs-form-field>\n                `);\n\n                // When\n                const switchInput = await page.find('wcs-switch >>> input');\n                await page.waitForChanges();\n\n                // Then\n                const ariaLabel = switchInput.getAttribute('aria-label');\n                expect(ariaLabel).toBe('Label switch');\n            });\n        });\n    });\n    describe('With switch', () => {\n        describe('Accessibility', () => {\n            it('Should concatenate form-field label with switch label', async () => {\n                // Given\n                const page = await newE2EPage();\n                await setWcsContent(page, `\n                    <wcs-form-field>\n                        <wcs-label>Label form field</wcs-label>\n                        <wcs-switch>Label switch</wcs-switch>\n                    </wcs-form-field>\n                `);\n\n                // When\n                const switchInput = await page.find('wcs-switch >>> input');\n                await page.waitForChanges();\n\n                // Then\n                const ariaLabel = switchInput.getAttribute('aria-label');\n                expect(ariaLabel).toBe('Label form field Label switch');\n            });\n        });\n    });\n\n    describe('With checkbox', () => {\n        describe('Accessibility', () => {\n            it('Should concatenate form-field label with checkbox label', async () => {\n                // Given\n                const page = await newE2EPage();\n                await setWcsContent(page, `\n                    <wcs-form-field>\n                        <wcs-label>Label form field</wcs-label>\n                        <wcs-checkbox>Label checkbox</wcs-checkbox>\n                    </wcs-form-field>\n                `);\n\n                // When\n                const checkboxInput = await page.find('wcs-checkbox >>> input');\n                await page.waitForChanges();\n\n                // Then\n                const ariaLabel = checkboxInput.getAttribute('aria-label');\n                expect(ariaLabel).toBe('Label form field Label checkbox');\n            });\n        });\n    });\n    describe('With radio-group', () => {\n        describe('Accessibility', () => {\n            it('Should set aria-label on radio-group element', async () => {\n                // Given\n                const page = await newE2EPage();\n                await setWcsContent(page, `\n                    <wcs-form-field>\n                        <wcs-label>Label form field</wcs-label>\n                        <wcs-radio-group>\n                            <wcs-radio name=\"SA\" label=\"SNCF\" value=\"1\"></wcs-radio>\n                            <wcs-radio name=\"SA\" label=\"SNCF RÃ©seau\" value=\"2\"></wcs-radio>\n                            <wcs-radio name=\"SA\" label=\"SNCF Voyageurs\" value=\"3\"></wcs-radio>\n                        </wcs-radio>\n                        </wcs-radio-group>\n                    </wcs-form-field>\n                `);\n\n                // When\n                const radioGroup = await page.find('wcs-radio-group');\n                await page.waitForChanges();\n\n                // Then\n                const ariaLabel = radioGroup.getAttribute('aria-label');\n                expect(ariaLabel).toBe('Label form field');\n            });\n        });\n    });\n});\n"]}