{"version":3,"file":"input.e2e.js","sourceRoot":"","sources":["../../../src/components/input/input.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nimport { setWcsContent } from \"../../utils/tests\";\n\ndescribe('Input component', () => {\n    it('Should fire wcsInput event once when user typing one char', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-input name=\"wcs-input-1\" />\n        `);\n        const input = await page.find('wcs-input');\n        const inputEvent = await page.spyOnEvent('wcsInput');\n\n        // When\n        await input.click();\n        await input.press('B');\n\n        // Then\n        expect(inputEvent).toHaveReceivedEventTimes(1);\n    });\n    it('Should fire wcsInput event multiple times when user typing multiple chars', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-input name=\"wcs-input-1\" />\n        `);\n        const input = await page.find('wcs-input');\n        const inputEvent = await page.spyOnEvent('wcsInput');\n\n        // When\n        await input.click();\n        await input.press('B');\n        await input.press('o');\n        await input.press('n');\n        await input.press('j');\n        await input.press('o');\n        await input.press('u');\n        await input.press('r');\n\n        // Then\n        expect(inputEvent).toHaveReceivedEventTimes(7);\n    });\n    it('Should fire wcsChange event when user commit change with blur (tab)', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-input name=\"wcs-input-1\" />\n            <button>Focus</button>\n        `);\n        const input = await page.find('wcs-input');\n        const changeEvent = await page.spyOnEvent('wcsChange');\n\n        // When\n        await input.click();\n        await input.press('B');\n        await input.press('l');\n        await input.press('u');\n        await input.press('r');\n        await input.press('Tab');\n\n        await page.waitForChanges();\n\n        // Then\n        expect(changeEvent).toHaveReceivedEventTimes(1);\n        expect(changeEvent).toHaveReceivedEventDetail({ value: 'Blur' });\n    });\n    it('Should fire wcsChange event when user commit change with blur (click)', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-input name=\"wcs-input-1\"></wcs-input>\n            <button>Focus</button>\n        `);\n        const input = await page.find('wcs-input');\n        const button = await page.find('button');\n        const changeEvent = await page.spyOnEvent('wcsChange');\n\n        // When\n        await input.click();\n        await input.press('B');\n        await input.press('l');\n        await input.press('u');\n        await input.press('r');\n        await button.focus();\n\n        // Then\n        expect(changeEvent).toHaveReceivedEventTimes(1);\n        expect(changeEvent).toHaveReceivedEventDetail({ value: 'Blur' });\n    });\n    it('Should fire wcsChange event when user commit change with enter', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-input name=\"wcs-input-1\" />\n        `);\n        const input = await page.find('wcs-input');\n        const changeEvent = await page.spyOnEvent('wcsChange');\n\n        // When\n        await input.click();\n        await input.press('E');\n        await input.press('n');\n        await input.press('t');\n        await input.press('e');\n        await input.press('r');\n        await input.press('Enter');\n\n        // Then\n        expect(changeEvent).toHaveReceivedEventTimes(1);\n        expect(changeEvent).toHaveReceivedEventDetail({ value: 'Enter' });\n    });\n    it('Should not fire wcsChange event when value is programmatically set', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-input name=\"wcs-input-1\" />\n        `);\n        const input = await page.find('wcs-input');\n        const changeEvent = await page.spyOnEvent('wcsChange');\n\n        // When\n        input.setProperty('value', 'Programmatically set value');\n\n        // Then\n        expect(changeEvent).toHaveReceivedEventTimes(0);\n    });\n    it('Should not fire wcsInput event when value is programmatically set', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-input name=\"wcs-input-1\" />\n        `);\n        const input = await page.find('wcs-input');\n        const inputEvent = await page.spyOnEvent('wcsInput');\n\n        // When\n        input.setProperty('value', 'Programmatically set value');\n\n        // Then\n        expect(inputEvent).toHaveReceivedEventTimes(0);\n    });\n    it('Should have a default value when value attribute is set', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-input name=\"wcs-input-1\" value=\"Default value\" />\n        `);\n        const input = await page.find('wcs-input');\n\n        // Then\n        expect(await input.getProperty('value')).toBe('Default value');\n        expect(await (await page.find('wcs-input >>> input')).getProperty('value')).toBe('Default value');\n    });\n    it('Should have a default value when value property is set', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-input name=\"wcs-input-1\" />\n        `);\n        const input = await page.find('wcs-input');\n\n        // When\n        input.setProperty('value', 'Default value');\n        await page.waitForChanges();\n\n        // Then\n        expect(await input.getProperty('value')).toBe('Default value');\n        expect(await (await page.find('wcs-input >>> input')).getProperty('value')).toBe('Default value');\n    });\n});\n"]}