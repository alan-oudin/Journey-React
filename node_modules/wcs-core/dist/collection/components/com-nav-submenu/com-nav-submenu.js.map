{"version":3,"file":"com-nav-submenu.js","sourceRoot":"","sources":["../../../src/components/com-nav-submenu/com-nav-submenu.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    ComponentInterface,\n    h,\n    Host,\n    Listen,\n    Prop,\n    State,\n    Element,\n    Event,\n    EventEmitter, Method\n} from '@stencil/core';\nimport {MenuOpenedEventDetail} from '../com-nav/com-nav-interface';\nimport { inheritAriaAttributes, inheritAttributes, isEnterKey, isEscapeKey, isSpaceKey, setOrRemoveAttribute } from \"../../utils/helpers\";\nimport { comNavDidLoadWithResizeObserver, registerCloseHandlerForFocusOutEventOn } from \"../com-nav/com-nav-utils\";\nimport { ComNavSize } from \"../com-nav/com-nav-size\";\nimport { AriaAttributeName, MutableAriaAttribute } from \"../../utils/mutable-aria-attribute\";\n\nconst COM_NAV_SUBMENU_INHERITED_ATTRS = ['title'];\n\nconst WCS_COM_NAV_CATEGORY = 'WCS-COM-NAV-CATEGORY';\n\n/**\n * The com-nav-submenu is a subcomponent of `wcs-com-nav`. It represents an expandable menu containing more items or categories.\n * \n * @cssprop --wcs-com-nav-submenu-button-color - Color of the menu label\n * @cssprop --wcs-com-nav-submenu-button-font-weight - Font-weight of the menu label\n * @cssprop --wcs-com-nav-submenu-button-focus-outline-color - Focus outline color of the menu label\n * @cssprop --wcs-com-nav-submenu-button-gap - Gap inside menu label between text and arrow indicator\n * @cssprop --wcs-com-nav-submenu-desktop-menu-background-color - Background color of the menu (desktop)\n * @cssprop --wcs-com-nav-submenu-desktop-menu-text-color - Text color inside menu (desktop)\n * @cssprop --wcs-com-nav-submenu-desktop-menu-link-font-weight - Link font-weight color inside menu (desktop)\n * @cssprop --wcs-com-nav-submenu-desktop-menu-heading-font-weight - Heading font-weight of the menu (desktop)\n * @cssprop --wcs-com-nav-submenu-desktop-menu-description-font-weight - Description font-weight of the menu (desktop)\n * @cssprop --wcs-com-nav-submenu-desktop-menu-description-gap - Gap between heading and description in the description section of the menu (desktop)\n * @cssprop --wcs-com-nav-submenu-desktop-menu-padding - Padding of the menu (desktop)\n * @cssprop --wcs-com-nav-submenu-desktop-menu-items-padding-left - Padding left around link items group in menu (desktop)\n * @cssprop --wcs-com-nav-submenu-desktop-menu-items-padding-right - Padding right around link items group in menu (desktop)\n * @cssprop --wcs-com-nav-submenu-mobile-text-color - Text color for each text (mobile)\n * @cssprop --wcs-com-nav-submenu-mobile-link-font-weight - Link font-weight for each link (mobile)\n * @cssprop --wcs-com-nav-submenu-mobile-spacing-top - Spacing around top of the submenu (mobile)\n * @cssprop --wcs-com-nav-submenu-mobile-spacing-bottom - Spacing around bottom of the submenu (mobile)\n * @cssprop --wcs-com-nav-submenu-mobile-spacing-left - Spacing around left of the submenu (mobile)\n * @cssprop --wcs-com-nav-submenu-mobile-gap - Gap between each item in submenu (mobile)\n */\n@Component({\n    tag: 'wcs-com-nav-submenu',\n    styleUrl: 'com-nav-submenu.scss',\n    shadow: true,\n})\nexport class ComNavSubmenu implements ComponentInterface, MutableAriaAttribute {\n    @Element() private el!: HTMLWcsComNavSubmenuElement;\n    private nativeButton!: HTMLButtonElement;\n    private inheritedAttributes: { [k: string]: any } = {};\n    \n    @Prop() label: string;\n    @Prop() panelTitle: string;\n    @Prop() panelDescription: string;\n    @State() private menuOpen: boolean = false;\n    @Event() wcsSubmenuOpened: EventEmitter<MenuOpenedEventDetail>;\n\n    private menuItemsId = `wcs-com-nav-submenu-items`;\n    private resizeObserver: ResizeObserver;\n    /**\n     * To re-trigger re-render in order to render a button in case of desktop or a heading in mobile case\n     * @private\n     */\n    @State() public currentActiveSizing: ComNavSize = 'desktop';\n\n    componentWillLoad(): Promise<void> | void {\n        const slottedCategoryItems = this.el.querySelectorAll(':scope > wcs-com-nav-category:not([slot])');\n        registerCloseHandlerForFocusOutEventOn<HTMLWcsComNavCategoryElement>(slottedCategoryItems, WCS_COM_NAV_CATEGORY);\n\n        this.inheritedAttributes = {\n            ...inheritAriaAttributes(this.el),\n            ...inheritAttributes(this.el, COM_NAV_SUBMENU_INHERITED_ATTRS)\n        };\n    }\n\n    componentDidLoad(): void {\n        if(!this.resizeObserver) {\n            this.resizeObserver = comNavDidLoadWithResizeObserver(this);\n            this.resizeObserver.observe(document.body);\n        }\n    }\n\n    /**\n     * If the user clicks outside the menu, we close it\n     */\n    @Listen('click', {target: 'window'})\n    onWindowClickEvent(_: MouseEvent) {\n        if (this.menuOpen) this.menuOpen = false;\n    }\n\n    @Listen('wcsSubmenuOpened', {target: 'window'})\n    onSubmenuOpened(event: CustomEvent<MenuOpenedEventDetail>) {\n        // If the clicked menu is not this component, we close it\n        if (event.detail.menuElement !== this.el) {\n            this.menuOpen = false;\n        }\n    }\n\n    /**\n     * Close the menu when escape is pressed\n     * @param _event keydown event\n     */\n    @Listen('keydown', {target: 'window'})\n    onEscapeKeyDown(_event: KeyboardEvent) {\n        if (isEscapeKey(_event) && this.menuOpen) {\n            this.menuOpen = false;\n        }\n    }\n\n    @Method()\n    async setAriaAttribute(attr: AriaAttributeName, value: string | null | undefined) {\n        setOrRemoveAttribute(this.nativeButton, attr, value);\n    }\n\n    /**\n     * Close the menu\n     */\n    @Method()\n    async close() {\n        this.menuOpen = false;\n    }\n\n    /**\n     * Opens the menu\n     */\n    @Method()\n    async open() {\n        this.menuOpen = true;\n    }\n\n    /**\n     * When the user clicks on the menu, we do not propagate the native event and we launch a custom event to manage\n     * the closing of the menu correctly\n     */\n    private onClick(evt: MouseEvent) {\n        evt.stopPropagation();\n        this.wcsSubmenuOpened.emit({menuElement: this.el})\n    }\n\n    /**\n     * Handle key down on menu items\n     * @param _event the keyboard event\n     * @private\n     */\n    private handleMenuItemsKeyDown(_event: KeyboardEvent) {\n        if ((isSpaceKey(_event)) || isEnterKey(_event)) {\n            this.handleMenuItemsClick(_event);\n        }\n    }\n\n    private handleMenuItemsClick(evt: UIEvent) {\n        if ((evt.target as HTMLElement).tagName === 'A') {\n            this.close();\n        }\n    }\n\n    /**\n     * handle category item click to close the submenu\n     * @param _\n     * @private\n     */\n    @Listen('wcsClickOnFinalAction')\n    // @ts-ignore\n    private wcsCategoryItemClickedHandler(_: CustomEvent<UIEvent>) {\n        // If a category item is clicked, we close the submenu drawer;\n        this.close();\n    }\n\n    disconnectedCallback(): void {\n        this.resizeObserver?.disconnect();\n    }\n\n    render(): any {\n        return (\n            <Host onClick={evt => this.onClick(evt)} role=\"listitem\" data-open={this.menuOpen}>\n                {this.currentActiveSizing === 'mobile' ?\n                    <h2 role=\"presentation\" class=\"menu-button\">\n                        <span class=\"label\">{this.label}</span><span class=\"arrow-container\">\n                        <span class=\"arrow-icon\" data-open={this.menuOpen}>&#xf107;</span></span>\n                    </h2>\n                    : <button onClick={_ => this.menuOpen = !this.menuOpen}\n                              aria-expanded={this.menuOpen ? 'true' : 'false'}\n                              aria-controls={this.menuItemsId}\n                              class=\"menu-button\"\n                              ref={(el) => (this.nativeButton = el)}\n                              {...this.inheritedAttributes}>\n                        <span class=\"label\">{this.label}</span><span class=\"arrow-container\">\n                        <span aria-hidden=\"true\" class=\"arrow-icon\" data-open={this.menuOpen}>&#xf107;</span></span>\n                    </button>\n                }\n                <div class=\"drawer\" data-open={this.menuOpen} tabIndex={-1}>\n                <div class=\"drawer-container\">\n                    <div class=\"drawer-content\">\n                        <div class=\"drawer-description\">\n                            <h3>{this.panelTitle}</h3>\n                            <p>{this.panelDescription}</p>\n                        </div>\n                        <div role=\"list\" aria-label={this.label} id={this.menuItemsId} class=\"menu-items\"\n                             onClick={(evt) => this.handleMenuItemsClick(evt)}\n                                 onKeyDown={evt => this.handleMenuItemsKeyDown(evt)}>\n                                <slot/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n}\n"]}