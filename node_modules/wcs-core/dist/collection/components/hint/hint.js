import { h, Host } from "@stencil/core";
/**
 * The `wcs-hint` should always be wrapped in a `wcs-form-field`.
 * It is used to display an informative message under the field indicating an incorrect user input.
 *
 * ## Accessibility guidelines ðŸ’¡
 * - Provide a relevant hint message to inform the users about the format, how the data should be filled in, or what is the purpose of the field
 * - `aria-description` will be automatically added to the field for screen readers
 *
 * @cssprop --wcs-hint-color - Color of the text
 * @cssprop --wcs-hint-font-weight - Font weight of the text
 * @cssprop --wcs-hint-font-size-default - Font size default of the text
 * @cssprop --wcs-hint-font-size-small - Font size small of the text
 */
export class Hint {
    constructor() {
        this.small = false;
    }
    render() {
        return (h(Host, { key: 'e9b631d775aa7564172286a9ac280cffdc22aa24', slot: "messages" }, h("slot", { key: 'f8d4350acb11283861487cc1b3a5ba20c0674f82' })));
    }
    static get is() { return "wcs-hint"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["hint.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["hint.css"]
        };
    }
    static get properties() {
        return {
            "small": {
                "type": "boolean",
                "mutable": true,
                "complexType": {
                    "original": "boolean",
                    "resolved": "boolean",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Whether the component should display the small version of the hint"
                },
                "attribute": "small",
                "reflect": true,
                "defaultValue": "false"
            }
        };
    }
}
//# sourceMappingURL=hint.js.map
