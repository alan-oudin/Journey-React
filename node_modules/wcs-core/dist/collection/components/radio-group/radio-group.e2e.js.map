{"version":3,"file":"radio-group.e2e.js","sourceRoot":"","sources":["../../../src/components/radio-group/radio-group.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from \"@stencil/core/testing\";\nimport { setWcsContent } from \"../../utils/tests\";\n\ndescribe('Radio Group', () => {\n    it('should navigate to the first not disabled radio when pressing tab key', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n                <wcs-input></wcs-input>\n                <wcs-radio-group>\n                    <wcs-radio disabled id=\"radio-1\" value=\"1\"></wcs-radio>\n                    <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                    <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n                </wcs-radio-group>\n            `);\n        const firstTabbableItem = await page.find('wcs-input');\n        await firstTabbableItem.focus();\n\n        // When\n        await page.keyboard.press('Tab');\n\n        // Then\n        const activeElId = await page.evaluate(() => document.activeElement!.id);\n        expect(activeElId).toEqual('radio-2');\n    });\n\n    it('should not make unselected radios focusable when a radio is clicked', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n                <wcs-input></wcs-input>\n                <wcs-radio-group>\n                    <wcs-radio disabled id=\"radio-1\" value=\"1\"></wcs-radio>\n                    <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                    <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n                </wcs-radio-group>\n            `);\n\n        const wcsRadioGroup = await page.find('wcs-radio-group');\n        const input = await page.find('wcs-input');\n\n        // When\n        const radio3 = await wcsRadioGroup.find('#radio-3');\n        await radio3.click();\n        await input.focus();\n\n        // Then\n        await page.keyboard.press('Tab');\n        const activeElId = await page.evaluate(() => document.activeElement!.id);\n        expect(activeElId).toEqual('radio-3');\n    });\n\n    it('should checked the first radio when pressing space key', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n                <wcs-input></wcs-input>\n                <wcs-radio-group>\n                    <wcs-radio id=\"radio-1\" value=\"1\"></wcs-radio>\n                    <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                    <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n                </wcs-radio-group>\n            `);\n        const firstTabbableItem = await page.find('wcs-input');\n        await firstTabbableItem.focus();\n        await page.keyboard.press('Tab');\n\n        const wcsRadioGroup = await page.find('wcs-radio-group');\n\n        // When\n        await page.keyboard.press('Space');\n\n        // Then\n        const firstRadio = await wcsRadioGroup.find('#radio-1 >>> input');\n        expect(firstRadio.getAttribute('aria-checked')).toEqual('true')\n    });\n\n    it('should navigate to the checked radio when pressing tab key', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n                <wcs-input></wcs-input>\n                <wcs-radio-group value=\"3\">\n                    <wcs-radio disabled id=\"radio-1\" value=\"1\"></wcs-radio>\n                    <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                    <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n                </wcs-radio-group>\n            `);\n        const firstTabbableItem = await page.find('wcs-input');\n        await firstTabbableItem.focus();\n\n        // When\n        await page.keyboard.press('Tab');\n\n        // Then\n        const activeElId = await page.evaluate(() => document.activeElement!.id);\n        expect(activeElId).toEqual('radio-3');\n    });\n\n    describe('When pressing arrow down key', () => {\n        it('should checked the next radio not disabled when we are on the first radio and next radio is here', async () => {\n            // Given\n            const page = await newE2EPage();\n            await setWcsContent(page, `\n                    <wcs-radio-group>\n                        <wcs-radio id=\"radio-1\" value=\"1\"></wcs-radio>\n                        <wcs-radio disabled id=\"radio-2\" value=\"2\"></wcs-radio>\n                        <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n                    </wcs-radio-group>\n                `);\n\n            const wcsRadioGroup = await page.find('wcs-radio-group');\n            const firstRadio = await wcsRadioGroup.find('#radio-1');\n            await firstRadio.focus();\n\n            // When\n            await page.keyboard.press('ArrowDown');\n            await page.waitForChanges();\n\n            // Then\n            const secondRadio = await wcsRadioGroup.find('#radio-3 >>> input');\n            expect(secondRadio.getAttribute('aria-checked')).toEqual('true');\n        });\n\n        it('should checked the first not disabled radio when we are on the last radio', async () => {\n            // Given\n            const page = await newE2EPage();\n            await setWcsContent(page, `\n                    <wcs-radio-group>\n                        <wcs-radio disabled id=\"radio-1\" value=\"1\"></wcs-radio>\n                        <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                        <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n                    </wcs-radio-group>\n                `);\n\n            const wcsRadioGroup = await page.find('wcs-radio-group');\n            const lastRadio = await wcsRadioGroup.find('#radio-3');\n            await lastRadio.click();\n\n            // When\n            await page.keyboard.press('ArrowDown');\n            await page.waitForChanges();\n\n            // Then\n            const firstRadio = await wcsRadioGroup.find('#radio-2 >>> input');\n            expect(firstRadio.getAttribute('aria-checked')).toEqual('true');\n        });\n    });\n\n    describe('Events handling', () => {\n        it('should fire wcsRadioClick when we click on an unchecked radio', async () => {\n            // Given\n            const page = await newE2EPage();\n            await setWcsContent(page, `\n            <wcs-radio-group>\n                <wcs-radio id=\"radio-1\" value=\"1\"></wcs-radio>\n                <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n            </wcs-radio-group>\n        `);\n\n            const wcsRadioGroup = await page.find('wcs-radio-group');\n            const radio2 = await wcsRadioGroup.find('#radio-2');\n\n            const wcsRadioClick = await page.spyOnEvent('wcsRadioClick');\n\n            // When\n            await radio2.click();\n\n            // Then\n            expect(wcsRadioClick).toHaveReceivedEvent();\n        });\n\n        it('should fire wcsChange when we click or move to an unchecked radio', async () => {\n            // Given\n            const page = await newE2EPage();\n            await setWcsContent(page, `\n            <wcs-radio-group>\n                <wcs-radio id=\"radio-1\" value=\"1\"></wcs-radio>\n                <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n            </wcs-radio-group>\n        `);\n\n            const wcsRadioGroup = await page.find('wcs-radio-group');\n            const radio2 = await wcsRadioGroup.find('#radio-2');\n\n            const wcsChangeEvent = await page.spyOnEvent('wcsChange');\n\n            // When: Clicking on an unchecked radio\n            await radio2.click();\n\n            // Then\n            expect(wcsChangeEvent).toHaveReceivedEvent();\n\n            // When: Moving focus to another unchecked radio with keyboard\n            await radio2.focus();\n            await page.keyboard.press('ArrowDown'); // Move to the next radio\n\n            // Then\n            expect(wcsChangeEvent).toHaveReceivedEventTimes(2);\n        });\n\n        it('should fire wcsBlur and wcsFocus from the radios', async () => {\n            // Given\n            const page = await newE2EPage();\n            await setWcsContent(page, `\n            <wcs-radio-group>\n                <wcs-radio id=\"radio-1\" value=\"1\"></wcs-radio>\n                <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n            </wcs-radio-group>\n        `);\n\n            const radio = await page.find('#radio-1');\n\n            const wcsBlur = await page.spyOnEvent('wcsBlur');\n            const wcsFocus = await page.spyOnEvent('wcsFocus');\n\n            // When: Focusing on the first radio\n            await radio.focus();\n\n            // Then: Expect wcsFocus to be fired\n            expect(wcsFocus).toHaveReceivedEvent();\n\n            // When: Moving to the next radio\n            await page.keyboard.press('ArrowDown');\n            await page.waitForChanges();\n\n            // When: Moving focus to another radio\n            await page.keyboard.press('Tab');\n\n            // Then\n            expect(wcsBlur).toHaveReceivedEvent();\n            expect(wcsFocus).toHaveReceivedEventTimes(2);\n        });\n    });\n\n    describe('When pressing arrow up key', () => {\n        it('should checked the previous radio when we are on the last radio and previous radio is here', async () => {\n            // Given\n            const page = await newE2EPage();\n            await setWcsContent(page, `\n                    <wcs-radio-group>\n                        <wcs-radio id=\"radio-1\" value=\"1\"></wcs-radio>\n                        <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                        <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n                    </wcs-radio-group>\n                `);\n\n            const wcsRadioGroup = await page.find('wcs-radio-group');\n            const lastRadio = await wcsRadioGroup.find('#radio-3');\n            await lastRadio.focus();\n\n            // When\n            await page.keyboard.press('ArrowUp');\n            await page.waitForChanges();\n\n            // Then\n            const secondRadio = await wcsRadioGroup.find('#radio-2 >>> input');\n            expect(secondRadio.getAttribute('aria-checked')).toEqual('true');\n        });\n\n        it('should checked the last radio when we are on the first radio', async () => {\n            // Given\n            const page = await newE2EPage();\n            await setWcsContent(page, `\n                    <wcs-radio-group>\n                        <wcs-radio id=\"radio-1\" value=\"1\"></wcs-radio>\n                        <wcs-radio id=\"radio-2\" value=\"2\"></wcs-radio>\n                        <wcs-radio id=\"radio-3\" value=\"3\"></wcs-radio>\n                    </wcs-radio-group>\n                `);\n\n            const wcsRadioGroup = await page.find('wcs-radio-group');\n            const firstRadio = await wcsRadioGroup.find('#radio-1');\n            await firstRadio.focus();\n\n            // When\n            await page.keyboard.press('ArrowUp');\n            await page.waitForChanges();\n\n            // Then\n            const lastRadio = await wcsRadioGroup.find('#radio-3 >>> input');\n            expect(lastRadio.getAttribute('aria-checked')).toEqual('true');\n        });\n    });\n});\n"]}