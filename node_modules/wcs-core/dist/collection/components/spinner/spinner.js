import { h } from "@stencil/core";
/**
 * The spinner component is visual indicator that showing a process is happening in the background but the interface is
 * not yet ready for interaction.
 * If your page structure is simple or the loading time is long (> 300ms), use [wcs-skeleton](.?path=/docs/components-skeleton--documentation) instead.
 *
 * @cssprop --wcs-spinner-dashed-background-circle - The color of the dashed circle in the background
 * @cssprop --wcs-spinner-rotating-circle-color - The color of the rotating circle
 *
 * @cssprop --wcs-spinner-rotate-animation-duration - The duration of the rotation animation
 * @cssprop --wcs-spinner-dashed-animation-duration - The duration of the dash animation
 * @cssprop --wcs-spinner-growing-animation-duration - The duration of the growing animation
 */
export class Spinner {
    constructor() {
        this.mode = 'border';
    }
    render() {
        return (h("svg", { key: 'd953d95583147d9de0a9b9afdb4f31640ed62649', viewBox: "0 0 50 50" }, h("circle", { key: '475125d830b565ce8d7c09b7a30ff0aa7d42a243', class: "dashed-background-circle", cx: "25", cy: "25", r: "21", fill: "none" }), h("g", { key: 'd58556cea901fa24246d21354d29fea350bb70b9', class: "infinite-rotation-container" }, h("circle", { key: '604fef216b29cdaba777c8d9778f50de7dda7fcc', class: "dash-rotating-circle", cx: "25", cy: "25", r: "21", fill: "none" }))));
    }
    static get is() { return "wcs-spinner"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() {
        return {
            "$": ["spinner.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["spinner.css"]
        };
    }
    static get properties() {
        return {
            "mode": {
                "type": "string",
                "mutable": false,
                "complexType": {
                    "original": "WcsSpinnerMode",
                    "resolved": "\"border\" | \"growing\"",
                    "references": {
                        "WcsSpinnerMode": {
                            "location": "import",
                            "path": "./spinner-interface",
                            "id": "src/components/spinner/spinner-interface.ts::WcsSpinnerMode"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Indicates the spinner display mode.\nAccepted values: `border` or `growing`"
                },
                "attribute": "mode",
                "reflect": true,
                "defaultValue": "'border'"
            }
        };
    }
}
//# sourceMappingURL=spinner.js.map
