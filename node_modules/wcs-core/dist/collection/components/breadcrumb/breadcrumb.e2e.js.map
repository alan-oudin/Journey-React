{"version":3,"file":"breadcrumb.e2e.js","sourceRoot":"","sources":["../../../src/components/breadcrumb/breadcrumb.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\n\nimport { EXPAND_BTN_ARIA_LABEL_DEFAULT } from './breadcrumb-constants';\nimport { setWcsContent } from \"../../utils/tests\";\n\ndescribe('breadcrumb collapse', () => {\n    it('should hide breadcrumb item and respect default values for itemsBeforeCollapse and itemsAfterCollapse props', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-breadcrumb max-items=\"3\">\n                <wcs-breadcrumb-item class=\"home-item\">Home</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"train-item\">Train</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"ticket-item\">Tickets</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"detail-item\">Details</wcs-breadcrumb-item>\n            </wcs-breadcrumb>\n        `);\n\n        await page.waitForChanges();\n\n        const homeItem = await page.find('.home-item');\n        const trainItem = await page.find('.train-item');\n        const ticketItem = await page.find('.ticket-item');\n        const detail = await page.find('.detail-item');\n\n        // We don't use isVisible() because the item is still in the user DOM and the slot style don't seem to be taken\n        // into account with the isVisible() method\n        expect(homeItem.getAttribute(\"slot\")).toEqual(\"items-before-expand-btn\");\n        expect(trainItem.getAttribute(\"slot\")).toEqual(\"hidden-items\");\n        expect(ticketItem.getAttribute(\"slot\")).toEqual(\"items-after-expand-btn\");\n        expect(detail.getAttribute(\"slot\")).toEqual(\"items-after-expand-btn\");\n\n    });\n\n    it('should hide breadcrumb item and respect user values for itemsBeforeCollapse and itemsAfterCollapse props', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-breadcrumb max-items=\"3\" items-before-collapse=\"2\" items-after-collapse=\"1\">\n                <wcs-breadcrumb-item class=\"home-item\">Home</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"train-item\">Train</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"ticket-item\">Tickets</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"detail-item\">Details</wcs-breadcrumb-item>\n            </wcs-breadcrumb>\n        `);\n\n        await page.waitForChanges();\n\n        const homeItem = await page.find('.home-item');\n        const trainItem = await page.find('.train-item');\n        const ticketItem = await page.find('.ticket-item');\n        const detail = await page.find('.detail-item');\n\n        // We don't use isVisible() because the item is still in the user DOM and the slot style don't seem to be taken\n        // into account with the isVisible() method\n        expect(homeItem.getAttribute(\"slot\")).toEqual(\"items-before-expand-btn\");\n        expect(trainItem.getAttribute(\"slot\")).toEqual(\"items-before-expand-btn\");\n        expect(ticketItem.getAttribute(\"slot\")).toEqual(\"hidden-items\");\n        expect(detail.getAttribute(\"slot\")).toEqual(\"items-after-expand-btn\");\n    });\n\n    it('shouldn\\'t hide breadcrumb item if max item attribute is not defined', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-breadcrumb>\n                <wcs-breadcrumb-item class=\"home-item\">Home</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"train-item\">Train</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"ticket-item\">Tickets</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"detail-item\">Details</wcs-breadcrumb-item>\n            </wcs-breadcrumb>\n        `);\n\n        await page.waitForChanges();\n\n        const homeItem = await page.find('.home-item');\n        const trainItem = await page.find('.train-item');\n        const ticketItem = await page.find('.ticket-item');\n        const detail = await page.find('.detail-item');\n\n        // We don't use isVisible() because the item is still in the user DOM and the slot style don't seem to be taken\n        // into account with the isVisible() method\n        expect(homeItem.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n        expect(trainItem.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n        expect(ticketItem.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n        expect(detail.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n    });\n\n    it('sould hide appended breadcrumb item', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-breadcrumb max-items=\"3\">\n                <wcs-breadcrumb-item class=\"home-item\">Home</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"train-item\">Train</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"ticket-item\">Tickets</wcs-breadcrumb-item>\n            </wcs-breadcrumb>\n        `);\n\n        await page.waitForChanges();\n\n        await page.evaluate(() => {\n            const breadcrumbItem = document.createElement('wcs-breadcrumb-item');\n            breadcrumbItem.classList.add('detail-item');\n            breadcrumbItem.textContent = 'Details';\n            const breadcrumb = document.querySelector('wcs-breadcrumb');\n            breadcrumb.appendChild(breadcrumbItem);\n        });\n\n        await page.waitForChanges();\n\n        const homeItem = await page.find('.home-item');\n        const trainItem = await page.find('.train-item');\n        const ticketItem = await page.find('.ticket-item');\n        const detail = await page.find('.detail-item');\n\n        // We don't use isVisible() because the item is still in the user DOM and the slot style don't seem to be taken\n        // into account with the isVisible() method\n        expect(homeItem.getAttribute(\"slot\")).toEqual(\"items-before-expand-btn\");\n        expect(trainItem.getAttribute(\"slot\")).toEqual(\"hidden-items\");\n        expect(ticketItem.getAttribute(\"slot\")).toEqual(\"items-after-expand-btn\");\n        expect(detail.getAttribute(\"slot\")).toEqual(\"items-after-expand-btn\");\n    });\n\n    it('should display all breadcrumb items when the max-items prop is mutated in js', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-breadcrumb max-items=\"3\">\n                <wcs-breadcrumb-item class=\"home-item\">Home</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"train-item\">Train</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"ticket-item\">Tickets</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"detail-item\">Details</wcs-breadcrumb-item>\n            </wcs-breadcrumb>\n        `);\n\n        await page.waitForChanges();\n\n        const homeItem = await page.find('.home-item');\n        const trainItem = await page.find('.train-item');\n        const ticketItem = await page.find('.ticket-item');\n        const detail = await page.find('.detail-item');\n\n        // We don't use isVisible() because the item is still in the user DOM and the slot style don't seem to be taken\n        // into account with the isVisible() method\n        expect(homeItem.getAttribute(\"slot\")).toEqual(\"items-before-expand-btn\");\n        expect(trainItem.getAttribute(\"slot\")).toEqual(\"hidden-items\");\n        expect(ticketItem.getAttribute(\"slot\")).toEqual(\"items-after-expand-btn\");\n        expect(detail.getAttribute(\"slot\")).toEqual(\"items-after-expand-btn\");\n\n        const breadcrumb = await page.find('wcs-breadcrumb');\n        breadcrumb.setProperty('maxItems', undefined);\n\n        await page.waitForChanges();\n\n        expect(homeItem.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n        expect(trainItem.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n        expect(ticketItem.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n        expect(detail.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n    });\n\n    it('should collapse all breadcrumb items when the max-items prop is mutated in js', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-breadcrumb>\n                <wcs-breadcrumb-item class=\"home-item\">Home</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"train-item\">Train</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"ticket-item\">Tickets</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"detail-item\">Details</wcs-breadcrumb-item>\n            </wcs-breadcrumb>\n        `);\n\n        await page.waitForChanges();\n\n        const homeItem = await page.find('.home-item');\n        const trainItem = await page.find('.train-item');\n        const ticketItem = await page.find('.ticket-item');\n        const detail = await page.find('.detail-item');\n\n        // We don't use isVisible() because the item is still in the user DOM and the slot style don't seem to be taken\n        // into account with the isVisible() method\n\n        expect(homeItem.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n        expect(trainItem.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n        expect(ticketItem.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n        expect(detail.getAttribute(\"slot\")).toEqual(\"non-collapsed\");\n\n        const breadcrumb = await page.find('wcs-breadcrumb');\n        breadcrumb.setProperty('maxItems', 3);\n\n        await page.waitForChanges();\n\n        expect(homeItem.getAttribute(\"slot\")).toEqual(\"items-before-expand-btn\");\n        expect(trainItem.getAttribute(\"slot\")).toEqual(\"hidden-items\");\n        expect(ticketItem.getAttribute(\"slot\")).toEqual(\"items-after-expand-btn\");\n        expect(detail.getAttribute(\"slot\")).toEqual(\"items-after-expand-btn\");\n    });\n\n    it('should expand collapsed items when user click on expand button', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-breadcrumb max-items=\"3\">\n                <wcs-breadcrumb-item class=\"home-item\">Home</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"train-item\">Train</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"ticket-item\">Tickets</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"detail-item\">Details</wcs-breadcrumb-item>\n            </wcs-breadcrumb>\n        `);\n\n        await page.waitForChanges();\n\n        const nav = await page.find('wcs-breadcrumb >>> nav');\n        const expandBtn =\n            await page.find(`wcs-breadcrumb >>> button[aria-label=\"${EXPAND_BTN_ARIA_LABEL_DEFAULT}\"]`);\n        await expandBtn.click();\n\n        await page.waitForChanges();\n\n        expect(nav).toHaveClass('show-hidden-items');\n    });\n\n    it('should update aria-label attribute after the first render', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-breadcrumb>\n                <wcs-breadcrumb-item>Home</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item>Train</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item>Tickets</wcs-breadcrumb-item>\n            </wcs-breadcrumb>\n        `);\n        const wcsBreadcrumb = await page.find('wcs-breadcrumb');\n        await page.waitForChanges();\n\n        // When\n        await wcsBreadcrumb.callMethod('setAriaAttribute', 'aria-label', 'new label');\n        await page.waitForChanges();\n\n        // Then\n        const navEl = wcsBreadcrumb.shadowRoot.querySelector('nav');\n        expect(navEl.getAttribute('aria-label')).toBe('new label');\n    });\n\n    it('should update expand button aria-label attribute', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-breadcrumb max-items=\"3\">\n                <wcs-breadcrumb-item class=\"home-item\">Home</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"train-item\">Train</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"ticket-item\">Tickets</wcs-breadcrumb-item>\n                <wcs-breadcrumb-item class=\"detail-item\">Details</wcs-breadcrumb-item>\n            </wcs-breadcrumb>\n        `);\n        const wcsBreadcrumb = await page.find('wcs-breadcrumb');\n        await page.waitForChanges();\n\n        // When\n        const newAriaLabelValue = 'New label';\n        wcsBreadcrumb.setProperty('ariaLabelExpandButton', newAriaLabelValue);\n        await page.waitForChanges();\n\n        // Then\n        const expandBtn =\n            await page.find('wcs-breadcrumb >>> button.wcs-inner-button');\n        expect(expandBtn.getAttribute('aria-label')).toBe(newAriaLabelValue);\n    });\n});\n"]}