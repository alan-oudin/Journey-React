{"version":3,"file":"select-keyboard-event.js","sourceRoot":"","sources":["../../../src/components/select/select-keyboard-event.ts"],"names":[],"mappings":"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","sourcesContent":["import { keyboardShortcutFromKeyboardEvent } from \"../../utils/keyboard-event\";\n\n// Possibles Shortcut\n// ALT+DOWN_ARROW : open the listbox\n// ALT+UP_ARROW : open the listbox\n\n// MAJ+TAB : close the listbox, blur\n\n// UP_ARROW : focus / highlight the previous option\n// DOWN_ARROW : focus / highlight the next option\n// LEFT_ARROW : (unique) focus / highlight the previous option\n// RIGHT_ARROW : (unique) focus / highlight the previous option\n\n// HOME : select first option\n// END : select last option\n\n// PAGE_UP : select first option\n// PAGE_DOWN : select last option\n\n// ENTER : select currently focused / highlighted option\n// SPACE : select currently focused / highlighted option\n\n// TAB : close the listbox, blur\n// ESCAPE : close the listbox, if autocomplete mode also clears the textbox\n\nexport type KeyboardEventAssociatedAction = OpenSelect\n    | CloseSelect\n    | ClearAutocompleteInput\n    | ClearHighlight\n    | HighlightOption\n    | FocusOption\n    | MoveFocus\n    | SelectOption;\n\ntype OpenSelect = {kind: 'OpenSelect'};\ntype CloseSelect = {kind: 'CloseSelect', shouldBlur: boolean};\n\ntype ClearAutocompleteInput = {kind: 'ClearAutocompleteInput'};\n\ntype ClearHighlight = {kind: 'ClearHighlight'};\ntype HighlightOption = {kind: 'HighlightOption', target: 'next' | 'previous' | 'first' | 'last'};\n\ntype SelectOption = {kind: 'SelectOption', target: 'next' | 'previous' | 'first' | 'last' | 'lastHighlighted'};\n\ntype MoveFocus = {kind: 'MoveFocus', target: 'previous'};\n\ntype FocusOption = {kind: 'FocusOption', target: 'next' | 'previous' | 'first' | 'last' | 'lastFocused'};\n\n/**\n * We follow this https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/\n * @param event\n * @param currentState\n * @param type\n */\nexport function getActionForKeyboardEvent(event: KeyboardEvent, currentState: 'closed' | 'opened', type: 'autocomplete_unique' | 'autocomplete_multiple' | 'unique' | 'multiple'): KeyboardEventAssociatedAction[] {\n    const keyboardShortcut = keyboardShortcutFromKeyboardEvent(event);\n\n    if(keyboardShortcut === 'UNKNOWN') {\n        return [];\n    }\n\n    switch (currentState) {\n        case \"closed\":\n            // We handle every available shortcut for the closed state\n            switch (keyboardShortcut) {\n                case \"MAJ+TAB\":\n                    switch (type) {\n                        case \"unique\":\n                        case \"multiple\":\n                            return [];\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            // We need to move focus to previous focusable element in order to ignore the wcs-select component\n                            return [{kind: 'MoveFocus', target: 'previous'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'DOWN_ARROW':\n                    switch (type) {\n                        case \"unique\":\n                            return [{kind: 'SelectOption', target: 'next'}];\n                        case \"autocomplete_multiple\":\n                        case \"autocomplete_unique\":\n                            return [{kind: 'OpenSelect'}, {kind: 'HighlightOption', target: 'first'}];\n                        case \"multiple\":\n                            return [{kind: 'OpenSelect'}, {kind: 'FocusOption', target: 'first'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'RIGHT_ARROW':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            // Do nothing, we navigate between characters inside input field\n                            return [];\n                        case \"unique\":\n                            return [{kind: 'SelectOption', target: 'next'}];\n                        case \"multiple\":\n                            return [{kind: 'OpenSelect'}, {kind: 'FocusOption', target: 'first'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'UP_ARROW':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            return [{kind: 'OpenSelect'}, {kind: 'HighlightOption', target: 'last'}];\n                        case \"multiple\":\n                            break;\n                        case \"unique\":\n                            return [{kind: 'SelectOption', target: 'previous'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'LEFT_ARROW':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            // Do nothing, we navigate between characters inside input field\n                            return [];\n                        case \"unique\":\n                            return [{kind: 'SelectOption', target: 'previous'}];\n                        case \"multiple\":\n                            break;\n                        default:\n                            break;\n                    }\n                    break;\n                case 'ALT+DOWN_ARROW':\n                case 'ALT+UP_ARROW':\n                    switch (type) {\n                        case \"unique\":\n                            return [{kind: 'OpenSelect'}, {kind: 'FocusOption', target: 'first'}]\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                        case \"multiple\":\n                            return [{kind: 'OpenSelect'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'SPACE':\n                case 'ENTER':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            return [];\n                        case \"unique\":\n                        case \"multiple\":\n                            return [{kind: 'OpenSelect'}, {kind: 'FocusOption', target: 'lastFocused'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'ESCAPE':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            return [{kind: 'ClearAutocompleteInput'}];\n                        case 'unique':\n                        case 'multiple':\n                            return [];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'PAGE_UP':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                            return [];\n                        case \"autocomplete_multiple\":\n                            return [];\n                        case \"unique\":\n                            return [{kind: 'SelectOption', target: 'first'}];\n                        case \"multiple\":\n                            return [];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'PAGE_DOWN':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                            return [];\n                        case \"autocomplete_multiple\":\n                            return [];\n                        case \"unique\":\n                            return [{kind: 'SelectOption', target: 'last'}];\n                        case \"multiple\":\n                            return [];\n                        default:\n                            break;\n                    }\n                    break;\n                default:\n                    break;\n            }\n            break;\n        case 'opened':\n            // We handle every available shortcut for the opened state\n            switch (keyboardShortcut) {\n                case 'ESCAPE':\n                    switch (type) {\n                        case 'unique':\n                        case 'multiple':\n                        case 'autocomplete_unique':\n                        case 'autocomplete_multiple':\n                            return [{kind: 'CloseSelect', shouldBlur: false}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'ALT+UP_ARROW':\n                    switch (type) {\n                        case 'unique':\n                        case 'multiple':\n                            return [{kind: 'CloseSelect', shouldBlur: false}];\n                        case 'autocomplete_unique':\n                        case 'autocomplete_multiple':\n                            // We must keep select autocomplete opened\n                            return [];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'TAB':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                            return [{kind: 'SelectOption', target: 'lastHighlighted'}, {kind: 'CloseSelect', shouldBlur: false}];\n                        case \"autocomplete_multiple\":\n                            return [{kind: 'CloseSelect', shouldBlur: false}];\n                        case \"unique\":\n                        case \"multiple\":\n                            return [{kind: 'CloseSelect', shouldBlur: true}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'MAJ+TAB':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                            // We don't blur the select when we close it because we move the focus manually just after closing it.\n                            return [{kind: 'SelectOption', target: 'lastHighlighted'}, {kind: 'CloseSelect', shouldBlur: false}, {kind: 'MoveFocus', target: 'previous'}];\n                        case \"autocomplete_multiple\":\n                            // We don't blur the select when we close it because we move the focus manually just after closing it.\n                            return [{kind: 'CloseSelect', shouldBlur: false}, {kind: 'MoveFocus', target: 'previous'}];\n                        case \"unique\":\n                        case \"multiple\":\n                            return [{kind: 'CloseSelect', shouldBlur: true}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'UP_ARROW':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            return [{kind: 'HighlightOption', target: 'previous'}]\n                        case \"unique\":\n                        case \"multiple\":\n                            return [{kind: 'FocusOption', target: 'previous'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'LEFT_ARROW':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            // We do nothing (navigate between characters in input field)\n                            return [];\n                        case \"unique\":\n                        case \"multiple\":\n                            return [{kind: 'FocusOption', target: 'previous'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'DOWN_ARROW':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            return [{kind: 'HighlightOption', target: 'next'}]\n                        case \"unique\":\n                        case \"multiple\":\n                            return [{kind: 'FocusOption', target: 'next'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case 'RIGHT_ARROW':\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            // We do nothing (navigate between characters in input field)\n                            return [];\n                        case \"unique\":\n                        case \"multiple\":\n                            return [{kind: 'FocusOption', target: 'next'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case \"PAGE_UP\":\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            return [{kind: 'HighlightOption', target: 'first'}];\n                        case \"unique\":\n                        case \"multiple\":\n                            return [{kind: 'FocusOption', target: 'first'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case \"PAGE_DOWN\":\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                        case \"autocomplete_multiple\":\n                            return [{kind: 'HighlightOption', target: 'last'}];\n                        case \"unique\":\n                        case \"multiple\":\n                            return [{kind: 'FocusOption', target: 'last'}];\n                        default:\n                            break;\n                    }\n                    break;\n                case \"ENTER\":\n                    switch (type) {\n                        case \"autocomplete_unique\":\n                            return [{kind: 'SelectOption', target: 'lastHighlighted'}];\n                        case \"autocomplete_multiple\":\n                            return [{kind: 'SelectOption', target: 'lastHighlighted'}];\n                        case \"unique\":\n                        case \"multiple\":\n                            // Do nothing, let's select option emit an event\n                            break;\n                        default:\n                            break;\n                    }\n                    break;\n                default:\n                    break;\n            }\n            break;\n        default:\n            throw Error('Unknown error');\n    }\n    return [];\n}\n"]}