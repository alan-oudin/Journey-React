{"version":3,"file":"dropdown.e2e.js","sourceRoot":"","sources":["../../../src/components/dropdown/dropdown.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nimport { setWcsContent } from \"../../utils/tests\";\n\ndescribe('Dropdown component', () => {\n    let page;\n    let dropdown;\n    let dropdownButton;\n    let items;\n    let firstItem;\n    let lastItem;\n\n    beforeEach(async () => {\n        // Given\n        page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-dropdown mode=\"plain\" shape=\"normal\" size=\"m\">\n                <span slot=\"placeholder\">Dropdown</span>\n                <wcs-dropdown-item id=\"first-item\">Premier item</wcs-dropdown-item>\n                <wcs-dropdown-header>ACTION HEADER</wcs-dropdown-header>\n                <wcs-dropdown-item>Second item test avec un long texte</wcs-dropdown-item>\n                <wcs-dropdown-item>Dernier item</wcs-dropdown-item>\n                <wcs-dropdown-divider></wcs-dropdown-divider>\n                <wcs-dropdown-item id=\"last-item\">Dernier item</wcs-dropdown-item>\n            </wcs-dropdown>\n        `);\n        dropdown = await page.find('wcs-dropdown');\n        dropdownButton = await page.find('wcs-dropdown >>> #dropdown-button');\n        items = await page.findAll('wcs-dropdown-item');\n        firstItem = await page.find('wcs-dropdown-item#first-item');\n        lastItem = await page.find('wcs-dropdown-item#last-item');\n    });\n\n    describe('keyboard interactions', () => {\n        it('Enter should open menu and move focus to the first item', async () => {\n            // When\n            await dropdown.focus();\n            await page.keyboard.press('Enter');\n            await page.waitForChanges();\n\n            // Then\n            expect(dropdownButton).toEqualAttribute('aria-expanded', 'true');\n            const focusedItem = await page.find(':focus');\n            expect(focusedItem).toEqual(items[0]);\n        });\n\n        it('SPACE should open menu and move focus to the first item', async () => {\n            // When\n            await dropdown.focus();\n            await page.keyboard.press('Space');\n            await page.waitForChanges();\n\n            // Then\n            expect(dropdownButton).toEqualAttribute('aria-expanded', 'true');\n            const focusedItem = await page.find(':focus');\n            expect(focusedItem).toEqual(items[0]);\n        });\n\n        it('DOWN_ARROW should open menu and move focus to the first item', async () => {\n            // When\n            await dropdown.focus();\n            await page.keyboard.press('ArrowDown');\n            await page.waitForChanges();\n\n            // Then\n            expect(dropdownButton).toEqualAttribute('aria-expanded', 'true');\n            const focusedItem = await page.find(':focus');\n            expect(focusedItem).toEqual(items[0]);\n        });\n\n        it('UP_ARROW should open menu and move focus to the last item', async () => {\n            // When\n            await dropdown.focus();\n            await page.keyboard.press('ArrowUp');\n            await page.waitForChanges();\n\n            // Then\n            expect(dropdownButton).toEqualAttribute('aria-expanded', 'true');\n            const focusedItem = await page.find(':focus');\n            expect(focusedItem).toEqual(items[items.length - 1]);\n        });\n\n        it('HOME should focus the first item', async () => {\n            // When\n            await dropdownButton.click();\n            await page.waitForChanges();\n            await page.keyboard.press('Home');\n            await page.waitForChanges();\n\n            // Then\n            const focusedItem = await page.find(':focus');\n            expect(focusedItem).toEqual(firstItem);\n        });\n\n        it('END should focus the last item', async () => {\n            // When\n            await dropdownButton.click();\n            await page.waitForChanges();\n            await page.keyboard.press('End');\n            await page.waitForChanges();\n\n            // Then\n            const focusedItem = await page.find(':focus');\n            expect(focusedItem).toEqual(lastItem);\n        });\n\n        it('UP_ARROW should move focus to the previous item', async () => {\n            // When\n            await dropdownButton.click();\n            await page.keyboard.press('ArrowUp');\n            await page.waitForChanges();\n\n            // Then\n            const focusedItem = await page.find(':focus');\n            expect(focusedItem).toEqual(lastItem);\n        });\n\n        it('DOWN_ARROW should move focus to the next item', async () => {\n            // When\n            await dropdownButton.click();\n            await page.keyboard.press('ArrowDown');\n            await page.waitForChanges();\n\n            // Then\n            const focusedItem = await page.find(':focus');\n            expect(focusedItem).toEqual(items[1]);\n        });\n\n        it('ESCAPE should close the menu and set focus on the dropdown button', async () => {\n            // When\n            await dropdownButton.click();\n            await page.keyboard.press('Escape');\n            await page.waitForChanges();\n\n            // Then\n            expect(dropdownButton).toEqualAttribute('aria-expanded', 'false');\n            const focusedElement = await page.find(':focus');\n            expect(focusedElement).toEqual(dropdown);\n        });\n\n        it('TAB should close the menu and set focus on the dropdown button', async () => {\n            // When\n            await dropdownButton.click();\n            await page.keyboard.press('Tab');\n            await page.waitForChanges();\n\n            // Then\n            expect(dropdownButton).toEqualAttribute('aria-expanded', 'false');\n            const focusedElement = await page.find(':focus');\n            expect(focusedElement).toEqual(dropdown);\n        });\n\n        it('SHIFT+TAB should close the menu and set focus on the dropdown button', async () => {\n            // When\n            await dropdownButton.click();\n            await page.keyboard.down('Shift');\n            await page.keyboard.press('Tab');\n            await page.keyboard.up('Shift');\n            await page.waitForChanges();\n\n            // Then\n            expect(dropdownButton).toEqualAttribute('aria-expanded', 'false');\n            const focusedElement = await page.find(':focus');\n            expect(focusedElement).toEqual(dropdown);\n        });\n\n        it('ENTER should activate the item, close menu, and set focus on the dropdown button', async () => {\n            const itemClickSpy = await dropdown.spyOnEvent('wcsDropdownItemClick');\n\n            // When\n            await dropdownButton.click();\n            await items[0].focus();\n            await page.keyboard.press('Enter');\n            await page.waitForChanges();\n\n            // Then\n            expect(itemClickSpy).toHaveReceivedEventTimes(1);\n            expect(dropdownButton).toEqualAttribute('aria-expanded', 'false');\n            const focusedElement = await page.find(':focus');\n            expect(focusedElement).toEqual(dropdown);\n        });\n    });\n});\n"]}