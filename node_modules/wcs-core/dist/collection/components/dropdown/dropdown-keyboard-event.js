import { keyboardShortcutFromKeyboardEvent } from "../../utils/keyboard-event";
/**
 * We follow this pattern https://www.w3.org/WAI/ARIA/apg/patterns/menu-button/examples/menu-button-actions/
 * @param event
 * @param currentState
 * @param type
 */
export function getActionForKeyboardEvent(event, currentState) {
    const keyboardShortcut = keyboardShortcutFromKeyboardEvent(event);
    if (keyboardShortcut === 'UNKNOWN') {
        return [];
    }
    switch (currentState) {
        case 'closed':
            // We handle every available shortcut for the closed state
            switch (keyboardShortcut) {
                case 'UP_ARROW':
                    return [{ kind: 'OpenMenu' }, { kind: 'FocusItem', target: 'last' }];
                case 'DOWN_ARROW':
                    return [{ kind: 'OpenMenu' }, { kind: 'FocusItem', target: 'first' }];
                case 'SPACE':
                case 'ENTER':
                    return [{ kind: 'OpenMenu' }, { kind: 'FocusItem', target: 'first' }];
                default:
                    break;
            }
            break;
        case 'opened':
            // We handle every available shortcut for the opened state
            switch (keyboardShortcut) {
                case 'UP_ARROW':
                    return [{ kind: 'FocusItem', target: 'previous' }];
                case 'DOWN_ARROW':
                    return [{ kind: 'FocusItem', target: 'next' }];
                case 'HOME':
                    return [{ kind: 'FocusItem', target: 'first' }];
                case 'END':
                    return [{ kind: 'FocusItem', target: 'last' }];
                case 'ESCAPE':
                case 'MAJ+TAB':
                case 'TAB':
                    return [{ kind: 'CloseMenu' }];
                default:
                    break;
            }
            break;
        default:
            throw Error('Unknown error');
    }
    return [];
}
//# sourceMappingURL=dropdown-keyboard-event.js.map
