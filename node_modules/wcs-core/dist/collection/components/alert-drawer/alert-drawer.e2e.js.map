{"version":3,"file":"alert-drawer.e2e.js","sourceRoot":"","sources":["../../../src/components/alert-drawer/alert-drawer.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import { newE2EPage } from '@stencil/core/testing';\nimport { setWcsContent } from '../../utils/tests';\n\nconst WAITING_DELAY_BEFORE_ASSERTIONS = 1_000;\n\ndescribe('alert-drawer', () => {\n    it('should show an alert when using show() method', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert-drawer position=\"bottom-right\"></wcs-alert-drawer>\n        `);\n        const alertDrawer = await page.find('wcs-alert-drawer');\n\n        // When\n        await alertDrawer.callMethod('show', {\n            title: 'Test Title',\n            subtitle: 'Test Subtitle',\n            intent: 'success',\n            showProgressBar: false,\n            timeout: 0\n        });\n        await page.waitForChanges();\n\n        // Then\n        const alert = await page.find('wcs-alert-drawer >>> wcs-alert');\n        expect(alert).not.toBeNull();\n        const title = await page.find('wcs-alert-drawer >>> wcs-alert > [slot=\"title\"]');\n        const subtitle = await page.find('wcs-alert-drawer >>> wcs-alert > [slot=\"subtitle\"]');\n        expect(title.textContent).toBe('Test Title');\n        expect(subtitle.textContent).toBe('Test Subtitle');\n    });\n\n    it('should close the alert after timeout', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert-drawer></wcs-alert-drawer>\n        `);\n        const alertDrawer = await page.find('wcs-alert-drawer');\n\n        // When\n        await alertDrawer.callMethod('show', {\n            title: 'Test Title',\n            subtitle: 'Test Subtitle',\n            intent: 'success',\n            showProgressBar: false,\n            timeout: 100 // Short timeout for testing\n        });\n        await page.waitForChanges();\n\n        // Wait for the alert to be removed\n        await new Promise(resolve => setTimeout(resolve, WAITING_DELAY_BEFORE_ASSERTIONS)); // Wait a bit longer than the timeout\n\n        // Then\n        const alert = await page.find('wcs-alert-drawer >>> wcs-alert');\n        expect(alert).toBeNull();\n    });\n\n    it('should show progress bar when showProgressBar is true', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert-drawer></wcs-alert-drawer>\n        `);\n        const alertDrawer = await page.find('wcs-alert-drawer');\n\n        // When\n        await alertDrawer.callMethod('show', {\n            title: 'Test Title',\n            subtitle: 'Test Subtitle',\n            intent: 'success',\n            showProgressBar: true,\n            timeout: 5000\n        });\n        await page.waitForChanges();\n\n        // Then\n        const progressBar = await page.find('wcs-alert-drawer >>> wcs-alert >>> .progress-bar');\n        expect(progressBar).not.toBeNull();\n    });\n\n    it('should have correct ARIA attributes for accessibility', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert-drawer></wcs-alert-drawer>\n        `);\n        const alertDrawer = await page.find('wcs-alert-drawer');\n\n        // Then\n        expect(alertDrawer.getAttribute('role')).toBe('region');\n        expect(alertDrawer.getAttribute('aria-live')).toBe('polite');\n        expect(alertDrawer.getAttribute('aria-atomic')).toBe('true');\n    });\n\n    it('should handle multiple alerts', async () => {\n        // Given\n        const page = await newE2EPage();\n        await setWcsContent(page, `\n            <wcs-alert-drawer></wcs-alert-drawer>\n        `);\n        const alertDrawer = await page.find('wcs-alert-drawer');\n\n        // When\n        await alertDrawer.callMethod('show', {\n            title: 'First Alert',\n            subtitle: 'First Subtitle',\n            intent: 'success',\n            showProgressBar: false,\n            timeout: 0\n        });\n        await alertDrawer.callMethod('show', {\n            title: 'Second Alert',\n            subtitle: 'Second Subtitle',\n            intent: 'warning',\n            showProgressBar: false,\n            timeout: 0\n        });\n        await page.waitForChanges();\n\n        // Then\n        const alerts = await page.findAll('wcs-alert-drawer >>> wcs-alert');\n        expect(alerts.length).toBe(2);\n    });\n});\n"]}