{"version":3,"file":"keyboard-event.js","sourceRoot":"","sources":["../../src/utils/keyboard-event.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,QAAQ,EACR,UAAU,EACV,WAAW,EACX,SAAS,EACT,aAAa,EACb,WAAW,EACX,UAAU,EACV,QAAQ,EACX,MAAM,WAAW,CAAC;AAUnB;;;;GAIG;AACH,MAAM,UAAU,iCAAiC,CAAC,KAAoB;IAClE,MAAM,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC;IAEtB,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,QAAQ,GAAG,EAAE,CAAC;YACV,KAAK,GAAG;gBACJ,OAAO,WAAW,CAAC;YACvB,KAAK,KAAK;gBACN,OAAO,SAAS,CAAC;QACzB,CAAC;IACL,CAAC;SAAM,IAAI,KAAK,CAAC,MAAM,EAAE,CAAC;QACtB,QAAQ,GAAG,EAAE,CAAC;YACV,KAAK,WAAW;gBACZ,OAAO,gBAAgB,CAAC;YAC5B,KAAK,SAAS;gBACV,OAAO,cAAc,CAAC;QAC9B,CAAC;IACL,CAAC;SAAM,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;QACvB,IAAG,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;YAClB,OAAO,WAAW,CAAC;QACvB,CAAC;aAAM,IAAG,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YACxB,OAAO,UAAU,CAAC;QACtB,CAAC;aAAM,IAAI,GAAG,KAAK,GAAG,EAAE,CAAC;YACrB,OAAO,QAAQ,CAAC;QACpB,CAAC;IACL,CAAC;SAAM,CAAC;QACJ,QAAQ,GAAG,EAAE,CAAC;YACV,KAAK,WAAW;gBACZ,OAAO,YAAY,CAAC;YACxB,KAAK,SAAS;gBACV,OAAO,UAAU,CAAC;YACtB,KAAK,WAAW;gBACZ,OAAO,YAAY,CAAC;YACxB,KAAK,YAAY;gBACb,OAAO,aAAa,CAAC;QAC7B,CAAC;QAED,IAAG,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC;YAClB,OAAO,MAAM,CAAC;QAClB,CAAC;aAAM,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YACzB,OAAO,KAAK,CAAC;QACjB,CAAC;aAAM,IAAG,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YAC3B,OAAO,SAAS,CAAC;QACrB,CAAC;aAAM,IAAG,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;YAC7B,OAAO,WAAW,CAAC;QACvB,CAAC;aAAM,IAAG,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1B,OAAO,OAAO,CAAC;QACnB,CAAC;aAAM,IAAG,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;YAC1B,OAAO,OAAO,CAAC;QACnB,CAAC;aAAM,IAAG,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC;YACxB,OAAO,KAAK,CAAC;QACjB,CAAC;aAAM,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;YAC5B,OAAO,QAAQ,CAAC;QACpB,CAAC;IACL,CAAC;IAED,OAAO,SAAS,CAAC;AACrB,CAAC","sourcesContent":["import {\n    isEndKey,\n    isEnterKey,\n    isEscapeKey,\n    isHomeKey,\n    isPageDownKey,\n    isPageUpKey,\n    isSpaceKey,\n    isTabKey\n} from \"./helpers\";\n\ntype KeyboardShortcutCtrl = 'CTRL+A' | 'CTRL+HOME' | 'CTRL+END';\ntype KeyboardShortcutAlt = 'ALT+DOWN_ARROW' | 'ALT+UP_ARROW';\ntype KeyboardShortcutMaj = 'MAJ+TAB' | 'MAJ+SPACE';\ntype KeyboardShortcutDirectional = 'DOWN_ARROW' | 'UP_ARROW' | 'LEFT_ARROW' | 'RIGHT_ARROW';\ntype KeyboardShortcutOthers = 'HOME' | 'END' | 'PAGE_UP' | 'PAGE_DOWN' | 'ENTER' | 'SPACE' | 'TAB' | 'ESCAPE';\n\nexport type KeyboardShortcut = KeyboardShortcutCtrl | KeyboardShortcutAlt | KeyboardShortcutMaj | KeyboardShortcutDirectional | KeyboardShortcutOthers | 'UNKNOWN';\n\n/**\n * Convert a {@link KeyboardEvent} into a {@link KeyboardShortcut}\n * @param event - KeyboardEvent\n * @returns The corresponding {@link KeyboardShortcut}\n */\nexport function keyboardShortcutFromKeyboardEvent(event: KeyboardEvent): KeyboardShortcut {\n    const { key } = event;\n\n    if (event.shiftKey) {\n        switch (key) {\n            case ' ':\n                return 'MAJ+SPACE';\n            case 'Tab':\n                return 'MAJ+TAB';\n        }\n    } else if (event.altKey) {\n        switch (key) {\n            case 'ArrowDown':\n                return 'ALT+DOWN_ARROW';\n            case 'ArrowUp':\n                return 'ALT+UP_ARROW';\n        }\n    } else if (event.ctrlKey) {\n        if(isHomeKey(event)) {\n            return 'CTRL+HOME';\n        } else if(isEndKey(event)) {\n            return 'CTRL+END';\n        } else if (key === 'a') {\n            return 'CTRL+A';\n        }\n    } else {\n        switch (key) {\n            case 'ArrowDown':\n                return 'DOWN_ARROW';\n            case 'ArrowUp':\n                return 'UP_ARROW';\n            case 'ArrowLeft':\n                return 'LEFT_ARROW';\n            case 'ArrowRight':\n                return 'RIGHT_ARROW';\n        }\n\n        if(isHomeKey(event)) {\n            return 'HOME';\n        } else if (isEndKey(event)) {\n            return 'END';\n        } else if(isPageUpKey(event)) {\n            return 'PAGE_UP';\n        } else if(isPageDownKey(event)) {\n            return 'PAGE_DOWN';\n        } else if(isEnterKey(event)) {\n            return 'ENTER';\n        } else if(isSpaceKey(event)) {\n            return 'SPACE';\n        } else if(isTabKey(event)) {\n            return 'TAB';\n        } else if (isEscapeKey(event)) {\n            return 'ESCAPE';\n        }\n    }\n\n    return 'UNKNOWN';\n}\n"]}