import { WcsAlertDrawerPosition } from "./alert-drawer-interface";
import { WcsAlertConfig } from "../alert/alert-interface";
/**
 * Serve as a container for displaying `wcs-alert` components. Directly use this component to display alerts in your applications.
 *
 * ## Usage
 *
 * You can place the `wcs-alert-drawer` component anywhere in your application. It will be used to display alerts.
 * You need to set `position` property to define where the alert drawer will be displayed on the screen.
 *
 * About alerts order:
 * - alerts are ordered up-bottom if the position is `top` and bottom-up if the position is `bottom`
 *
 * ## Accessibility guidelines ðŸ’¡
 *
 * - The component has `aria-live="polite"` and `aria-atomic="true"` attributes to announce the new alerts to screen readers
 *
 * ## Configuration (on the web component)
 *
 * Per default, the `wcs-alert-drawer` is configured with:
 * - `position: 'top-right'`
 * - `showProgressBar: false`
 * - `timeout: 5000`
 *
 * When using the `WcsAlertDrawer::show(alert: WcsAlertConfig)` method, you can override the default configuration by
 * overriding it through the argument.
 * You can also set them in the `wcs-alert-drawer` component directly as attributes
 *
 * ```html
 * <wcs-alert-drawer position="top-right" show-progress-bar timeout="10000">
 * ```
 * With this configuration, all alerts will be displayed with a progress bar and a timeout of 10 seconds.
 *
 * @slot - the alert drawer content, where alerts you put as children will be displayed
 *
 * @cssprop --wcs-alert-drawer-gap - Gap between alerts
 * @cssprop --wcs-alert-drawer-margin-horizontal - Margin horizontal of the alert drawer
 * @cssprop --wcs-alert-drawer-margin-vertical - Margin vertical of the alert drawer
 * @cssprop --wcs-alert-drawer-hide-alert-animation-duration - Duration of the hide alert animation
 * @cssprop --wcs-alert-drawer-min-width - Minimum width of the alert drawer => define the width of the alerts
 */
export declare class AlertDrawer {
    private el;
    /**
     * Position of the alert drawer on the screen
     */
    position: WcsAlertDrawerPosition;
    /**
     * Timeout for the alert to be dismissed automatically
     */
    timeout: number;
    /**
     * Whether to show the progress bar or not
     */
    showProgressBar: boolean;
    private alertEventListeners;
    private timeoutId;
    private userPrefersReducedMotion;
    private alertsContainer;
    /**
     * Handles the dismissal of an alert
     * @param alert The alert element
     */
    private close;
    /**
     * Method exposed on `wcs-alert-drawer` to show an alert programmatically via the JS API
     * @example
     * Plain javascript (example inside a script tag):
     * ```javascript
     *  document.querySelector('wcs-alert-drawer').show({
     *      title: 'Alert title',
     *      subtitle: 'Alert subtitle',
     *      intent: 'info',
     *      showProgressBar: true,
     *      timeout: 5000
     *  });
     * @param alert The alert to show
     */
    show(alert: WcsAlertConfig): Promise<void>;
    private renderToast;
    render(): any;
    disconnectedCallback(): void;
}
