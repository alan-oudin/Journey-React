export type KeyboardEventAssociatedAction = OpenSelect | CloseSelect | ClearAutocompleteInput | ClearHighlight | HighlightOption | FocusOption | MoveFocus | SelectOption;
type OpenSelect = {
    kind: 'OpenSelect';
};
type CloseSelect = {
    kind: 'CloseSelect';
    shouldBlur: boolean;
};
type ClearAutocompleteInput = {
    kind: 'ClearAutocompleteInput';
};
type ClearHighlight = {
    kind: 'ClearHighlight';
};
type HighlightOption = {
    kind: 'HighlightOption';
    target: 'next' | 'previous' | 'first' | 'last';
};
type SelectOption = {
    kind: 'SelectOption';
    target: 'next' | 'previous' | 'first' | 'last' | 'lastHighlighted';
};
type MoveFocus = {
    kind: 'MoveFocus';
    target: 'previous';
};
type FocusOption = {
    kind: 'FocusOption';
    target: 'next' | 'previous' | 'first' | 'last' | 'lastFocused';
};
/**
 * We follow this https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-select-only/
 * @param event
 * @param currentState
 * @param type
 */
export declare function getActionForKeyboardEvent(event: KeyboardEvent, currentState: 'closed' | 'opened', type: 'autocomplete_unique' | 'autocomplete_multiple' | 'unique' | 'multiple'): KeyboardEventAssociatedAction[];
export {};
