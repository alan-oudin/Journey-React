import { WcsSize } from '../../shared-types';
export type ValidateFn<T> = (value: T) => boolean;
export type FormatFn<T> = (value: T) => string;
export interface EditableComponentUpdateEvent {
    /**
     * The new value sent by the component inside the `wcs-editable-field`
     */
    newValue: any;
    /**
     * Used to get from LOAD state to DISPLAY state.
     * Only use to commit the value, when the value is not systematically updated at every event firing
     */
    successHandler: () => void;
    /**
     * Used to get from LOAD state to DISPLAY state.
     * Only use to discard the value, when the value should not be updated
     */
    errorHandler: () => void;
}
export declare const WcsEditableFieldSizeValues: readonly ["m", "l"];
export type WcsEditableFieldSize = Extract<WcsSize, typeof WcsEditableFieldSizeValues[number]>;
export declare function isWcsEditableFieldSize(size: string): size is WcsEditableFieldSize;
export type EditableFieldType = 'input' | 'textarea' | 'select';
