import { ComponentInterface, EventEmitter } from '../../stencil-public-runtime';
import { WcsCellFormatter, WcsGridColumnSortChangeEventDetails, WcsSortFn, WcsSortOrder } from '../grid/grid-interface';
import { AriaAttributeName, MutableAriaAttribute } from "../../utils/mutable-aria-attribute";
/**
 * The grid column is a subcomponent of `wcs-grid` that represents a column of the table.
 *
 * @csspart [path]-column - CSS part for each column for styling. e.g: first_name-column, email-column
 */
export declare class GridColumn implements ComponentInterface, MutableAriaAttribute {
    private el;
    private nativeTh;
    private buttonOrDiv;
    private inheritedAttributes;
    /**
     * Represents the name of the field from the `data` object (e.g: first_name, last_name, email, ...)
     */
    path: string;
    /**
     * The name of the column displayed on the table (e.g: First Name, Last Name, Email, ...)
     */
    name: string;
    /**
     * Make the column sortable.
     */
    sort: boolean;
    /**
     * Customizable sort function to change the comparison of values.
     */
    sortFn: WcsSortFn;
    /**
     * Customizable formatter function to render the cell differently.
     */
    formatter: WcsCellFormatter;
    /**
     * Defines if the column sort is ascending or descending.
     * `none` = the column is not sorted.
     */
    sortOrder: WcsSortOrder;
    /**
     * Set the column `<th>` element width.
     */
    width: string;
    /**
     * Set to true if using a `wcs-custom-cell` linked to it.
     */
    customCells: boolean;
    /**
     * Flag to hide the column.
     */
    hidden: boolean;
    /**
     * Event emitted when the sort of the column is changed.
     */
    wcsSortChange: EventEmitter<WcsGridColumnSortChangeEventDetails>;
    /**
     * Event emitted if the column is dynamically switching visibility.
     */
    wcsHiddenChange: EventEmitter<boolean>;
    /**
     * This property mustn't be set by hand, it is set by the wcs-grid component to move the focus between grid columns
     * using keyboard.
     * @internal
     */
    cursorPosition: {
        col: number;
        row: number;
    };
    /**
     * This property mustn't be set by hand, it is set by the wcs-grid component to register the column index in a
     * grid in order to move the focus between the grid columns.
     * @internal
     */
    columnPosition: number;
    componentWillLoad(): Promise<void> | void;
    setAriaAttribute(attr: AriaAttributeName, value: string | null | undefined): Promise<void>;
    parseMyObjectProp(newValue: boolean): void;
    sortOrderChange(_: WcsSortOrder): void;
    emitSortConfig(): void;
    getSortOrderForAriaSort(sortOrder: WcsSortOrder): "none" | "ascending" | "descending";
    private getTabIndex;
    private getTagName;
    private delegateFocusToButton;
    render(): any;
    private onSortClick;
    private handleSortKeyDown;
}
