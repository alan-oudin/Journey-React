import { ComponentInterface, EventEmitter } from '../../stencil-public-runtime';
import { WcsGridPaginationChangeEventDetails } from '../grid/grid-interface';
import { AriaAttributeName, MutableAriaAttribute } from "../../utils/mutable-aria-attribute";
/**
 * The grid pagination is a subcomponent of `wcs-grid`, slotted in `grid-pagination` under the `<table>` element.
 *
 * @cssprop --wcs-grid-pagination-color - Text color of the grid pagination
 * @cssprop --wcs-grid-pagination-font-size - Font-size of the grid pagination
 * @cssprop --wcs-grid-pagination-font-weight - Font-weight of the grid pagination
 * @cssprop --wcs-grid-pagination-gap - Gap between the page size, number of elements and page management
 * @cssprop --wcs-grid-pagination-page-size-gap - Gap between the select and the text within the page size container
 * @cssprop --wcs-grid-pagination-counter-gap - Gap within the page management counter
 * @cssprop --wcs-grid-pagination-margin-top - Margin between the grid and the pagination
 * @cssprop --wcs-grid-pagination-arrow-color-inactive - Color of the inactive arrow
 * @cssprop --wcs-grid-pagination-arrow-color-active - Color of the active arrow
 */
export declare class GridPagination implements ComponentInterface, MutableAriaAttribute {
    private el;
    private nativeNav;
    private inheritedAttributes;
    static readonly INDEX_FIRST_PAGE: number;
    /**
     * Set the available page sizes in the pagination dropdown on the left.
     */
    availablePageSizes: number[];
    /**
     * The current page of the pagination. First page starts at index 0.
     */
    currentPage: number;
    /**
     * Maximum number of elements shown per page.
     * Default is the first value of `availablePageSizes`.
     */
    pageSize: number;
    /**
     * Total elements in the grid.
     * - **Grid in `Server mode`** : You have to set `itemsCount` = your total data length.
     * - **Grid not in Server mode** : Do not set it manually : itemsCount is set and updated every pagination refresh.
     */
    itemsCount: number;
    /**
     * Max number of pages.
     * - **Grid in `Server mode`** : You have to set `pageCount` = `itemsCount` divided by `pageSize`.
     * - **Grid not in Server mode** : Do not set it manually : pageCount is set and updated every pagination refresh.
     */
    pageCount: number;
    /**
     * Event emitted when the pagination changes.
     */
    wcsGridPaginationChange: EventEmitter<WcsGridPaginationChangeEventDetails>;
    componentWillLoad(): Promise<void> | void;
    setAriaAttribute(attr: AriaAttributeName, value: string | null | undefined): Promise<void>;
    private getWcsGrid;
    private lastPage;
    private nextPage;
    private canGoToNextPage;
    private previousPage;
    private canGoToPreviousPage;
    private firstPage;
    private onChangePageSize;
    /**
     * Move focus to the first grid cell after a pagination change
     */
    private focusFirstGridCell;
    private emitPaginationChange;
    render(): any;
}
