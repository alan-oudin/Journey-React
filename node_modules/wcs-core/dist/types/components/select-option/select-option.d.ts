import { EventEmitter, ComponentInterface } from '../../stencil-public-runtime';
import { SelectOptionChosedEvent } from './select-option-interface';
/**
 * The select option is a subcomponent of `wcs-select` that represents a single option in a select list.
 *
 * @cssprop --wcs-select-option-background-color-default - Default background color of the option
 * @cssprop --wcs-select-option-background-color-hover - Background color of the option when hovered
 * @cssprop --wcs-select-option-background-color-press - Background color of the option when pressed
 * @cssprop --wcs-select-option-background-color-selected - Background color of the option when selected
 * @cssprop --wcs-select-option-background-color-selected-hover - Background color of the option when selected and hovered
 * @cssprop --wcs-select-option-background-color-selected-press - Background color of the option when selected and pressed
 * @cssprop --wcs-select-option-background-color-selected-disabled - Background color of the option when selected and disabled
 * @cssprop --wcs-select-option-background-color-focus - Background color of the option when focused
 *
 * @cssprop --wcs-select-option-border-color-focus - Border color for autocomplete mode
 * @cssprop --wcs-select-option-border-width-focus - Border width for autocomplete mode
 * @cssprop --wcs-select-option-border-style-focus - Border style of the option when focused
 *
 * @cssprop --wcs-select-option-height - Height of the option
 * @cssprop --wcs-select-option-padding-horizontal - Horizontal padding of the option
 * @cssprop --wcs-select-option-padding-vertical - Vertical padding of the option
 *
 * @cssprop --wcs-select-option-text-font-size - Font size of the option text
 * @cssprop --wcs-select-option-text-font-weight - Font weight of the option text
 * @cssprop --wcs-select-option-text-color-default - Default color of the option text
 * @cssprop --wcs-select-option-text-color-focus - Color of the option text when focused
 * @cssprop --wcs-select-option-text-color-hover - Color of the option text when hovered
 * @cssprop --wcs-select-option-text-color-selected - Color of the option text when selected
 * @cssprop --wcs-select-option-text-color-disabled - Color of the option text when disabled
 *
 * @cssprop --wcs-select-option-checkbox-color - Color of the checkbox
 *
 * @cssprop --wcs-select-option-gap - Gap between the checkbox and the text
 * @cssprop --wcs-select-option-transition-duration - Duration of the transition
 */
export declare class SelectOption implements ComponentInterface {
    private el;
    private selectOptionId;
    /** Whether this option can be selected. */
    disabled: boolean;
    /** Whether this option is selected. */
    selected: boolean;
    /** This property mustn't be set by hand, it is used by the `wcs-select` component.
     * Applies a highlight design on the option for autocomplete mode.
     * @internal
     * @ignore
    */
    highlighted: boolean;
    /** The option value, not what's displayed, use inner text instead. */
    value?: any;
    /** Chip's displayed text color. */
    chipColor?: string;
    /** Chip's background color. */
    chipBackgroundColor?: string;
    /**
     * This property mustn't be set by hand, it is used by the `wcs-select` component.
     * If you want a multiple select, set `multiple` attribute on the parent select instead.
     * @internal
     * @ignore
     */
    multiple: boolean;
    wcsSelectOptionClick: EventEmitter<SelectOptionChosedEvent>;
    componentWillLoad(): void;
    private chooseOption;
    onMouseUp(event: MouseEvent): void;
    /**
     * Handles the keydown event to update the selection.
     * @param event keyboard event
     */
    handleKeydown(event: KeyboardEvent): void;
    render(): any;
}
